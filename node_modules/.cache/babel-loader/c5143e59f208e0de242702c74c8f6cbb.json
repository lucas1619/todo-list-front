{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/card/card-advance/CardAdvanceBrowserStates.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/card/card-advance/CardAdvanceBrowserStates.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBCQ2FyZCwgQkNhcmRIZWFkZXIsIEJDYXJkVGl0bGUsIEJDYXJkVGV4dCwgQkNhcmRCb2R5LCBCTWVkaWEsIEJJbWcgfSBmcm9tICdib290c3RyYXAtdnVlJzsKaW1wb3J0IFZ1ZUFwZXhDaGFydHMgZnJvbSAndnVlLWFwZXhjaGFydHMnOwppbXBvcnQgeyAkdGhlbWVDb2xvcnMgfSBmcm9tICdAdGhlbWVDb25maWcnOwovKiBlc2xpbnQtZGlzYWJsZSBnbG9iYWwtcmVxdWlyZSAqLwoKdmFyICR0cmFja0JnQ29sb3IgPSAnI2U5ZWNlZic7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQ2FyZDogQkNhcmQsCiAgICBCQ2FyZEhlYWRlcjogQkNhcmRIZWFkZXIsCiAgICBCQ2FyZFRpdGxlOiBCQ2FyZFRpdGxlLAogICAgQkNhcmRUZXh0OiBCQ2FyZFRleHQsCiAgICBCQ2FyZEJvZHk6IEJDYXJkQm9keSwKICAgIEJNZWRpYTogQk1lZGlhLAogICAgQkltZzogQkltZywKICAgIFZ1ZUFwZXhDaGFydHM6IFZ1ZUFwZXhDaGFydHMKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydERhdGE6IFtdLAogICAgICBjaGFydENsb25lOiB7fSwKICAgICAgY2hhcnRDb2xvcjogWyR0aGVtZUNvbG9ycy5wcmltYXJ5LCAkdGhlbWVDb2xvcnMud2FybmluZywgJHRoZW1lQ29sb3JzLnNlY29uZGFyeSwgJHRoZW1lQ29sb3JzLmluZm8sICR0aGVtZUNvbG9ycy5kYW5nZXJdLAogICAgICBjaGFydFNlcmllczogWzU0LjQsIDYuMSwgMTQuNiwgNC4yLCA4XSwKICAgICAgYnJvd3NlckRhdGE6IFt7CiAgICAgICAgYnJvd3NlckltZzogcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL2ljb25zL2dvb2dsZS1jaHJvbWUucG5nJyksCiAgICAgICAgbmFtZTogJ0dvb2dsZSBDaHJvbWUnLAogICAgICAgIHVzYWdlOiAnNTQuNCUnCiAgICAgIH0sIHsKICAgICAgICBicm93c2VySW1nOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvaWNvbnMvbW96aWxhLWZpcmVmb3gucG5nJyksCiAgICAgICAgbmFtZTogJ01vemlsYSBGaXJlZm94JywKICAgICAgICB1c2FnZTogJzYuMSUnCiAgICAgIH0sIHsKICAgICAgICBicm93c2VySW1nOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvaWNvbnMvYXBwbGUtc2FmYXJpLnBuZycpLAogICAgICAgIG5hbWU6ICdBcHBsZSBTYWZhcmknLAogICAgICAgIHVzYWdlOiAnMTQuNiUnCiAgICAgIH0sIHsKICAgICAgICBicm93c2VySW1nOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvaWNvbnMvaW50ZXJuZXQtZXhwbG9yZXIucG5nJyksCiAgICAgICAgbmFtZTogJ0ludGVybmV0IEV4cGxvcmVyJywKICAgICAgICB1c2FnZTogJzQuMiUnCiAgICAgIH0sIHsKICAgICAgICBicm93c2VySW1nOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvaWNvbnMvb3BlcmEucG5nJyksCiAgICAgICAgbmFtZTogJ09wZXJhIE1pbmknLAogICAgICAgIHVzYWdlOiAnOC40JScKICAgICAgfV0sCiAgICAgIGNoYXJ0OiB7CiAgICAgICAgc2VyaWVzOiBbNjVdLAogICAgICAgIG9wdGlvbnM6IHsKICAgICAgICAgIGdyaWQ6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UsCiAgICAgICAgICAgIHBhZGRpbmc6IHsKICAgICAgICAgICAgICBsZWZ0OiAtMTUsCiAgICAgICAgICAgICAgcmlnaHQ6IC0xNSwKICAgICAgICAgICAgICB0b3A6IC0xMiwKICAgICAgICAgICAgICBib3R0b206IC0xNQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgY29sb3JzOiBbJHRoZW1lQ29sb3JzLnByaW1hcnldLAogICAgICAgICAgcGxvdE9wdGlvbnM6IHsKICAgICAgICAgICAgcmFkaWFsQmFyOiB7CiAgICAgICAgICAgICAgaG9sbG93OiB7CiAgICAgICAgICAgICAgICBzaXplOiAnMjIlJwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgdHJhY2s6IHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR0cmFja0JnQ29sb3IKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGRhdGFMYWJlbHM6IHsKICAgICAgICAgICAgICAgIHNob3dPbjogJ2Fsd2F5cycsCiAgICAgICAgICAgICAgICBuYW1lOiB7CiAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgdmFsdWU6IHsKICAgICAgICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBzdHJva2U6IHsKICAgICAgICAgICAgbGluZUNhcDogJ3JvdW5kJwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYnJvd3NlckRhdGEubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgdmFyIGNoYXJ0Q2xvbmUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuY2hhcnQpKTsKICAgICAgY2hhcnRDbG9uZS5vcHRpb25zLmNvbG9yc1swXSA9IHRoaXMuY2hhcnRDb2xvcltpXTsKICAgICAgY2hhcnRDbG9uZS5zZXJpZXNbMF0gPSB0aGlzLmNoYXJ0U2VyaWVzW2ldOwogICAgICB0aGlzLmNoYXJ0RGF0YS5wdXNoKGNoYXJ0Q2xvbmUpOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SACAA,KADA,EACAC,WADA,EACAC,UADA,EACAC,SADA,EACAC,SADA,EACAC,MADA,EACAC,IADA,QAEA,eAFA;AAGA;AACA;AACA;;AACA;AACA;AACAC;AACAP,gBADA;AAEAC,4BAFA;AAGAC,0BAHA;AAIAC,wBAJA;AAKAC,wBALA;AAMAC,kBANA;AAOAC,cAPA;AAQAE;AARA,GADA;AAWAC,MAXA,kBAWA;AACA;AACAC,mBADA;AAEAC,oBAFA;AAGAC,8HAHA;AAIAC,4CAJA;AAKAC,oBACA;AACAC,sEADA;AAEAC,6BAFA;AAGAC;AAHA,OADA,EAMA;AACAF,uEADA;AAEAC,8BAFA;AAGAC;AAHA,OANA,EAWA;AACAF,qEADA;AAEAC,4BAFA;AAGAC;AAHA,OAXA,EAgBA;AACAF,0EADA;AAEAC,iCAFA;AAGAC;AAHA,OAhBA,EAqBA;AACAF,8DADA;AAEAC,0BAFA;AAGAC;AAHA,OArBA,CALA;AAgCAC;AACAC,oBADA;AAEAC;AACAC;AACAC,uBADA;AAEAC;AACAC,uBADA;AAEAC,wBAFA;AAGAC,sBAHA;AAIAC;AAJA;AAFA,WADA;AAUAC,wCAVA;AAWAC;AACAC;AACAC;AACAC;AADA,eADA;AAIAC;AACAC;AADA,eAJA;AAOAC;AACAC,gCADA;AAEApB;AACAM;AADA,iBAFA;AAKAe;AACAf;AADA;AALA;AAPA;AADA,WAXA;AA8BAgB;AACAC;AADA;AA9BA;AAFA;AAhCA;AAsEA,GAlFA;AAmFAC,SAnFA,qBAmFA;AACA;AACA;AACA7B;AACAA;AACA;AACA;AACA;AA1FA","names":["BCard","BCardHeader","BCardTitle","BCardText","BCardBody","BMedia","BImg","components","VueApexCharts","data","chartData","chartClone","chartColor","chartSeries","browserData","browserImg","name","usage","chart","series","options","grid","show","padding","left","right","top","bottom","colors","plotOptions","radialBar","hollow","size","track","background","dataLabels","showOn","value","stroke","lineCap","created"],"sourceRoot":"src/views/card/card-advance","sources":["CardAdvanceBrowserStates.vue"],"sourcesContent":["<template>\n  <b-card\n    no-body\n    class=\"card-browser-states\"\n  >\n    <b-card-header>\n      <div>\n        <b-card-title>Browser States</b-card-title>\n      </div>\n      <feather-icon\n        icon=\"MoreVerticalIcon\"\n        size=\"18\"\n        class=\"cursor-pointer\"\n      />\n    </b-card-header>\n\n    <!-- body -->\n    <b-card-body>\n      <b-card-text class=\"font-small-2\">\n        Counter August 2020\n      </b-card-text>\n      <div\n        v-for=\"(browser,index) in browserData\"\n        :key=\"browser.browserImg\"\n        class=\"browser-states\"\n      >\n        <b-media no-body>\n          <b-img\n            :src=\"browser.browserImg\"\n            alt=\"browser img\"\n            class=\"mr-1\"\n            height=\"30\"\n          />\n          <h6 class=\"align-self-center my-auto\">\n            {{ browser.name }}\n          </h6>\n        </b-media>\n        <div class=\"d-flex align-items-center\">\n          <span class=\"font-weight-bold text-body-heading mr-1\">{{ browser.usage }}</span>\n          <vue-apex-charts\n            type=\"radialBar\"\n            height=\"30\"\n            width=\"30\"\n            :options=\"chartData[index].options\"\n            :series=\"chartData[index].series\"\n          />\n        </div>\n      </div>\n    </b-card-body>\n    <!--/ body -->\n  </b-card>\n</template>\n\n<script>\nimport {\n  BCard, BCardHeader, BCardTitle, BCardText, BCardBody, BMedia, BImg,\n} from 'bootstrap-vue'\nimport VueApexCharts from 'vue-apexcharts'\nimport { $themeColors } from '@themeConfig'\n/* eslint-disable global-require */\nconst $trackBgColor = '#e9ecef'\nexport default {\n  components: {\n    BCard,\n    BCardHeader,\n    BCardTitle,\n    BCardText,\n    BCardBody,\n    BMedia,\n    BImg,\n    VueApexCharts,\n  },\n  data() {\n    return {\n      chartData: [],\n      chartClone: {},\n      chartColor: [$themeColors.primary, $themeColors.warning, $themeColors.secondary, $themeColors.info, $themeColors.danger],\n      chartSeries: [54.4, 6.1, 14.6, 4.2, 8],\n      browserData: [\n        {\n          browserImg: require('@/assets/images/icons/google-chrome.png'),\n          name: 'Google Chrome',\n          usage: '54.4%',\n        },\n        {\n          browserImg: require('@/assets/images/icons/mozila-firefox.png'),\n          name: 'Mozila Firefox',\n          usage: '6.1%',\n        },\n        {\n          browserImg: require('@/assets/images/icons/apple-safari.png'),\n          name: 'Apple Safari',\n          usage: '14.6%',\n        },\n        {\n          browserImg: require('@/assets/images/icons/internet-explorer.png'),\n          name: 'Internet Explorer',\n          usage: '4.2%',\n        },\n        {\n          browserImg: require('@/assets/images/icons/opera.png'),\n          name: 'Opera Mini',\n          usage: '8.4%',\n        },\n      ],\n      chart: {\n        series: [65],\n        options: {\n          grid: {\n            show: false,\n            padding: {\n              left: -15,\n              right: -15,\n              top: -12,\n              bottom: -15,\n            },\n          },\n          colors: [$themeColors.primary],\n          plotOptions: {\n            radialBar: {\n              hollow: {\n                size: '22%',\n              },\n              track: {\n                background: $trackBgColor,\n              },\n              dataLabels: {\n                showOn: 'always',\n                name: {\n                  show: false,\n                },\n                value: {\n                  show: false,\n                },\n              },\n            },\n          },\n          stroke: {\n            lineCap: 'round',\n          },\n        },\n      },\n    }\n  },\n  created() {\n    for (let i = 0; i < this.browserData.length; i += 1) {\n      const chartClone = JSON.parse(JSON.stringify(this.chart))\n      chartClone.options.colors[0] = this.chartColor[i]\n      chartClone.series[0] = this.chartSeries[i]\n      this.chartData.push(chartClone)\n    }\n  },\n}\n</script>\n"]}]}