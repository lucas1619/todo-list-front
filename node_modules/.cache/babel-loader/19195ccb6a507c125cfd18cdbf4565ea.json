{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/apps/chat/ChatContact.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/apps/chat/ChatContact.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgQkF2YXRhciwgQkJhZGdlIH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCB7IGZvcm1hdERhdGVUb01vbnRoU2hvcnQgfSBmcm9tICdAY29yZS91dGlscy9maWx0ZXInOwppbXBvcnQgdXNlQ2hhdCBmcm9tICcuL3VzZUNoYXQnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkF2YXRhcjogQkF2YXRhciwKICAgIEJCYWRnZTogQkJhZGdlCiAgfSwKICBwcm9wczogewogICAgdGFnOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgImRlZmF1bHQiOiAnZGl2JwogICAgfSwKICAgIHVzZXI6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIGlzQ2hhdENvbnRhY3Q6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVkZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAoKSB7CiAgICB2YXIgX3VzZUNoYXQgPSB1c2VDaGF0KCksCiAgICAgICAgcmVzb2x2ZUF2YXRhckJhZGdlVmFyaWFudCA9IF91c2VDaGF0LnJlc29sdmVBdmF0YXJCYWRnZVZhcmlhbnQ7CgogICAgcmV0dXJuIHsKICAgICAgZm9ybWF0RGF0ZVRvTW9udGhTaG9ydDogZm9ybWF0RGF0ZVRvTW9udGhTaG9ydCwKICAgICAgcmVzb2x2ZUF2YXRhckJhZGdlVmFyaWFudDogcmVzb2x2ZUF2YXRhckJhZGdlVmFyaWFudAogICAgfTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AAEA;AACAA;AACAC,oBADA;AAEAC;AAFA,GADA;AAKAC;AACAC;AACAC,kBADA;AAEA;AAFA,KADA;AAKAC;AACAD,kBADA;AAEAE;AAFA,KALA;AASAC;AACAH,mBADA;AAEAI;AAFA;AATA,GALA;AAmBAC,OAnBA,mBAmBA;AACA;AAAA;;AACA;AAAAC;AAAAC;AAAA;AACA;AAtBA","names":["components","BAvatar","BBadge","props","tag","type","user","required","isChatContact","dedfault","setup","formatDateToMonthShort","resolveAvatarBadgeVariant"],"sourceRoot":"src/views/apps/chat","sources":["ChatContact.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    v-on=\"$listeners\"\n  >\n    <b-avatar\n      size=\"42\"\n      :src=\"user.avatar\"\n      :badge=\"isChatContact\"\n      class=\"badge-minimal\"\n      :badge-variant=\"resolveAvatarBadgeVariant(user.status)\"\n      variant=\"transparent\"\n    />\n    <div class=\"chat-info flex-grow-1\">\n      <h5 class=\"mb-0\">\n        {{ user.fullName }}\n      </h5>\n      <p class=\"card-text text-truncate\">\n        {{ isChatContact ? user.chat.lastMessage.message : user.about }}\n      </p>\n    </div>\n    <div\n      v-if=\"isChatContact\"\n      class=\"chat-meta text-nowrap\"\n    >\n      <small class=\"float-right mb-25 chat-time\">{{ formatDateToMonthShort(user.chat.lastMessage.time, { hour: 'numeric', minute: 'numeric' }) }}</small>\n      <b-badge\n        v-if=\"user.chat.unseenMsgs\"\n        pill\n        variant=\"primary\"\n        class=\"float-right\"\n      >\n        {{ user.chat.unseenMsgs }}\n      </b-badge>\n    </div>\n  </component>\n</template>\n\n<script>\nimport { BAvatar, BBadge } from 'bootstrap-vue'\nimport { formatDateToMonthShort } from '@core/utils/filter'\nimport useChat from './useChat'\n\nexport default {\n  components: {\n    BAvatar,\n    BBadge,\n  },\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    user: {\n      type: Object,\n      required: true,\n    },\n    isChatContact: {\n      type: Boolean,\n      dedfault: false,\n    },\n  },\n  setup() {\n    const { resolveAvatarBadgeVariant } = useChat()\n    return { formatDateToMonthShort, resolveAvatarBadgeVariant }\n  },\n}\n</script>\n\n<style>\n\n</style>\n"]}]}