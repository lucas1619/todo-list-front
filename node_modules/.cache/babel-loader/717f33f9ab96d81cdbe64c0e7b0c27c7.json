{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/src/@fake-db/jwt/index.js","dependencies":[{"path":"/home/lucas/Desktop/test/src/@fake-db/jwt/index.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvbHVjYXMvRGVza3RvcC90ZXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgbW9jayBmcm9tICdAL0BmYWtlLWRiL21vY2snOwppbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7CnZhciBkYXRhID0gewogIHVzZXJzOiBbewogICAgaWQ6IDEsCiAgICBmdWxsTmFtZTogJ0pvaG4gRG9lJywKICAgIHVzZXJuYW1lOiAnam9obmRvZScsCiAgICBwYXNzd29yZDogJ2FkbWluJywKICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBnbG9iYWwtcmVxdWlyZQogICAgYXZhdGFyOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvYXZhdGFycy8xMy1zbWFsbC5wbmcnKSwKICAgIGVtYWlsOiAnYWRtaW5AZGVtby5jb20nLAogICAgcm9sZTogJ2FkbWluJywKICAgIGFiaWxpdHk6IFt7CiAgICAgIGFjdGlvbjogJ21hbmFnZScsCiAgICAgIHN1YmplY3Q6ICdhbGwnCiAgICB9XSwKICAgIGV4dHJhczogewogICAgICBlQ29tbWVyY2VDYXJ0SXRlbXNDb3VudDogNQogICAgfQogIH0sIHsKICAgIGlkOiAyLAogICAgZnVsbE5hbWU6ICdKYW5lIERvZScsCiAgICB1c2VybmFtZTogJ2phbmVkb2UnLAogICAgcGFzc3dvcmQ6ICdjbGllbnQnLAogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGdsb2JhbC1yZXF1aXJlCiAgICBhdmF0YXI6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltYWdlcy9hdmF0YXJzLzEtc21hbGwucG5nJyksCiAgICBlbWFpbDogJ2NsaWVudEBkZW1vLmNvbScsCiAgICByb2xlOiAnY2xpZW50JywKICAgIGFiaWxpdHk6IFt7CiAgICAgIGFjdGlvbjogJ3JlYWQnLAogICAgICBzdWJqZWN0OiAnQUNMJwogICAgfSwgewogICAgICBhY3Rpb246ICdyZWFkJywKICAgICAgc3ViamVjdDogJ0F1dGgnCiAgICB9XSwKICAgIGV4dHJhczogewogICAgICBlQ29tbWVyY2VDYXJ0SXRlbXNDb3VudDogNQogICAgfQogIH1dCn07IC8vICEgVGhlc2UgdHdvIHNlY3JldHMgc2hhbGwgYmUgaW4gLmVudiBmaWxlIGFuZCBub3QgaW4gYW55IG90aGVyIGZpbGUKCnZhciBqd3RDb25maWcgPSB7CiAgc2VjcmV0OiAnZGQ1ZjMwODktNDBjMy00MDNkLWFmMTQtZDBjMjI4YjA1Y2I0JywKICByZWZyZXNoVG9rZW5TZWNyZXQ6ICc3YzRjMWM1MC0zMjMwLTQ1YmYtOWVhZS1jOWIyZTQwMWM3NjcnLAogIGV4cGlyZVRpbWU6ICcxMG0nLAogIHJlZnJlc2hUb2tlbkV4cGlyZVRpbWU6ICcxMG0nCn07Cm1vY2sub25Qb3N0KCcvand0L2xvZ2luJykucmVwbHkoZnVuY3Rpb24gKHJlcXVlc3QpIHsKICB2YXIgX0pTT04kcGFyc2UgPSBKU09OLnBhcnNlKHJlcXVlc3QuZGF0YSksCiAgICAgIGVtYWlsID0gX0pTT04kcGFyc2UuZW1haWwsCiAgICAgIHBhc3N3b3JkID0gX0pTT04kcGFyc2UucGFzc3dvcmQ7CgogIHZhciBlcnJvciA9IHsKICAgIGVtYWlsOiBbJ1NvbWV0aGluZyB3ZW50IHdyb25nJ10KICB9OwogIHZhciB1c2VyID0gZGF0YS51c2Vycy5maW5kKGZ1bmN0aW9uICh1KSB7CiAgICByZXR1cm4gdS5lbWFpbCA9PT0gZW1haWwgJiYgdS5wYXNzd29yZCA9PT0gcGFzc3dvcmQ7CiAgfSk7CgogIGlmICh1c2VyKSB7CiAgICB0cnkgewogICAgICB2YXIgYWNjZXNzVG9rZW4gPSBqd3Quc2lnbih7CiAgICAgICAgaWQ6IHVzZXIuaWQKICAgICAgfSwgand0Q29uZmlnLnNlY3JldCwgewogICAgICAgIGV4cGlyZXNJbjogand0Q29uZmlnLmV4cGlyZVRpbWUKICAgICAgfSk7CiAgICAgIHZhciByZWZyZXNoVG9rZW4gPSBqd3Quc2lnbih7CiAgICAgICAgaWQ6IHVzZXIuaWQKICAgICAgfSwgand0Q29uZmlnLnJlZnJlc2hUb2tlblNlY3JldCwgewogICAgICAgIGV4cGlyZXNJbjogand0Q29uZmlnLnJlZnJlc2hUb2tlbkV4cGlyZVRpbWUKICAgICAgfSk7CgogICAgICB2YXIgdXNlckRhdGEgPSBfb2JqZWN0U3ByZWFkKHt9LCB1c2VyKTsKCiAgICAgIGRlbGV0ZSB1c2VyRGF0YS5wYXNzd29yZDsKICAgICAgdmFyIHJlc3BvbnNlID0gewogICAgICAgIHVzZXJEYXRhOiB1c2VyRGF0YSwKICAgICAgICBhY2Nlc3NUb2tlbjogYWNjZXNzVG9rZW4sCiAgICAgICAgcmVmcmVzaFRva2VuOiByZWZyZXNoVG9rZW4KICAgICAgfTsKICAgICAgcmV0dXJuIFsyMDAsIHJlc3BvbnNlXTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgZXJyb3IgPSBlOwogICAgfQogIH0gZWxzZSB7CiAgICBlcnJvciA9IHsKICAgICAgZW1haWw6IFsnRW1haWwgb3IgUGFzc3dvcmQgaXMgSW52YWxpZCddCiAgICB9OwogIH0KCiAgcmV0dXJuIFs0MDAsIHsKICAgIGVycm9yOiBlcnJvcgogIH1dOwp9KTsKbW9jay5vblBvc3QoJy9qd3QvcmVnaXN0ZXInKS5yZXBseShmdW5jdGlvbiAocmVxdWVzdCkgewogIHZhciBfSlNPTiRwYXJzZTIgPSBKU09OLnBhcnNlKHJlcXVlc3QuZGF0YSksCiAgICAgIHVzZXJuYW1lID0gX0pTT04kcGFyc2UyLnVzZXJuYW1lLAogICAgICBlbWFpbCA9IF9KU09OJHBhcnNlMi5lbWFpbCwKICAgICAgcGFzc3dvcmQgPSBfSlNPTiRwYXJzZTIucGFzc3dvcmQ7IC8vIElmIG5vdCBhbnkgb2YgZGF0YSBpcyBtaXNzaW5nIHJldHVybiA0MDAKCgogIGlmICghKHVzZXJuYW1lICYmIGVtYWlsICYmIHBhc3N3b3JkKSkgcmV0dXJuIFs0MDBdOwogIHZhciBpc0VtYWlsQWxyZWFkeUluVXNlID0gZGF0YS51c2Vycy5maW5kKGZ1bmN0aW9uICh1c2VyKSB7CiAgICByZXR1cm4gdXNlci5lbWFpbCA9PT0gZW1haWw7CiAgfSk7CiAgdmFyIGlzVXNlcm5hbWVBbHJlYWR5SW5Vc2UgPSBkYXRhLnVzZXJzLmZpbmQoZnVuY3Rpb24gKHVzZXIpIHsKICAgIHJldHVybiB1c2VyLnVzZXJuYW1lID09PSB1c2VybmFtZTsKICB9KTsKICB2YXIgZXJyb3IgPSB7CiAgICBwYXNzd29yZDogIXBhc3N3b3JkID8gWydQbGVhc2UgZW50ZXIgcGFzc3dvcmQnXSA6IG51bGwsCiAgICBlbWFpbDogZnVuY3Rpb24gKCkgewogICAgICBpZiAoIWVtYWlsKSByZXR1cm4gWydQbGVhc2UgZW50ZXIgeW91ciBlbWFpbC4nXTsKICAgICAgaWYgKGlzRW1haWxBbHJlYWR5SW5Vc2UpIHJldHVybiBbJ1RoaXMgZW1haWwgaXMgYWxyZWFkeSBpbiB1c2UuJ107CiAgICAgIHJldHVybiBudWxsOwogICAgfSgpLAogICAgdXNlcm5hbWU6IGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKCF1c2VybmFtZSkgcmV0dXJuIFsnUGxlYXNlIGVudGVyIHlvdXIgdXNlcm5hbWUuJ107CiAgICAgIGlmIChpc1VzZXJuYW1lQWxyZWFkeUluVXNlKSByZXR1cm4gWydUaGlzIHVzZXJuYW1lIGlzIGFscmVhZHkgaW4gdXNlLiddOwogICAgICByZXR1cm4gbnVsbDsKICAgIH0oKQogIH07CgogIGlmICghZXJyb3IudXNlcm5hbWUgJiYgIWVycm9yLmVtYWlsKSB7CiAgICB2YXIgdXNlckRhdGEgPSB7CiAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLAogICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgIGZ1bGxOYW1lOiAnJywKICAgICAgYXZhdGFyOiBudWxsLAogICAgICByb2xlOiAnYWRtaW4nLAogICAgICBhYmlsaXR5OiBbewogICAgICAgIGFjdGlvbjogJ21hbmFnZScsCiAgICAgICAgc3ViamVjdDogJ2FsbCcKICAgICAgfV0KICAgIH07IC8vIEFkZCB1c2VyIGlkCgogICAgdmFyIGxlbmd0aCA9IGRhdGEudXNlcnMubGVuZ3RoOwogICAgdmFyIGxhc3RJbmRleCA9IDA7CgogICAgaWYgKGxlbmd0aCkgewogICAgICBsYXN0SW5kZXggPSBkYXRhLnVzZXJzW2xlbmd0aCAtIDFdLmlkOwogICAgfQoKICAgIHVzZXJEYXRhLmlkID0gbGFzdEluZGV4ICsgMTsKICAgIGRhdGEudXNlcnMucHVzaCh1c2VyRGF0YSk7CiAgICB2YXIgYWNjZXNzVG9rZW4gPSBqd3Quc2lnbih7CiAgICAgIGlkOiB1c2VyRGF0YS5pZAogICAgfSwgand0Q29uZmlnLnNlY3JldCwgewogICAgICBleHBpcmVzSW46IGp3dENvbmZpZy5leHBpcmVUaW1lCiAgICB9KTsKCiAgICB2YXIgdXNlciA9IF9vYmplY3RTcHJlYWQoe30sIHVzZXJEYXRhKTsKCiAgICBkZWxldGUgdXNlci5wYXNzd29yZDsKICAgIHZhciByZXNwb25zZSA9IHsKICAgICAgdXNlckRhdGE6IHVzZXIsCiAgICAgIGFjY2Vzc1Rva2VuOiBhY2Nlc3NUb2tlbgogICAgfTsKICAgIHJldHVybiBbMjAwLCByZXNwb25zZV07CiAgfQoKICByZXR1cm4gWzQwMCwgewogICAgZXJyb3I6IGVycm9yCiAgfV07Cn0pOwptb2NrLm9uUG9zdCgnL2p3dC9yZWZyZXNoLXRva2VuJykucmVwbHkoZnVuY3Rpb24gKHJlcXVlc3QpIHsKICB2YXIgX0pTT04kcGFyc2UzID0gSlNPTi5wYXJzZShyZXF1ZXN0LmRhdGEpLAogICAgICByZWZyZXNoVG9rZW4gPSBfSlNPTiRwYXJzZTMucmVmcmVzaFRva2VuOwoKICB0cnkgewogICAgdmFyIF9qd3QkdmVyaWZ5ID0gand0LnZlcmlmeShyZWZyZXNoVG9rZW4sIGp3dENvbmZpZy5yZWZyZXNoVG9rZW5TZWNyZXQpLAogICAgICAgIGlkID0gX2p3dCR2ZXJpZnkuaWQ7CgogICAgdmFyIHVzZXJEYXRhID0gX29iamVjdFNwcmVhZCh7fSwgZGF0YS51c2Vycy5maW5kKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgIHJldHVybiB1c2VyLmlkID09PSBpZDsKICAgIH0pKTsKCiAgICB2YXIgbmV3QWNjZXNzVG9rZW4gPSBqd3Quc2lnbih7CiAgICAgIGlkOiB1c2VyRGF0YS5pZAogICAgfSwgand0Q29uZmlnLnNlY3JldCwgewogICAgICBleHBpcmVzSW46IGp3dENvbmZpZy5leHBpcmVzSW4KICAgIH0pOwogICAgdmFyIG5ld1JlZnJlc2hUb2tlbiA9IGp3dC5zaWduKHsKICAgICAgaWQ6IHVzZXJEYXRhLmlkCiAgICB9LCBqd3RDb25maWcucmVmcmVzaFRva2VuU2VjcmV0LCB7CiAgICAgIGV4cGlyZXNJbjogand0Q29uZmlnLnJlZnJlc2hUb2tlbkV4cGlyZVRpbWUKICAgIH0pOwogICAgZGVsZXRlIHVzZXJEYXRhLnBhc3N3b3JkOwogICAgdmFyIHJlc3BvbnNlID0gewogICAgICB1c2VyRGF0YTogdXNlckRhdGEsCiAgICAgIGFjY2Vzc1Rva2VuOiBuZXdBY2Nlc3NUb2tlbiwKICAgICAgcmVmcmVzaFRva2VuOiBuZXdSZWZyZXNoVG9rZW4KICAgIH07CiAgICByZXR1cm4gWzIwMCwgcmVzcG9uc2VdOwogIH0gY2F0Y2ggKGUpIHsKICAgIHZhciBlcnJvciA9ICdJbnZhbGlkIHJlZnJlc2ggdG9rZW4nOwogICAgcmV0dXJuIFs0MDEsIHsKICAgICAgZXJyb3I6IGVycm9yCiAgICB9XTsKICB9Cn0pOw=="},{"version":3,"sources":["/home/lucas/Desktop/test/src/@fake-db/jwt/index.js"],"names":["mock","jwt","data","users","id","fullName","username","password","avatar","require","email","role","ability","action","subject","extras","eCommerceCartItemsCount","jwtConfig","secret","refreshTokenSecret","expireTime","refreshTokenExpireTime","onPost","reply","request","JSON","parse","error","user","find","u","accessToken","sign","expiresIn","refreshToken","userData","response","e","isEmailAlreadyInUse","isUsernameAlreadyInUse","length","lastIndex","push","verify","newAccessToken","newRefreshToken"],"mappings":"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","sourcesContent":["import mock from '@/@fake-db/mock'\nimport jwt from 'jsonwebtoken'\n\nconst data = {\n  users: [\n    {\n      id: 1,\n      fullName: 'John Doe',\n      username: 'johndoe',\n      password: 'admin',\n      // eslint-disable-next-line global-require\n      avatar: require('@/assets/images/avatars/13-small.png'),\n      email: 'admin@demo.com',\n      role: 'admin',\n      ability: [\n        {\n          action: 'manage',\n          subject: 'all',\n        },\n      ],\n      extras: {\n        eCommerceCartItemsCount: 5,\n      },\n    },\n    {\n      id: 2,\n      fullName: 'Jane Doe',\n      username: 'janedoe',\n      password: 'client',\n      // eslint-disable-next-line global-require\n      avatar: require('@/assets/images/avatars/1-small.png'),\n      email: 'client@demo.com',\n      role: 'client',\n      ability: [\n        {\n          action: 'read',\n          subject: 'ACL',\n        },\n        {\n          action: 'read',\n          subject: 'Auth',\n        },\n      ],\n      extras: {\n        eCommerceCartItemsCount: 5,\n      },\n    },\n  ],\n}\n\n// ! These two secrets shall be in .env file and not in any other file\nconst jwtConfig = {\n  secret: 'dd5f3089-40c3-403d-af14-d0c228b05cb4',\n  refreshTokenSecret: '7c4c1c50-3230-45bf-9eae-c9b2e401c767',\n  expireTime: '10m',\n  refreshTokenExpireTime: '10m',\n}\n\nmock.onPost('/jwt/login').reply(request => {\n  const { email, password } = JSON.parse(request.data)\n\n  let error = {\n    email: ['Something went wrong'],\n  }\n\n  const user = data.users.find(u => u.email === email && u.password === password)\n\n  if (user) {\n    try {\n      const accessToken = jwt.sign({ id: user.id }, jwtConfig.secret, { expiresIn: jwtConfig.expireTime })\n      const refreshToken = jwt.sign({ id: user.id }, jwtConfig.refreshTokenSecret, {\n        expiresIn: jwtConfig.refreshTokenExpireTime,\n      })\n\n      const userData = { ...user }\n\n      delete userData.password\n\n      const response = {\n        userData,\n        accessToken,\n        refreshToken,\n      }\n\n      return [200, response]\n    } catch (e) {\n      error = e\n    }\n  } else {\n    error = {\n      email: ['Email or Password is Invalid'],\n    }\n  }\n\n  return [400, { error }]\n})\n\nmock.onPost('/jwt/register').reply(request => {\n  const { username, email, password } = JSON.parse(request.data)\n\n  // If not any of data is missing return 400\n  if (!(username && email && password)) return [400]\n\n  const isEmailAlreadyInUse = data.users.find(user => user.email === email)\n  const isUsernameAlreadyInUse = data.users.find(user => user.username === username)\n\n  const error = {\n    password: !password ? ['Please enter password'] : null,\n    email: (() => {\n      if (!email) return ['Please enter your email.']\n      if (isEmailAlreadyInUse) return ['This email is already in use.']\n      return null\n    })(),\n    username: (() => {\n      if (!username) return ['Please enter your username.']\n      if (isUsernameAlreadyInUse) return ['This username is already in use.']\n      return null\n    })(),\n  }\n\n  if (!error.username && !error.email) {\n    const userData = {\n      email,\n      password,\n      username,\n      fullName: '',\n      avatar: null,\n      role: 'admin',\n      ability: [\n        {\n          action: 'manage',\n          subject: 'all',\n        },\n      ],\n    }\n\n    // Add user id\n    const { length } = data.users\n    let lastIndex = 0\n    if (length) {\n      lastIndex = data.users[length - 1].id\n    }\n    userData.id = lastIndex + 1\n\n    data.users.push(userData)\n\n    const accessToken = jwt.sign({ id: userData.id }, jwtConfig.secret, { expiresIn: jwtConfig.expireTime })\n\n    const user = { ...userData }\n    delete user.password\n    const response = {\n      userData: user,\n      accessToken,\n    }\n\n    return [200, response]\n  }\n  return [400, { error }]\n})\n\nmock.onPost('/jwt/refresh-token').reply(request => {\n  const { refreshToken } = JSON.parse(request.data)\n\n  try {\n    const { id } = jwt.verify(refreshToken, jwtConfig.refreshTokenSecret)\n\n    const userData = { ...data.users.find(user => user.id === id) }\n\n    const newAccessToken = jwt.sign({ id: userData.id }, jwtConfig.secret, { expiresIn: jwtConfig.expiresIn })\n    const newRefreshToken = jwt.sign({ id: userData.id }, jwtConfig.refreshTokenSecret, {\n      expiresIn: jwtConfig.refreshTokenExpireTime,\n    })\n\n    delete userData.password\n    const response = {\n      userData,\n      accessToken: newAccessToken,\n      refreshToken: newRefreshToken,\n    }\n\n    return [200, response]\n  } catch (e) {\n    const error = 'Invalid refresh token'\n    return [401, { error }]\n  }\n})\n"]}]}