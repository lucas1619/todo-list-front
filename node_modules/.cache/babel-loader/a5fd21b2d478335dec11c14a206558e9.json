{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/extensions/drag-drop/DragDropSimple.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/extensions/drag-drop/DragDropSimple.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlL0JDYXJkQ29kZS52dWUnOwppbXBvcnQgeyBCTGlzdEdyb3VwSXRlbSwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCBkcmFnZ2FibGUgZnJvbSAndnVlZHJhZ2dhYmxlJzsKaW1wb3J0IFByaXNtIGZyb20gJ3Z1ZS1wcmlzbS1jb21wb25lbnQnOwppbXBvcnQgJ3ByaXNtanMnOwppbXBvcnQgJ3ByaXNtanMvdGhlbWVzL3ByaXNtLXRvbW9ycm93LmNzcyc7CmltcG9ydCB7IGNvZGVTaW1wbGUgfSBmcm9tICcuL2NvZGUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkNhcmRDb2RlOiBCQ2FyZENvZGUsCiAgICBkcmFnZ2FibGU6IGRyYWdnYWJsZSwKICAgIEJMaXN0R3JvdXBJdGVtOiBCTGlzdEdyb3VwSXRlbSwKICAgIFByaXNtOiBQcmlzbSwKICAgIEJDYXJkVGV4dDogQkNhcmRUZXh0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29kZVNpbXBsZTogY29kZVNpbXBsZSwKICAgICAgbGlzdDogWydNYXJ6aXBhbiBJIGxvdmUgSSBsb3ZlLiBTb3VmZmzDqSBkb251dCBJIGxvdmUgZ3VtbWkgYmVhcnMgcG93ZGVyLiBDYW5keSBkYW5pc2ggYmlzY3VpdC4nLCAnSGFsdmFoIGJvbmJvbiBib25ib24gYnJvd25pZSBzdWdhciBwbHVtLiBIYWx2YWggSSBsb3ZlIGN1cGNha2UgSSBsb3ZlLicsICdDYWtlIG11ZmZpbiBpY2luZyB0b3BwaW5nIHdhZmVyIHRvcHBpbmcgZ3VtbWkgYmVhcnMgYXBwbGUgcGllLicsICdDb3R0b24gY2FuZHkgZ3VtbWkgYmVhcnMgYmVhciBjbGF3IGNha2UgYnJvd25pZSBqZWxseS1vIGxlbW9uIGRyb3BzIGNyb2lzc2FudCBzd2VldCByb2xsLiddCiAgICB9OwogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAA;AACAC,wBADA;AAEAC,wBAFA;AAGAC,kCAHA;AAIAC,gBAJA;AAKAC;AALA,GADA;AAQAC,MARA,kBAQA;AACA;AACAC,4BADA;AAEAC,YACA,CACA,wFADA,EAEA,wEAFA,EAGA,gEAHA,EAIA,2FAJA;AAHA;AAUA;AAnBA","names":["components","BCardCode","draggable","BListGroupItem","Prism","BCardText","data","codeSimple","list"],"sourceRoot":"src/views/extensions/drag-drop","sources":["DragDropSimple.vue"],"sourcesContent":["<template>\n  <b-card-code title=\"Simple\">\n    <b-card-text>\n      <span>Simple Draggable list with in sync to original list. Remove </span>\n      <code>list</code>\n      <span> prop to break synchronization with original list.</span>\n    </b-card-text>\n\n    <!-- draggable -->\n    <draggable\n      v-model=\"list\"\n      tag=\"ul\"\n      class=\"list-group list-group-flush cursor-move\"\n    >\n      <b-list-group-item\n        v-for=\"(item, index) in list\"\n        :key=\"index\"\n        tag=\"li\"\n      >\n        <strong> {{ item }}</strong>\n      </b-list-group-item>\n    </draggable>\n\n    <!-- code -->\n    <prism\n      language=\"javascript\"\n      class=\"rounded mt-2\"\n    >list: {{ list }}\n    </prism>\n\n    <!-- togglable code -->\n    <template #code>\n      {{ codeSimple }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport { BListGroupItem, BCardText } from 'bootstrap-vue'\nimport draggable from 'vuedraggable'\nimport Prism from 'vue-prism-component'\nimport 'prismjs'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport { codeSimple } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    draggable,\n    BListGroupItem,\n    Prism,\n    BCardText,\n  },\n  data() {\n    return {\n      codeSimple,\n      list:\n      [\n        'Marzipan I love I love. Souffl√© donut I love gummi bears powder. Candy danish biscuit.',\n        'Halvah bonbon bonbon brownie sugar plum. Halvah I love cupcake I love.',\n        'Cake muffin icing topping wafer topping gummi bears apple pie.',\n        'Cotton candy gummi bears bear claw cake brownie jelly-o lemon drops croissant sweet roll.',\n      ],\n    }\n  },\n}\n</script>\n"]}]}