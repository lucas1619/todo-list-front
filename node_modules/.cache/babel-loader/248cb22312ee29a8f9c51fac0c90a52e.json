{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/src/@fake-db/data/card/card-statistics.js","dependencies":[{"path":"/home/lucas/Desktop/test/src/@fake-db/data/card/card-statistics.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IG1vY2sgZnJvbSAnQC9AZmFrZS1kYi9tb2NrJzsKdmFyIGRhdGEgPSB7CiAgc3Vic2NyaWJlcnNHYWluZWQ6IHsKICAgIHNlcmllczogW3sKICAgICAgbmFtZTogJ1N1YnNjcmliZXJzJywKICAgICAgZGF0YTogWzI4LCA0MCwgMzYsIDUyLCAzOCwgNjAsIDU1XQogICAgfV0sCiAgICBhbmFseXRpY3NEYXRhOiB7CiAgICAgIHN1YnNjcmliZXJzOiA5MjYwMAogICAgfQogIH0sCiAgcmV2ZW51ZUdlbmVyYXRlZDogewogICAgc2VyaWVzOiBbewogICAgICBuYW1lOiAnUmV2ZW51ZScsCiAgICAgIGRhdGE6IFszNTAsIDI3NSwgNDAwLCAzMDAsIDM1MCwgMzAwLCA0NTBdCiAgICB9XSwKICAgIGFuYWx5dGljc0RhdGE6IHsKICAgICAgcmV2ZW51ZTogOTc1MDAKICAgIH0KICB9LAogIHF1YXJ0ZXJseVNhbGVzOiB7CiAgICBzZXJpZXM6IFt7CiAgICAgIG5hbWU6ICdTYWxlcycsCiAgICAgIGRhdGE6IFsxMCwgMTUsIDcsIDEyLCAzLCAxNl0KICAgIH1dLAogICAgYW5hbHl0aWNzRGF0YTogewogICAgICBzYWxlczogJzM2JScKICAgIH0KICB9LAogIG9yZGVyc1JlY2V2aWVkOiB7CiAgICBzZXJpZXM6IFt7CiAgICAgIG5hbWU6ICdPcmRlcnMnLAogICAgICBkYXRhOiBbMTAsIDE1LCA4LCAxNSwgNywgMTIsIDhdCiAgICB9XSwKICAgIGFuYWx5dGljc0RhdGE6IHsKICAgICAgb3JkZXJzOiA5NzUwMAogICAgfQogIH0sCiAgc2l0ZVRyYWZmaWM6IHsKICAgIHNlcmllczogW3sKICAgICAgbmFtZTogJ1RyYWZmaWMgUmF0ZScsCiAgICAgIGRhdGE6IFsxNTAsIDIwMCwgMTI1LCAyMjUsIDIwMCwgMjUwXQogICAgfV0KICB9LAogIGFjdGl2ZVVzZXJzOiB7CiAgICBzZXJpZXM6IFt7CiAgICAgIG5hbWU6ICdBY3RpdmUgVXNlcnMnLAogICAgICBkYXRhOiBbNzUwLCAxMDAwLCA5MDAsIDEyNTAsIDEwMDAsIDEyMDAsIDExMDBdCiAgICB9XQogIH0sCiAgbmV3c2xldHRlcjogewogICAgc2VyaWVzOiBbewogICAgICBuYW1lOiAnTmV3c2xldHRlcicsCiAgICAgIGRhdGE6IFszNjUsIDM5MCwgMzY1LCA0MDAsIDM3NSwgNDAwXQogICAgfV0KICB9Cn07Cm1vY2sub25HZXQoJy9jYXJkL2NhcmQtc3RhdGlzdGljcy9zdWJzY3JpYmVycycpLnJlcGx5KGZ1bmN0aW9uICgpIHsKICByZXR1cm4gWzIwMCwgZGF0YS5zdWJzY3JpYmVyc0dhaW5lZF07Cn0pOwptb2NrLm9uR2V0KCcvY2FyZC9jYXJkLXN0YXRpc3RpY3MvcmV2ZW51ZScpLnJlcGx5KGZ1bmN0aW9uICgpIHsKICByZXR1cm4gWzIwMCwgZGF0YS5yZXZlbnVlR2VuZXJhdGVkXTsKfSk7Cm1vY2sub25HZXQoJy9jYXJkL2NhcmQtc3RhdGlzdGljcy9zYWxlcycpLnJlcGx5KGZ1bmN0aW9uICgpIHsKICByZXR1cm4gWzIwMCwgZGF0YS5xdWFydGVybHlTYWxlc107Cn0pOwptb2NrLm9uR2V0KCcvY2FyZC9jYXJkLXN0YXRpc3RpY3Mvb3JkZXJzJykucmVwbHkoZnVuY3Rpb24gKCkgewogIHJldHVybiBbMjAwLCBkYXRhLm9yZGVyc1JlY2V2aWVkXTsKfSk7Cm1vY2sub25HZXQoJy9jYXJkL2NhcmQtc3RhdGlzdGljcy9zaXRlLXRyYWZmaWMnKS5yZXBseShmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIFsyMDAsIGRhdGEuc2l0ZVRyYWZmaWNdOwp9KTsKbW9jay5vbkdldCgnL2NhcmQvY2FyZC1zdGF0aXN0aWNzL2FjdGl2ZS11c2VycycpLnJlcGx5KGZ1bmN0aW9uICgpIHsKICByZXR1cm4gWzIwMCwgZGF0YS5hY3RpdmVVc2Vyc107Cn0pOwptb2NrLm9uR2V0KCcvY2FyZC9jYXJkLXN0YXRpc3RpY3MvbmV3c2xldHRlcicpLnJlcGx5KGZ1bmN0aW9uICgpIHsKICByZXR1cm4gWzIwMCwgZGF0YS5uZXdzbGV0dGVyXTsKfSk7"},{"version":3,"sources":["/home/lucas/Desktop/test/src/@fake-db/data/card/card-statistics.js"],"names":["mock","data","subscribersGained","series","name","analyticsData","subscribers","revenueGenerated","revenue","quarterlySales","sales","ordersRecevied","orders","siteTraffic","activeUsers","newsletter","onGet","reply"],"mappings":"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","sourcesContent":["import mock from '@/@fake-db/mock'\n\nconst data = {\n  subscribersGained: {\n    series: [\n      {\n        name: 'Subscribers',\n        data: [28, 40, 36, 52, 38, 60, 55],\n      },\n    ],\n    analyticsData: {\n      subscribers: 92600,\n    },\n  },\n  revenueGenerated: {\n    series: [\n      {\n        name: 'Revenue',\n        data: [350, 275, 400, 300, 350, 300, 450],\n      },\n    ],\n    analyticsData: {\n      revenue: 97500,\n    },\n  },\n  quarterlySales: {\n    series: [\n      {\n        name: 'Sales',\n        data: [10, 15, 7, 12, 3, 16],\n      },\n    ],\n    analyticsData: {\n      sales: '36%',\n    },\n  },\n  ordersRecevied: {\n    series: [\n      {\n        name: 'Orders',\n        data: [10, 15, 8, 15, 7, 12, 8],\n      },\n    ],\n    analyticsData: {\n      orders: 97500,\n    },\n  },\n  siteTraffic: {\n    series: [\n      {\n        name: 'Traffic Rate',\n        data: [150, 200, 125, 225, 200, 250],\n      },\n    ],\n  },\n  activeUsers: {\n    series: [\n      {\n        name: 'Active Users',\n        data: [750, 1000, 900, 1250, 1000, 1200, 1100],\n      },\n    ],\n  },\n  newsletter: {\n    series: [\n      {\n        name: 'Newsletter',\n        data: [365, 390, 365, 400, 375, 400],\n      },\n    ],\n  },\n}\n\nmock.onGet('/card/card-statistics/subscribers').reply(() => [200, data.subscribersGained])\n\nmock.onGet('/card/card-statistics/revenue').reply(() => [200, data.revenueGenerated])\n\nmock.onGet('/card/card-statistics/sales').reply(() => [200, data.quarterlySales])\n\nmock.onGet('/card/card-statistics/orders').reply(() => [200, data.ordersRecevied])\n\nmock.onGet('/card/card-statistics/site-traffic').reply(() => [200, data.siteTraffic])\n\nmock.onGet('/card/card-statistics/active-users').reply(() => [200, data.activeUsers])\n\nmock.onGet('/card/card-statistics/newsletter').reply(() => [200, data.newsletter])\n"]}]}