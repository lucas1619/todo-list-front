{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/src/views/forms/form-element/form-checkbox/code.js","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/forms/form-element/form-checkbox/code.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/lucas/Desktop/test/src/views/forms/form-element/form-checkbox/code.js"],"names":["codeColor","codeCustom","codeSize","codeStates","codeBasic","codemultipleChoice","codeChangeNames","codeInlineStacked","codeIndeterminate"],"mappings":"AAAA,OAAO,IAAMA,SAAS,+tCAAf;AAkEP,OAAO,IAAMC,UAAU,gyBAAhB;AAgDP,OAAO,IAAMC,QAAQ,i+EAAd;AAmGP,OAAO,IAAMC,UAAU,2hCAAhB;AAiDP,OAAO,IAAMC,SAAS,i2BAAf;AAqDP,OAAO,IAAMC,kBAAkB,ymDAAxB;AAoEP,OAAO,IAAMC,eAAe,sqBAArB;AAmCP,OAAO,IAAMC,iBAAiB,kvDAAvB;AA0EP,OAAO,IAAMC,iBAAiB,0gCAAvB","sourcesContent":["export const codeColor = `\n<template>\n  <div class=\"demo-inline-spacing\">\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"A\"\n      class=\"custom-control-primary\"\n    >\n      Primary\n    </b-form-checkbox>\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"CC\"\n      class=\"custom-control-secondary\"\n    >\n      Secondary\n    </b-form-checkbox>\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"C\"\n      class=\"custom-control-success\"\n    >\n      Success\n    </b-form-checkbox>\n\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"F\"\n      class=\"custom-control-danger\"\n    >\n      Danger\n    </b-form-checkbox>\n\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"D\"\n      class=\"custom-control-warning\"\n    >\n      Warning\n    </b-form-checkbox>\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"G\"\n      class=\"custom-control-info\"\n    >\n      Info\n    </b-form-checkbox>\n  </div>\n</template>\n\n<script>\nimport { BFormCheckbox } from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BFormCheckbox,\n  },\n  data() {\n    return {\n      selected: ['A', 'C', 'CC', 'B', 'D', 'E', 'F', 'G'],\n    }\n  },\n}\n</script>\n`\n\nexport const codeCustom = `\n<template>\n  <div class=\"demo-inline-spacing\">\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"A\"\n    >\n      Checked\n    </b-form-checkbox>\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"B\"\n    >\n      Unchecked\n    </b-form-checkbox>\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"C\"\n      disabled\n    >\n      Checked disabled\n    </b-form-checkbox>\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"D\"\n      disabled\n    >\n      Unchecked disabled\n    </b-form-checkbox>\n  </div>\n</template>\n\n<script>\nimport { BFormCheckbox } from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BFormCheckbox,\n  },\n   data() {\n    return {\n      selected: ['B', 'C'],\n    }\n  },\n}\n</script>\n`\n\nexport const codeSize = `\n<template>\n  <div>\n  <h1>Custom Chekbox Sizes</h1>\n   <ul class=\"list-unstyled mb-0\">\n      <li class=\"d-inline-block mr-2 mb-1\">\n        <b-form-checkbox\n          v-model=\"selected\"\n          size=\"sm\"\n          value=\"x\"\n        >\n          Small\n        </b-form-checkbox>\n      </li>\n      <li class=\"d-inline-block mr-2 mb-1\">\n        <b-form-checkbox\n          v-model=\"selected\"\n          value=\"z\"\n        >\n          Default\n        </b-form-checkbox>\n      </li>\n      <li class=\"d-inline-block mr-2 mb-1\">\n        <b-form-checkbox\n          v-model=\"selected\"\n          size=\"lg\"\n          value=\"y\"\n        >\n          Large\n        </b-form-checkbox>\n      </li>\n    </ul>\n\n    <h1>Vuexy Chekbox Sizes</h1>\n    <ul class=\"list-unstyled mb-0\">\n      <li class=\"d-inline-block mr-2 mb-1\">\n        <b-form-checkbox\n          v-model=\"selected\"\n          value=\"a\"\n          plain\n          class=\"vs-checkbox-con pl-0\"\n        >\n          <span class=\"vs-checkbox vs-checkbox-sm\">\n            <span class=\"vs-checkbox--check\">\n              <i class=\"vs-icon feather icon-check\" />\n            </span>\n          </span>\n          <span class=\"vs-label\">small</span>\n        </b-form-checkbox>\n      </li>\n      <li class=\"d-inline-block mr-2 mb-1\">\n        <b-form-checkbox\n          v-model=\"selected\"\n          value=\"b\"\n          plain\n          class=\"vs-checkbox-con pl-0\"\n        >\n          <span class=\"vs-checkbox\">\n            <span class=\"vs-checkbox--check\">\n              <i class=\"vs-icon feather icon-check\" />\n            </span>\n          </span>\n          <span class=\"vs-label\">Default</span>\n        </b-form-checkbox>\n      </li>\n      <li class=\"d-inline-block mr-2 mb-1\">\n        <b-form-checkbox\n          v-model=\"selected\"\n          value=\"c\"\n          plain\n          class=\"vs-checkbox-con pl-0\"\n        >\n          <span class=\"vs-checkbox vs-checkbox-lg\">\n            <span class=\"vs-checkbox--check\">\n              <i class=\"vs-icon feather icon-check\" />\n            </span>\n          </span>\n          <span class=\"vs-label\">Large</span>\n        </b-form-checkbox>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { BFormCheckbox } from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BCardCode,\n    BFormCheckbox,\n  },\n  data: () => ({\n    selected: ['y', 'x', 'z', 'c'],\n  }),\n}\n</script>\n`\n\nexport const codeStates = `\n<template>\n  <div>\n    <b-form-checkbox-group\n      v-model=\"value\"\n      :options=\"options\"\n      :state=\"state\"\n      class=\"demo-inline-spacing\"\n      name=\"checkbox-validation\"\n    >\n      <b-form-invalid-feedback :state=\"state\">\n        Please select two\n      </b-form-invalid-feedback>\n      <b-form-valid-feedback :state=\"state\">\n        Thank you\n      </b-form-valid-feedback>\n    </b-form-checkbox-group>\n  </div>\n</template>\n\n<script>\nimport { BFormCheckboxGroup, BFormInvalidFeedback, BFormValidFeedback } from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BFormCheckboxGroup,\n    BFormInvalidFeedback,\n    BFormValidFeedback,\n    BCardCode,\n  },\n  data() {\n    return {\n      value: [],\n      options: [\n        { text: 'First Check', value: 'first' },\n        { text: 'Second Check', value: 'second' },\n        { text: 'Third Check', value: 'third' },\n      ],\n    }\n  },\n  computed: {\n    state() {\n      return this.value.length === 2\n    },\n  },\n}\n</script>\n`\n\nexport const codeBasic = `\n<template>\n  <div class=\"demo-inline-spacing\">\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"A\"\n      plain\n    >\n      Checked\n    </b-form-checkbox>\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"B\"\n      plain\n    >\n      Unchecked\n    </b-form-checkbox>\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"C\"\n      plain\n      disabled\n    >\n      Checked disabled\n    </b-form-checkbox>\n    <b-form-checkbox\n      v-model=\"selected\"\n      value=\"D\"\n      plain\n      disabled\n    >\n      Unchecked disabled\n    </b-form-checkbox>\n  </div>\n</template>\n\n<script>\nimport { BFormCheckbox } from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BFormCheckbox,\n    BCardCode,\n  },\n data() {\n    return {\n      selected: ['A', 'C']\n    }\n  },\n}\n</script>\n`\n\nexport const codemultipleChoice = `\n<template>\n  <div>\n     <!-- custom checkbox -->\n    <b-form-group label=\"Using options array:\">\n      <b-form-checkbox-group\n        id=\"checkbox-group-1\"\n        v-model=\"selected\"\n        :options=\"options\"\n        name=\"flavour-1\"\n        class=\"demo-inline-spacing\"\n      />\n    </b-form-group>\n\n    <!-- using sub-components -->\n    <b-form-group label=\"Using sub-components:\">\n      <b-form-checkbox-group\n        id=\"checkbox-group-2\"\n        v-model=\"selected\"\n        name=\"flavour-2\"\n        class=\"demo-inline-spacing\"\n      >\n        <b-form-checkbox value=\"orange\">\n          Orange\n        </b-form-checkbox>\n        <b-form-checkbox value=\"apple\">\n          Apple\n        </b-form-checkbox>\n        <b-form-checkbox value=\"pineapple\">\n          Pineapple\n        </b-form-checkbox>\n        <b-form-checkbox value=\"grape\">\n          Grape\n        </b-form-checkbox>\n      </b-form-checkbox-group>\n    </b-form-group>\n\n    <b-card-text class=\"mb-0\">\n      Selected: <strong>{{ selected }}</strong>\n    </b-card-text>\n  </div>\n</template>\n\n<script>\nimport {BFormGroup, BFormCheckboxGroup, BCardText, BFormCheckbox} from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BFormCheckbox,\n    BFormCheckboxGroup,\n    BCardCode,\n    BFormGroup,\n  },\n  data() {\n    return {\n      selected: [],\n      options: [\n        { text: 'Orange', value: 'orange' },\n        { text: 'Apple', value: 'apple' },\n        { text: 'Pineapple', value: 'pineapple' },\n        { text: 'Grape', value: 'grape' },\n      ],\n    }\n  },\n}\n</script>\n`\n\nexport const codeChangeNames = `\n<template>\n  <b-form-checkbox-group\n    v-model=\"selected\"\n    :options=\"options\"\n    value-field=\"item\"\n    text-field=\"name\"\n    disabled-field=\"notEnabled\"\n    class=\"demo-inline-spacing\"\n  />\n</template>\n\n<script>\nimport { BFormCheckboxGroup } from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BFormCheckboxGroup,\n    BCardCode,\n  },\n  data() {\n    return {\n      selected: [],\n      options: [\n        { item: 'A', name: 'Option A' },\n        { item: 'B', name: 'Option B' },\n        { item: 'D', name: 'Option C', notEnabled: true },\n        { item: { d: 1 }, name: 'Option D' },\n      ],\n    }\n  },\n}\n</script>\n`\n\nexport const codeInlineStacked = `\n<template>\n  <div>\n    <b-form-group label=\"Form-checkbox-group inline checkboxes (default)\">\n      <b-form-checkbox-group\n        v-model=\"selected\"\n        :options=\"options\"\n        name=\"flavour-1a\"\n        class=\"demo-inline-spacing\"\n      />\n    </b-form-group>\n\n    <b-form-group label=\"Form-checkbox-group stacked checkboxes\">\n      <b-form-checkbox-group\n        v-model=\"selected\"\n        :options=\"options\"\n        name=\"flavour-2a\"\n        class=\"demo-inline-spacing\"\n        stacked\n      />\n    </b-form-group>\n\n    <b-form-group label=\"Individual stacked checkboxes (default)\">\n      <b-form-checkbox\n        v-for=\"option in options\"\n        :key=\"option.value\"\n        v-model=\"selected\"\n        :value=\"option.value\"\n        name=\"flavour-3a\"\n      >\n        {{ option.text }}\n      </b-form-checkbox>\n    </b-form-group>\n\n    <b-form-group label=\"Individual inline checkboxes\">\n      <b-form-checkbox\n        v-for=\"option in options\"\n        :key=\"option.value\"\n        v-model=\"selected\"\n        :value=\"option.value\"\n        name=\"flavour-4a\"\n        inline\n      >\n        {{ option.text }}\n      </b-form-checkbox>\n    </b-form-group>\n  </div>\n</template>\n\n<script>\nimport { BFormCheckboxGroup, BFormCheckbox, BFormGroup } from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BFormCheckboxGroup,\n    BFormCheckbox,\n    BFormGroup,\n    BCardCode,\n  },\n  data() {\n    return {\n      selected: [],\n      options: [\n        { text: 'Orange', value: 'orange' },\n        { text: 'Apple', value: 'apple' },\n        { text: 'Pineapple', value: 'pineapple' },\n        { text: 'Grape', value: 'grape' },\n      ],\n    }\n  },\n}\n</script>\n`\n\nexport const codeIndeterminate = `\n<template>\n  <div>\n    <!-- checkbox -->\n    <b-form-checkbox\n      v-model=\"checked\"\n      :indeterminate.sync=\"indeterminate\"\n    >\n      Click me to see what happens\n    </b-form-checkbox>\n\n    <!-- button -->\n    <b-button\n      v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n      class=\"mt-1\"\n      variant=\"outline-primary\"\n      @click=\"toggleIndeterminate\"\n    >\n      Toggle Indeterminate State\n    </b-button>\n\n    <div class=\"mt-1\">\n      Checked: <strong>{{ checked }}</strong><br>\n      Indeterminate: <strong>{{ indeterminate }}</strong>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { BFormCheckbox, BButton } from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BFormCheckbox,\n    BCardCode,\n    BButton,\n  },\n   directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      checked: true,\n      indeterminate: true,\n    }\n  },\n  methods: {\n    toggleIndeterminate() {\n      this.indeterminate = !this.indeterminate\n    },\n  },\n}\n</script>\n`\n"]}]}