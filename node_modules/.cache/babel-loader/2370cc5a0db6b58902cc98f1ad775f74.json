{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/forms/form-validation/FormValidationExtend.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/forms/form-validation/FormValidationExtend.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlJzsKaW1wb3J0IHsgVmFsaWRhdGlvblByb3ZpZGVyLCBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICd2ZWUtdmFsaWRhdGUnOwppbXBvcnQgeyBCRm9ybUlucHV0LCBCRm9ybUdyb3VwLCBCRm9ybSwgQkJ1dHRvbiwgQlJvdywgQkNvbCwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCAncHJpc21qcyc7CmltcG9ydCAncHJpc21qcy90aGVtZXMvcHJpc20tdG9tb3Jyb3cuY3NzJzsKaW1wb3J0IFByaXNtIGZyb20gJ3Z1ZS1wcmlzbS1jb21wb25lbnQnOwppbXBvcnQgeyBjb2RlRXh0ZW5kZWQgfSBmcm9tICcuL2NvZGUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkNhcmRDb2RlOiBCQ2FyZENvZGUsCiAgICBWYWxpZGF0aW9uUHJvdmlkZXI6IFZhbGlkYXRpb25Qcm92aWRlciwKICAgIFZhbGlkYXRpb25PYnNlcnZlcjogVmFsaWRhdGlvbk9ic2VydmVyLAogICAgQkZvcm1JbnB1dDogQkZvcm1JbnB1dCwKICAgIEJGb3JtR3JvdXA6IEJGb3JtR3JvdXAsCiAgICBCQ2FyZFRleHQ6IEJDYXJkVGV4dCwKICAgIEJGb3JtOiBCRm9ybSwKICAgIEJSb3c6IEJSb3csCiAgICBCQ29sOiBCQ29sLAogICAgQkJ1dHRvbjogQkJ1dHRvbiwKICAgIFByaXNtOiBQcmlzbQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNhcmROVW06ICcnLAogICAgICBwb3NOdW06ICcnLAogICAgICBjb2RlRXh0ZW5kZWQ6IGNvZGVFeHRlbmRlZCwKICAgICAgY29kZUNyZWRpdDogImV4cG9ydCBjb25zdCBjcmVkaXQgPSBleHRlbmQoJ2NyZWRpdCcsIHtcbiAgICB2YWxpZGF0ZTogdmFsaWRhdG9yQ3JlZGl0Q2FyZCxcbiAgICBtZXNzYWdlOiAnUGxlYXNlIGVudGVyIHBvc2l0aXZlIG51bWJlciEnLFxuICB9KVxuXG4gIGV4cG9ydCBjb25zdCB2YWxpZGF0b3JDcmVkaXRDYXJkID0gY3JlZGl0bnVtID0+IHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tdXNlbGVzcy1lc2NhcGUgKi9cbiAgY29uc3QgY1JlZ0V4cCA9IC9eKD86M1s0N11bMC05XXsxM30pJC9cbiAgLyogZXNsaW50LWVuYWJsZSBuby11c2VsZXNzLWVzY2FwZSAqL1xuICBjb25zdCB2YWxpZENyZWRpdENhcmQgPSBjUmVnRXhwLnRlc3QoY3JlZGl0bnVtKVxuICByZXR1cm4gdmFsaWRDcmVkaXRDYXJkXG4gIH0iLAogICAgICBjb2RlUG9zaXRpdmU6ICJleHBvcnQgY29uc3QgcG9zaXRpdmUgPSBleHRlbmQoJ3Bvc2l0aXZlJywge1xuICB2YWxpZGF0ZTogdmFsaWRhdG9yUG9zaXRpdmUsXG4gIG1lc3NhZ2U6ICdQbGVhc2UgZW50ZXIgcG9zaXRpdmUgbnVtYmVyIScsXG4gIH0pXG5cbiAgZXhwb3J0IGNvbnN0IHZhbGlkYXRvclBvc2l0aXZlID0gdmFsdWUgPT4ge1xuICBpZiAodmFsdWUgPj0gMCkge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgIgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHZhbGlkYXRpb25Gb3JtOiBmdW5jdGlvbiB2YWxpZGF0aW9uRm9ybSgpIHsKICAgICAgdGhpcy4kcmVmcy5zaW1wbGVSdWxlcy52YWxpZGF0ZSgpLnRoZW4oZnVuY3Rpb24gKHN1Y2Nlc3MpIHsKICAgICAgICBpZiAoc3VjY2VzcykgewogICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgICAgICAgICBhbGVydCgnZm9ybSBzdWJtaXR0ZWQhJyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA,SACAA,UADA,EACAC,UADA,EACAC,KADA,EACAC,OADA,EACAC,IADA,EACAC,IADA,EACAC,SADA,QAEA,eAFA;AAGA;AACA;AACA;AACA;AAEA;AACAC;AACAC,wBADA;AAEAC,0CAFA;AAGAC,0CAHA;AAIAV,0BAJA;AAKAC,0BALA;AAMAK,wBANA;AAOAJ,gBAPA;AAQAE,cARA;AASAC,cATA;AAUAF,oBAVA;AAWAQ;AAXA,GADA;AAcAC,MAdA,kBAcA;AACA;AACAC,iBADA;AAEAC,gBAFA;AAGAC,gCAHA;AAIAC,2ZAJA;AAgBAC;AAhBA;AA6BA,GA5CA;AA6CAC;AACAC,kBADA,4BACA;AACA;AACA;AACA;AACAC;AACA;AACA,OALA;AAMA;AARA;AA7CA","names":["BFormInput","BFormGroup","BForm","BButton","BRow","BCol","BCardText","components","BCardCode","ValidationProvider","ValidationObserver","Prism","data","cardNUm","posNum","codeExtended","codeCredit","codePositive","methods","validationForm","alert"],"sourceRoot":"src/views/forms/form-validation","sources":["FormValidationExtend.vue"],"sourcesContent":["<template>\n  <b-card-code title=\"Extended\">\n    <b-card-text>You can extend your custom rule.</b-card-text>\n\n    <b-row>\n\n      <!-- code -->\n      <b-col md=\"6\">\n        <prism\n          language=\"javascript\"\n          class=\"rounded \"\n        >\n          {{ codeCredit }}\n        </prism>\n      </b-col>\n\n      <!-- ciode -->\n      <b-col md=\"6\">\n        <prism\n          language=\"javascript\"\n          class=\"rounded mb-2\"\n        >\n          {{ codePositive }}\n        </prism>\n      </b-col>\n    </b-row>\n\n    <!-- form -->\n    <validation-observer ref=\"simpleRules\">\n      <b-form>\n        <b-row>\n          <b-col md=\"6\">\n            <b-form-group label=\"Credit Card\">\n              <validation-provider\n                #default=\"{ errors }\"\n                name=\"Credit Card\"\n                rules=\"required|credit-card\"\n              >\n                <b-form-input\n                  v-model=\"cardNUm\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Credit Card Number\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n          <b-col md=\"6\">\n            <b-form-group label=\"Enter Only Positive Number\">\n              <validation-provider\n                #default=\"{ errors }\"\n                name=\"Number\"\n                rules=\"required|positive\"\n              >\n                <b-form-input\n                  v-model=\"posNum\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Positive Number\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n        </b-row>\n\n        <!-- submit button -->\n        <b-form-group>\n          <b-button\n            type=\"submit\"\n            variant=\"primary\"\n            @click.prevent=\"validationForm\"\n          >\n            Submit\n          </b-button>\n        </b-form-group>\n      </b-form>\n    </validation-observer>\n\n    <template #code>\n      {{ codeExtended }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport {\n  BFormInput, BFormGroup, BForm, BButton, BRow, BCol, BCardText,\n} from 'bootstrap-vue'\nimport 'prismjs'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport Prism from 'vue-prism-component'\nimport { codeExtended } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    ValidationProvider,\n    ValidationObserver,\n    BFormInput,\n    BFormGroup,\n    BCardText,\n    BForm,\n    BRow,\n    BCol,\n    BButton,\n    Prism,\n  },\n  data() {\n    return {\n      cardNUm: '',\n      posNum: '',\n      codeExtended,\n      codeCredit: `export const credit = extend('credit', {\n    validate: validatorCreditCard,\n    message: 'Please enter positive number!',\n  })\n\n  export const validatorCreditCard = creditnum => {\n  /* eslint-disable no-useless-escape */\n  const cRegExp = /^(?:3[47][0-9]{13})$/\n  /* eslint-enable no-useless-escape */\n  const validCreditCard = cRegExp.test(creditnum)\n  return validCreditCard\n  }`,\n      codePositive: `export const positive = extend('positive', {\n  validate: validatorPositive,\n  message: 'Please enter positive number!',\n  })\n\n  export const validatorPositive = value => {\n  if (value >= 0) {\n    return true\n  }\n  return false\n  }\n  `,\n    }\n  },\n  methods: {\n    validationForm() {\n      this.$refs.simpleRules.validate().then(success => {\n        if (success) {\n        // eslint-disable-next-line\n          alert('form submitted!')\n        }\n      })\n    },\n  },\n}\n</script>\n"]}]}