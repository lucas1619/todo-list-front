{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/pages/authentication/Login-v1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/pages/authentication/Login-v1.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgVmFsaWRhdGlvblByb3ZpZGVyLCBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICd2ZWUtdmFsaWRhdGUnOwppbXBvcnQgeyBCQnV0dG9uLCBCRm9ybSwgQkZvcm1JbnB1dCwgQkZvcm1Hcm91cCwgQkNhcmQsIEJMaW5rLCBCQ2FyZFRpdGxlLCBCQ2FyZFRleHQsIEJJbnB1dEdyb3VwLCBCSW5wdXRHcm91cEFwcGVuZCwgQkZvcm1DaGVja2JveCB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnOwppbXBvcnQgVnVleHlMb2dvIGZyb20gJ0Bjb3JlL2xheW91dHMvY29tcG9uZW50cy9Mb2dvLnZ1ZSc7CmltcG9ydCB7IHJlcXVpcmVkLCBlbWFpbCB9IGZyb20gJ0B2YWxpZGF0aW9ucyc7CmltcG9ydCB7IHRvZ2dsZVBhc3N3b3JkVmlzaWJpbGl0eSB9IGZyb20gJ0Bjb3JlL21peGlucy91aS9mb3Jtcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAvLyBCU1YKICAgIEJCdXR0b246IEJCdXR0b24sCiAgICBCRm9ybTogQkZvcm0sCiAgICBCRm9ybUlucHV0OiBCRm9ybUlucHV0LAogICAgQkZvcm1Hcm91cDogQkZvcm1Hcm91cCwKICAgIEJDYXJkOiBCQ2FyZCwKICAgIEJDYXJkVGl0bGU6IEJDYXJkVGl0bGUsCiAgICBCTGluazogQkxpbmssCiAgICBWdWV4eUxvZ286IFZ1ZXh5TG9nbywKICAgIEJDYXJkVGV4dDogQkNhcmRUZXh0LAogICAgQklucHV0R3JvdXA6IEJJbnB1dEdyb3VwLAogICAgQklucHV0R3JvdXBBcHBlbmQ6IEJJbnB1dEdyb3VwQXBwZW5kLAogICAgQkZvcm1DaGVja2JveDogQkZvcm1DaGVja2JveCwKICAgIFZhbGlkYXRpb25Qcm92aWRlcjogVmFsaWRhdGlvblByb3ZpZGVyLAogICAgVmFsaWRhdGlvbk9ic2VydmVyOiBWYWxpZGF0aW9uT2JzZXJ2ZXIKICB9LAogIG1peGluczogW3RvZ2dsZVBhc3N3b3JkVmlzaWJpbGl0eV0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJFbWFpbDogJycsCiAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgc3RhdHVzOiAnJywKICAgICAgLy8gdmFsaWRhdGlvbiBydWxlcwogICAgICByZXF1aXJlZDogcmVxdWlyZWQsCiAgICAgIGVtYWlsOiBlbWFpbAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwYXNzd29yZFRvZ2dsZUljb246IGZ1bmN0aW9uIHBhc3N3b3JkVG9nZ2xlSWNvbigpIHsKICAgICAgcmV0dXJuIHRoaXMucGFzc3dvcmRGaWVsZFR5cGUgPT09ICdwYXNzd29yZCcgPyAnRXllSWNvbicgOiAnRXllT2ZmSWNvbic7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkKA;AACA,SACAA,OADA,EACAC,KADA,EACAC,UADA,EACAC,UADA,EACAC,KADA,EACAC,KADA,EACAC,UADA,EACAC,SADA,EACAC,WADA,EACAC,iBADA,EACAC,aADA,QAEA,eAFA;AAGA;AACA;AACA;AAEA;AACAC;AACA;AACAX,oBAFA;AAGAC,gBAHA;AAIAC,0BAJA;AAKAC,0BALA;AAMAC,gBANA;AAOAE,0BAPA;AAQAD,gBARA;AASAO,wBATA;AAUAL,wBAVA;AAWAC,4BAXA;AAYAC,wCAZA;AAaAC,gCAbA;AAcAG,0CAdA;AAeAC;AAfA,GADA;AAkBAC,oCAlBA;AAmBAC,MAnBA,kBAmBA;AACA;AACAC,mBADA;AAEAC,kBAFA;AAGAC,gBAHA;AAIA;AACAC,wBALA;AAMAC;AANA;AAQA,GA5BA;AA6BAC;AACAC,sBADA,gCACA;AACA;AACA;AAHA;AA7BA","names":["BButton","BForm","BFormInput","BFormGroup","BCard","BLink","BCardTitle","BCardText","BInputGroup","BInputGroupAppend","BFormCheckbox","components","VuexyLogo","ValidationProvider","ValidationObserver","mixins","data","userEmail","password","status","required","email","computed","passwordToggleIcon"],"sourceRoot":"src/views/pages/authentication","sources":["Login-v1.vue"],"sourcesContent":["<template>\n  <div class=\"auth-wrapper auth-v1 px-2\">\n    <div class=\"auth-inner py-2\">\n\n      <!-- Login v1 -->\n      <b-card class=\"mb-0\">\n        <b-link class=\"brand-logo\">\n          <vuexy-logo />\n\n          <h2 class=\"brand-text text-primary ml-1\">\n            Vuexy\n          </h2>\n        </b-link>\n\n        <b-card-title class=\"mb-1\">\n          Welcome to Vuexy! ðŸ‘‹\n        </b-card-title>\n        <b-card-text class=\"mb-2\">\n          Please sign-in to your account and start the adventure\n        </b-card-text>\n\n        <!-- form -->\n        <validation-observer\n          ref=\"loginForm\"\n          #default=\"{invalid}\"\n        >\n          <b-form\n            class=\"auth-login-form mt-2\"\n            @submit.prevent\n          >\n\n            <!-- email -->\n            <b-form-group\n              label-for=\"email\"\n              label=\"Email\"\n            >\n              <validation-provider\n                #default=\"{ errors }\"\n                name=\"Email\"\n                rules=\"required|email\"\n              >\n                <b-form-input\n                  id=\"email\"\n                  v-model=\"userEmail\"\n                  name=\"login-email\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"john@example.com\"\n                  autofocus\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n\n            <!-- password -->\n            <b-form-group>\n              <div class=\"d-flex justify-content-between\">\n                <label for=\"password\">Password</label>\n                <b-link :to=\"{name:'auth-forgot-password-v1'}\">\n                  <small>Forgot Password?</small>\n                </b-link>\n              </div>\n              <validation-provider\n                #default=\"{ errors }\"\n                name=\"Password\"\n                rules=\"required\"\n              >\n                <b-input-group\n                  class=\"input-group-merge\"\n                  :class=\"errors.length > 0 ? 'is-invalid':null\"\n                >\n                  <b-form-input\n                    id=\"password\"\n                    v-model=\"password\"\n                    :type=\"passwordFieldType\"\n                    class=\"form-control-merge\"\n                    :state=\"errors.length > 0 ? false:null\"\n                    name=\"login-password\"\n                    placeholder=\"Password\"\n                  />\n\n                  <b-input-group-append is-text>\n                    <feather-icon\n                      class=\"cursor-pointer\"\n                      :icon=\"passwordToggleIcon\"\n                      @click=\"togglePasswordVisibility\"\n                    />\n                  </b-input-group-append>\n                </b-input-group>\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n\n            <!-- checkbox -->\n            <b-form-group>\n              <b-form-checkbox\n                id=\"remember-me\"\n                v-model=\"status\"\n                name=\"checkbox-1\"\n              >\n                Remember Me\n              </b-form-checkbox>\n            </b-form-group>\n\n            <!-- submit button -->\n            <b-button\n              variant=\"primary\"\n              type=\"submit\"\n              block\n              :disabled=\"invalid\"\n            >\n              Sign in\n            </b-button>\n          </b-form>\n        </validation-observer>\n\n        <b-card-text class=\"text-center mt-2\">\n          <span>New on our platform? </span>\n          <b-link :to=\"{name:'auth-register-v1'}\">\n            <span>Create an account</span>\n          </b-link>\n        </b-card-text>\n\n        <div class=\"divider my-2\">\n          <div class=\"divider-text\">\n            or\n          </div>\n        </div>\n\n        <!-- social button -->\n        <div class=\"auth-footer-btn d-flex justify-content-center\">\n          <b-button\n            href=\"javascript:void(0)\"\n            variant=\"facebook\"\n          >\n            <feather-icon icon=\"FacebookIcon\" />\n          </b-button>\n          <b-button\n            href=\"javascript:void(0)\"\n            variant=\"twitter\"\n          >\n            <feather-icon icon=\"TwitterIcon\" />\n          </b-button>\n          <b-button\n            href=\"javascript:void(0)\"\n            variant=\"google\"\n          >\n            <feather-icon icon=\"MailIcon\" />\n          </b-button>\n          <b-button\n            href=\"javascript:void(0)\"\n            variant=\"github\"\n          >\n            <feather-icon icon=\"GithubIcon\" />\n          </b-button>\n        </div>\n      </b-card>\n      <!-- /Login v1 -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport {\n  BButton, BForm, BFormInput, BFormGroup, BCard, BLink, BCardTitle, BCardText, BInputGroup, BInputGroupAppend, BFormCheckbox,\n} from 'bootstrap-vue'\nimport VuexyLogo from '@core/layouts/components/Logo.vue'\nimport { required, email } from '@validations'\nimport { togglePasswordVisibility } from '@core/mixins/ui/forms'\n\nexport default {\n  components: {\n    // BSV\n    BButton,\n    BForm,\n    BFormInput,\n    BFormGroup,\n    BCard,\n    BCardTitle,\n    BLink,\n    VuexyLogo,\n    BCardText,\n    BInputGroup,\n    BInputGroupAppend,\n    BFormCheckbox,\n    ValidationProvider,\n    ValidationObserver,\n  },\n  mixins: [togglePasswordVisibility],\n  data() {\n    return {\n      userEmail: '',\n      password: '',\n      status: '',\n      // validation rules\n      required,\n      email,\n    }\n  },\n  computed: {\n    passwordToggleIcon() {\n      return this.passwordFieldType === 'password' ? 'EyeIcon' : 'EyeOffIcon'\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/pages/page-auth.scss';\n</style>\n"]}]}