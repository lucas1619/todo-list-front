{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/src/@fake-db/utils.js","dependencies":[{"path":"/home/lucas/Desktop/test/src/@fake-db/utils.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZy5qcyI7CmV4cG9ydCB2YXIgcGFnaW5hdGVBcnJheSA9IGZ1bmN0aW9uIHBhZ2luYXRlQXJyYXkoYXJyYXksIHBlclBhZ2UsIHBhZ2UpIHsKICByZXR1cm4gYXJyYXkuc2xpY2UoKHBhZ2UgLSAxKSAqIHBlclBhZ2UsIHBhZ2UgKiBwZXJQYWdlKTsKfTsKZXhwb3J0IHZhciBzb3J0Q29tcGFyZSA9IGZ1bmN0aW9uIHNvcnRDb21wYXJlKGtleSkgewogIHJldHVybiBmdW5jdGlvbiAoYSwgYikgewogICAgdmFyIGZpZWxkQSA9IGFba2V5XTsKICAgIHZhciBmaWVsZEIgPSBiW2tleV07CiAgICB2YXIgY29tcGFyaXNvbiA9IDA7CgogICAgaWYgKGZpZWxkQSA+IGZpZWxkQikgewogICAgICBjb21wYXJpc29uID0gMTsKICAgIH0gZWxzZSBpZiAoZmllbGRBIDwgZmllbGRCKSB7CiAgICAgIGNvbXBhcmlzb24gPSAtMTsKICAgIH0KCiAgICByZXR1cm4gY29tcGFyaXNvbjsKICB9Owp9OwpleHBvcnQgdmFyIGdldFJhbmRvbUludCA9IGZ1bmN0aW9uIGdldFJhbmRvbUludChtaW4sIG1heCkgewogIGlmIChtaW4gPiBtYXgpIHsKICAgIHZhciB0ZW1wID0gbWF4OwogICAgLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi8KCiAgICBtYXggPSBtaW47CiAgICBtaW4gPSB0ZW1wOwogICAgLyogZXNsaW50LWVuYWJsZSAqLwogIH0KCiAgaWYgKG1pbiA8PSAwKSB7CiAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCArIE1hdGguYWJzKG1pbikgKyAxKSkgKyBtaW47CiAgfQoKICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbWF4KSArIG1pbjsKfTsKZXhwb3J0IHZhciByYW5kb21EYXRlID0gZnVuY3Rpb24gcmFuZG9tRGF0ZShzdGFydCwgZW5kKSB7CiAgdmFyIGRpZmYgPSBlbmQuZ2V0VGltZSgpIC0gc3RhcnQuZ2V0VGltZSgpOwogIHZhciBuZXdEaWZmID0gZGlmZiAqIE1hdGgucmFuZG9tKCk7CiAgdmFyIGRhdGUgPSBuZXcgRGF0ZShzdGFydC5nZXRUaW1lKCkgKyBuZXdEaWZmKTsKICByZXR1cm4gZGF0ZTsKfTs="},{"version":3,"sources":["/home/lucas/Desktop/test/src/@fake-db/utils.js"],"names":["paginateArray","array","perPage","page","slice","sortCompare","key","a","b","fieldA","fieldB","comparison","getRandomInt","min","max","temp","Math","floor","random","abs","randomDate","start","end","diff","getTime","newDiff","date","Date"],"mappings":";;AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,OAAR,EAAiBC,IAAjB;AAAA,SAA0BF,KAAK,CAACG,KAAN,CAAY,CAACD,IAAI,GAAG,CAAR,IAAaD,OAAzB,EAAkCC,IAAI,GAAGD,OAAzC,CAA1B;AAAA,CAAtB;AAEP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,GAAG;AAAA,SAAI,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC1C,QAAMC,MAAM,GAAGF,CAAC,CAACD,GAAD,CAAhB;AACA,QAAMI,MAAM,GAAGF,CAAC,CAACF,GAAD,CAAhB;AAEA,QAAIK,UAAU,GAAG,CAAjB;;AACA,QAAIF,MAAM,GAAGC,MAAb,EAAqB;AACnBC,MAAAA,UAAU,GAAG,CAAb;AACD,KAFD,MAEO,IAAIF,MAAM,GAAGC,MAAb,EAAqB;AAC1BC,MAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,WAAOA,UAAP;AACD,GAX6B;AAAA,CAAvB;AAaP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,GAAN,EAAc;AACxC,MAAID,GAAG,GAAGC,GAAV,EAAe;AACb,QAAMC,IAAI,GAAGD,GAAb;AACA;;AACAA,IAAAA,GAAG,GAAGD,GAAN;AACAA,IAAAA,GAAG,GAAGE,IAAN;AACA;AACD;;AAED,MAAIF,GAAG,IAAI,CAAX,EAAc;AACZ,WAAOG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,GAAG,GAAGE,IAAI,CAACG,GAAL,CAASN,GAAT,CAAN,GAAsB,CAAvC,CAAX,IAAwDA,GAA/D;AACD;;AACD,SAAOG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,GAA3B,IAAkCD,GAAzC;AACD,CAbM;AAeP,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,GAAR,EAAgB;AACxC,MAAMC,IAAI,GAAGD,GAAG,CAACE,OAAJ,KAAgBH,KAAK,CAACG,OAAN,EAA7B;AACA,MAAMC,OAAO,GAAGF,IAAI,GAAGP,IAAI,CAACE,MAAL,EAAvB;AACA,MAAMQ,IAAI,GAAG,IAAIC,IAAJ,CAASN,KAAK,CAACG,OAAN,KAAkBC,OAA3B,CAAb;AACA,SAAOC,IAAP;AACD,CALM","sourcesContent":["export const paginateArray = (array, perPage, page) => array.slice((page - 1) * perPage, page * perPage)\n\nexport const sortCompare = key => (a, b) => {\n  const fieldA = a[key]\n  const fieldB = b[key]\n\n  let comparison = 0\n  if (fieldA > fieldB) {\n    comparison = 1\n  } else if (fieldA < fieldB) {\n    comparison = -1\n  }\n  return comparison\n}\n\nexport const getRandomInt = (min, max) => {\n  if (min > max) {\n    const temp = max\n    /* eslint-disable no-param-reassign */\n    max = min\n    min = temp\n    /* eslint-enable */\n  }\n\n  if (min <= 0) {\n    return Math.floor(Math.random() * (max + Math.abs(min) + 1)) + min\n  }\n  return Math.floor(Math.random() * max) + min\n}\n\nexport const randomDate = (start, end) => {\n  const diff = end.getTime() - start.getTime()\n  const newDiff = diff * Math.random()\n  const date = new Date(start.getTime() + newDiff)\n  return date\n}\n"]}]}