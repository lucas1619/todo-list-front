{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/@core/layouts/components/content-with-sidebar/ContentWithSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/@core/layouts/components/content-with-sidebar/ContentWithSidebar.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQge307"},{"version":3,"mappings":";;;;;;;;;;;;;;;AAgBA","names":[],"sourceRoot":"src/@core/layouts/components/content-with-sidebar","sources":["ContentWithSidebar.vue"],"sourcesContent":["<template>\n  <div class=\"cws-container cws-sidebar-right\">\n\n    <!-- content -->\n    <div class=\"cws-content\">\n      <slot />\n    </div>\n\n    <!-- Sidebar -->\n    <div class=\"cws-sidebar\">\n      <slot name=\"sidebar\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n\n}\n</script>\n\n<style lang=\"scss\">\n@import '~@core/scss/base/bootstrap-extended/include';\n\n$cws-sidebar-width: 260px;\n$gap: 2rem;\n\n.cws-container {\n  position: relative;\n\n  .cws-content {\n    width: calc(100% - #{$cws-sidebar-width} - #{$gap});\n\n    @media (max-width: (map-get($grid-breakpoints, lg))) {\n      width: 100%;\n    }\n  }\n\n  .cws-sidebar {\n    width: 260px;\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    @media (max-width: (map-get($grid-breakpoints, lg))) {\n      margin-top: $gap;\n      position: static;\n      width: 100%;\n    }\n  }\n}\n</style>\n"]}]}