{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/components/toasts/ToastsLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/toasts/ToastsLinks.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJDYXJkQ29kZSBmcm9tICdAY29yZS9jb21wb25lbnRzL2ItY2FyZC1jb2RlJzsKaW1wb3J0IHsgQkJ1dHRvbiwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCBSaXBwbGUgZnJvbSAndnVlLXJpcHBsZS1kaXJlY3RpdmUnOwppbXBvcnQgeyBjb2RlTGlua3MgfSBmcm9tICcuL2NvZGUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkNhcmRDb2RlOiBCQ2FyZENvZGUsCiAgICBCQnV0dG9uOiBCQnV0dG9uLAogICAgQkNhcmRUZXh0OiBCQ2FyZFRleHQKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIFJpcHBsZTogUmlwcGxlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29kZUxpbmtzOiBjb2RlTGlua3MKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB0b2FzdDogZnVuY3Rpb24gdG9hc3QoKSB7CiAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QoJ1RvYXN0IHdpdGggYWN0aW9uIGxpbmsnLCB7CiAgICAgICAgaHJlZjogJyNmb28nLAogICAgICAgIHRpdGxlOiAnVG9hc3QgTGluaycKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AAEA;AACAA;AACAC,wBADA;AAEAC,oBAFA;AAGAC;AAHA,GADA;AAMAC;AACAC;AADA,GANA;AASAC,MATA,kBASA;AACA;AACAC;AADA;AAGA,GAbA;AAcAC;AACAC,SADA,mBACA;AACA;AACAC,oBADA;AAEAC;AAFA;AAIA;AANA;AAdA","names":["components","BCardCode","BButton","BCardText","directives","Ripple","data","codeLinks","methods","toast","href","title"],"sourceRoot":"src/views/components/toasts","sources":["ToastsLinks.vue"],"sourcesContent":["<template>\n  <b-card-code title=\"Links\">\n    <b-card-text>\n      <span>Optionally convert the toast body to a link (</span>\n      <code>&lt;a&gt;</code>\n      <span>) or </span>\n      <code>&lt;router-link&gt;</code>\n      <span> (or </span>\n      <code>&lt;nuxt-link&gt;</code>\n      <span>) via the href and to props respectively. When set, the entire toast body becomes a link.</span>\n    </b-card-text>\n\n    <b-button\n      v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n      variant=\"outline-primary\"\n      @click=\"toast()\"\n    >\n      Toast with link\n    </b-button>\n\n    <template #code>\n      {{ codeLinks }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport { BButton, BCardText } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeLinks } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BButton,\n    BCardText,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      codeLinks,\n    }\n  },\n  methods: {\n    toast() {\n      this.$bvToast.toast('Toast with action link', {\n        href: '#foo',\n        title: 'Toast Link',\n      })\n    },\n  },\n}\n</script>\n"]}]}