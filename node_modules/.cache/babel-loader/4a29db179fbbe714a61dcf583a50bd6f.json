{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/components/overlay/OverlayForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/overlay/OverlayForm.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi50aW1lcnMuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUnOwppbXBvcnQgeyBCQnV0dG9uLCBCT3ZlcmxheSwgQkZvcm0sIEJQcm9ncmVzcywgQkZvcm1Hcm91cCwgQklucHV0R3JvdXAsIEJJbnB1dEdyb3VwUHJlcGVuZCwgQkZvcm1JbnB1dCwgQkZvcm1GaWxlLCBCQ2FyZFRleHQgfSBmcm9tICdib290c3RyYXAtdnVlJzsKaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZSc7CmltcG9ydCB7IGNvZGVGb3JtIH0gZnJvbSAnLi9jb2RlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJCdXR0b246IEJCdXR0b24sCiAgICBCT3ZlcmxheTogQk92ZXJsYXksCiAgICBCRm9ybTogQkZvcm0sCiAgICBCUHJvZ3Jlc3M6IEJQcm9ncmVzcywKICAgIEJGb3JtR3JvdXA6IEJGb3JtR3JvdXAsCiAgICBCSW5wdXRHcm91cDogQklucHV0R3JvdXAsCiAgICBCQ2FyZENvZGU6IEJDYXJkQ29kZSwKICAgIEJJbnB1dEdyb3VwUHJlcGVuZDogQklucHV0R3JvdXBQcmVwZW5kLAogICAgQkZvcm1JbnB1dDogQkZvcm1JbnB1dCwKICAgIEJGb3JtRmlsZTogQkZvcm1GaWxlLAogICAgQkNhcmRUZXh0OiBCQ2FyZFRleHQKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIFJpcHBsZTogUmlwcGxlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYnVzeTogZmFsc2UsCiAgICAgIHByb2Nlc3Npbmc6IGZhbHNlLAogICAgICBjb3VudGVyOiAxLAogICAgICBpbnRlcnZhbDogbnVsbCwKICAgICAgY29kZUZvcm06IGNvZGVGb3JtCiAgICB9OwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMuY2xlYXJJbnRlcnZhbCgpOwogIH0sCiAgbWV0aG9kczogewogICAgY2xlYXJJbnRlcnZhbDogZnVuY3Rpb24gKF9jbGVhckludGVydmFsKSB7CiAgICAgIGZ1bmN0aW9uIGNsZWFySW50ZXJ2YWwoKSB7CiAgICAgICAgcmV0dXJuIF9jbGVhckludGVydmFsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIGNsZWFySW50ZXJ2YWwudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF9jbGVhckludGVydmFsLnRvU3RyaW5nKCk7CiAgICAgIH07CgogICAgICByZXR1cm4gY2xlYXJJbnRlcnZhbDsKICAgIH0oZnVuY3Rpb24gKCkgewogICAgICBpZiAodGhpcy5pbnRlcnZhbCkgewogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7CiAgICAgICAgdGhpcy5pbnRlcnZhbCA9IG51bGw7CiAgICAgIH0KICAgIH0pLAogICAgb25TaG93bjogZnVuY3Rpb24gb25TaG93bigpIHsKICAgICAgLy8gRm9jdXMgdGhlIGRpYWxvZyBwcm9tcHQKICAgICAgdGhpcy4kcmVmcy5kaWFsb2cuZm9jdXMoKTsKICAgIH0sCiAgICBvbkhpZGRlbjogZnVuY3Rpb24gb25IaWRkZW4oKSB7CiAgICAgIC8vIEluIHRoaXMgY2FzZSwgd2UgcmV0dXJuIGZvY3VzIHRvIHRoZSBzdWJtaXQgYnV0dG9uCiAgICAgIC8vIFlvdSBtYXkgbmVlZCB0byBhbHRlciB0aGlzIGJhc2VkIG9uIHlvdXIgYXBwbGljYXRpb24gcmVxdWlyZW1lbnRzCiAgICAgIHRoaXMuJHJlZnMuc3VibWl0LmZvY3VzKCk7CiAgICB9LAogICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KCkgewogICAgICB0aGlzLnByb2Nlc3NpbmcgPSBmYWxzZTsKICAgICAgdGhpcy5idXN5ID0gdHJ1ZTsKICAgIH0sCiAgICBvbkNhbmNlbDogZnVuY3Rpb24gb25DYW5jZWwoKSB7CiAgICAgIHRoaXMuYnVzeSA9IGZhbHNlOwogICAgfSwKICAgIG9uT0s6IGZ1bmN0aW9uIG9uT0soKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmNvdW50ZXIgPSAxOwogICAgICB0aGlzLnByb2Nlc3NpbmcgPSB0cnVlOyAvLyBTaW11bGF0ZSBhbiBhc3luYyByZXF1ZXN0CgogICAgICB0aGlzLmNsZWFySW50ZXJ2YWwoKTsKICAgICAgdGhpcy5pbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoX3RoaXMuY291bnRlciA8IDIwKSB7CiAgICAgICAgICBfdGhpcy5jb3VudGVyICs9IDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzLmNsZWFySW50ZXJ2YWwoKTsKCiAgICAgICAgICBfdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgICAgX3RoaXMuYnVzeSA9IF90aGlzLnByb2Nlc3NpbmcgPSBmYWxzZTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSwgMzUwKTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA,SACAA,OADA,EAEAC,QAFA,EAGAC,KAHA,EAIAC,SAJA,EAKAC,UALA,EAMAC,WANA,EAOAC,kBAPA,EAQAC,UARA,EASAC,SATA,EAUAC,SAVA,QAWA,eAXA;AAYA;AACA;AAEA;AACAC;AACAV,oBADA;AAEAC,sBAFA;AAGAC,gBAHA;AAIAC,wBAJA;AAKAC,0BALA;AAMAC,4BANA;AAOAM,wBAPA;AAQAL,0CARA;AASAC,0BATA;AAUAC,wBAVA;AAWAC;AAXA,GADA;AAcAG;AACAC;AADA,GAdA;AAiBAC,MAjBA,kBAiBA;AACA;AACAC,iBADA;AAEAC,uBAFA;AAGAC,gBAHA;AAIAC,oBAJA;AAKAC;AALA;AAOA,GAzBA;AA0BAC,eA1BA,2BA0BA;AACA;AACA,GA5BA;AA6BAC;AACAC,iBADA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBACA;AACA;AACAA;AACA;AACA;AACA,KANA;AAOAC,WAPA,qBAOA;AACA;AACA;AACA,KAVA;AAWAC,YAXA,sBAWA;AACA;AACA;AACA;AACA,KAfA;AAgBAC,YAhBA,sBAgBA;AACA;AACA;AACA,KAnBA;AAoBAC,YApBA,sBAoBA;AACA;AACA,KAtBA;AAuBAC,QAvBA,kBAuBA;AAAA;;AACA;AACA,6BAFA,CAGA;;AACA;AACA;AACA;AACA;AACA,SAFA,MAEA;AACA;;AACA;AACA;AACA;AACA,WAHA;AAIA;AACA,OAVA,EAUA,GAVA;AAWA;AAvCA;AA7BA","names":["BButton","BOverlay","BForm","BProgress","BFormGroup","BInputGroup","BInputGroupPrepend","BFormInput","BFormFile","BCardText","components","BCardCode","directives","Ripple","data","busy","processing","counter","interval","codeForm","beforeDestroy","methods","clearInterval","onShown","onHidden","onSubmit","onCancel","onOK"],"sourceRoot":"src/views/components/overlay","sources":["OverlayForm.vue"],"sourcesContent":["<template>\n  <b-card-code title=\"Form confirmation prompt and upload status\">\n    <b-card-text>\n      <span>This example is a bit more complex, but shows the use of </span>\n      <code>no-wrap</code>\n      <span> , and using the </span>\n      <code>overlay</code>\n      <span> slot to present the user with a prompt dialog, and once confirmed it shows a uploading status indicator. This\n        example also demonstrates additional accessibility markup.\n      </span>\n    </b-card-text>\n\n    <div>\n      <b-form\n        class=\"position-relative\"\n        @submit.prevent=\"onSubmit\"\n      >\n        <b-form-group\n          label=\"Name\"\n          label-for=\"form-name\"\n          label-cols-lg=\"2\"\n        >\n          <b-input-group>\n            <b-input-group-prepend is-text>\n              <feather-icon\n                icon=\"UserIcon\"\n              />\n            </b-input-group-prepend>\n            <b-form-input\n              id=\"form-name\"\n              :disabled=\"busy\"\n            />\n          </b-input-group>\n        </b-form-group>\n        <b-form-group\n          label=\"Email\"\n          label-for=\"form-mail\"\n          label-cols-lg=\"2\"\n        >\n          <b-input-group>\n            <b-input-group-prepend is-text>\n              <feather-icon icon=\"MailIcon\" />\n            </b-input-group-prepend>\n            <b-form-input\n              id=\"form-email\"\n              type=\"email\"\n              :disabled=\"busy\"\n            />\n          </b-input-group>\n        </b-form-group>\n        <b-form-group\n          label=\"Image\"\n          label-for=\"form-image\"\n          label-cols-lg=\"2\"\n        >\n          <b-input-group>\n            <b-input-group-prepend is-text>\n              <feather-icon icon=\"ImageIcon\" />\n            </b-input-group-prepend>\n            <b-form-file\n              id=\"form-image\"\n              :disabled=\"busy\"\n              accept=\"image/*\"\n            />\n          </b-input-group>\n        </b-form-group>\n        <div class=\"d-flex justify-content-center\">\n          <b-button\n            ref=\"submit\"\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            variant=\"primary\"\n            type=\"submit\"\n            :disabled=\"busy\"\n          >\n            Submit\n          </b-button>\n        </div>\n\n        <b-overlay\n          :show=\"busy\"\n          no-wrap\n          @shown=\"onShown\"\n          @hidden=\"onHidden\"\n        >\n          <template #overlay>\n            <div\n              v-if=\"processing\"\n              class=\"text-center p-3 bg-primary text-light rounded\"\n            >\n              <feather-icon\n                icon=\"UploadCloudIcon\"\n                size=\"20\"\n              />\n              <div class=\"mb-2\">\n                Processing...\n              </div>\n              <b-progress\n                min=\"1\"\n                max=\"20\"\n                :value=\"counter\"\n                variant=\"success\"\n                height=\"6px\"\n                class=\"mx-n3\"\n              />\n            </div>\n            <div\n              v-else\n              ref=\"dialog\"\n              tabindex=\"-1\"\n              role=\"dialog\"\n              aria-modal=\"false\"\n              aria-labelledby=\"form-confirm-label\"\n              class=\"text-center p-3\"\n            >\n              <b-card-text class=\"font-weight-bolder\">\n                Are you sure?\n              </b-card-text>\n              <div class=\"d-flex\">\n                <b-button\n                  v-ripple.400=\"'rgba(234, 84, 85, 0.15)'\"\n                  variant=\"outline-danger\"\n                  class=\"mr-3\"\n                  @click=\"onCancel\"\n                >\n                  Cancel\n                </b-button>\n                <b-button\n                  v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n                  variant=\"outline-success\"\n                  @click=\"onOK\"\n                >\n                  OK\n                </b-button>\n              </div>\n            </div>\n          </template>\n        </b-overlay>\n      </b-form>\n    </div>\n\n    <template #code>\n      {{ codeForm }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport {\n  BButton,\n  BOverlay,\n  BForm,\n  BProgress,\n  BFormGroup,\n  BInputGroup,\n  BInputGroupPrepend,\n  BFormInput,\n  BFormFile,\n  BCardText,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeForm } from './code'\n\nexport default {\n  components: {\n    BButton,\n    BOverlay,\n    BForm,\n    BProgress,\n    BFormGroup,\n    BInputGroup,\n    BCardCode,\n    BInputGroupPrepend,\n    BFormInput,\n    BFormFile,\n    BCardText,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      busy: false,\n      processing: false,\n      counter: 1,\n      interval: null,\n      codeForm,\n    }\n  },\n  beforeDestroy() {\n    this.clearInterval()\n  },\n  methods: {\n    clearInterval() {\n      if (this.interval) {\n        clearInterval(this.interval)\n        this.interval = null\n      }\n    },\n    onShown() {\n      // Focus the dialog prompt\n      this.$refs.dialog.focus()\n    },\n    onHidden() {\n      // In this case, we return focus to the submit button\n      // You may need to alter this based on your application requirements\n      this.$refs.submit.focus()\n    },\n    onSubmit() {\n      this.processing = false\n      this.busy = true\n    },\n    onCancel() {\n      this.busy = false\n    },\n    onOK() {\n      this.counter = 1\n      this.processing = true\n      // Simulate an async request\n      this.clearInterval()\n      this.interval = setInterval(() => {\n        if (this.counter < 20) {\n          this.counter += 1\n        } else {\n          this.clearInterval()\n          this.$nextTick(() => {\n            // eslint-disable-next-line\n            this.busy = this.processing = false\n          })\n        }\n      }, 350)\n    },\n  },\n}\n</script>\n"]}]}