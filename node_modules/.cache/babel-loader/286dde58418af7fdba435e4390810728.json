{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/apps/email/Email.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/apps/email/Email.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7CmltcG9ydCB7IHJlZiwgb25Vbm1vdW50ZWQsIGNvbXB1dGVkLCB3YXRjaCAvLyByZWYsIHdhdGNoLCBjb21wdXRlZCwgb25Vbm1vdW50ZWQsCn0gZnJvbSAnQHZ1ZS9jb21wb3NpdGlvbi1hcGknOwppbXBvcnQgeyBCRm9ybUlucHV0LCBCSW5wdXRHcm91cCwgQklucHV0R3JvdXBQcmVwZW5kLCBCRHJvcGRvd24sIEJEcm9wZG93bkl0ZW0sIEJGb3JtQ2hlY2tib3gsIEJNZWRpYSwgQk1lZGlhQXNpZGUsIEJNZWRpYUJvZHksIEJBdmF0YXIgfSBmcm9tICdib290c3RyYXAtdnVlJzsKaW1wb3J0IFZ1ZVBlcmZlY3RTY3JvbGxiYXIgZnJvbSAndnVlLXBlcmZlY3Qtc2Nyb2xsYmFyJzsKaW1wb3J0IHsgZmlsdGVyVGFncywgZm9ybWF0RGF0ZVRvTW9udGhTaG9ydCB9IGZyb20gJ0Bjb3JlL3V0aWxzL2ZpbHRlcic7CmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ0Bjb3JlL3V0aWxzL3V0aWxzJzsKaW1wb3J0IHsgdXNlUmVzcG9uc2l2ZUFwcExlZnRTaWRlYmFyVmlzaWJpbGl0eSB9IGZyb20gJ0Bjb3JlL2NvbXAtZnVuY3Rpb25zL3VpL2FwcCc7CmltcG9ydCBFbWFpbExlZnRTaWRlYmFyIGZyb20gJy4vRW1haWxMZWZ0U2lkZWJhci52dWUnOwppbXBvcnQgRW1haWxWaWV3IGZyb20gJy4vRW1haWxWaWV3LnZ1ZSc7CmltcG9ydCBlbWFpbFN0b3JlTW9kdWxlIGZyb20gJy4vZW1haWxTdG9yZU1vZHVsZSc7CmltcG9ydCB1c2VFbWFpbCBmcm9tICcuL3VzZUVtYWlsJzsKaW1wb3J0IEVtYWlsQ29tcG9zZSBmcm9tICcuL0VtYWlsQ29tcG9zZS52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkZvcm1JbnB1dDogQkZvcm1JbnB1dCwKICAgIEJJbnB1dEdyb3VwOiBCSW5wdXRHcm91cCwKICAgIEJJbnB1dEdyb3VwUHJlcGVuZDogQklucHV0R3JvdXBQcmVwZW5kLAogICAgQkRyb3Bkb3duOiBCRHJvcGRvd24sCiAgICBCRHJvcGRvd25JdGVtOiBCRHJvcGRvd25JdGVtLAogICAgQkZvcm1DaGVja2JveDogQkZvcm1DaGVja2JveCwKICAgIEJNZWRpYTogQk1lZGlhLAogICAgQk1lZGlhQXNpZGU6IEJNZWRpYUFzaWRlLAogICAgQk1lZGlhQm9keTogQk1lZGlhQm9keSwKICAgIEJBdmF0YXI6IEJBdmF0YXIsCiAgICAvLyAzcmQgUGFydHkKICAgIFZ1ZVBlcmZlY3RTY3JvbGxiYXI6IFZ1ZVBlcmZlY3RTY3JvbGxiYXIsCiAgICAvLyBBcHAgU0ZDCiAgICBFbWFpbExlZnRTaWRlYmFyOiBFbWFpbExlZnRTaWRlYmFyLAogICAgRW1haWxWaWV3OiBFbWFpbFZpZXcsCiAgICBFbWFpbENvbXBvc2U6IEVtYWlsQ29tcG9zZQogIH0sCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKCkgewogICAgdmFyIEVNQUlMX0FQUF9TVE9SRV9NT0RVTEVfTkFNRSA9ICdhcHAtZW1haWwnOyAvLyBSZWdpc3RlciBtb2R1bGUKCiAgICBpZiAoIXN0b3JlLmhhc01vZHVsZShFTUFJTF9BUFBfU1RPUkVfTU9EVUxFX05BTUUpKSBzdG9yZS5yZWdpc3Rlck1vZHVsZShFTUFJTF9BUFBfU1RPUkVfTU9EVUxFX05BTUUsIGVtYWlsU3RvcmVNb2R1bGUpOyAvLyBVblJlZ2lzdGVyIG9uIGxlYXZlCgogICAgb25Vbm1vdW50ZWQoZnVuY3Rpb24gKCkgewogICAgICBpZiAoc3RvcmUuaGFzTW9kdWxlKEVNQUlMX0FQUF9TVE9SRV9NT0RVTEVfTkFNRSkpIHN0b3JlLnVucmVnaXN0ZXJNb2R1bGUoRU1BSUxfQVBQX1NUT1JFX01PRFVMRV9OQU1FKTsKICAgIH0pOwoKICAgIHZhciBfdXNlUm91dGVyID0gdXNlUm91dGVyKCksCiAgICAgICAgcm91dGUgPSBfdXNlUm91dGVyLnJvdXRlLAogICAgICAgIHJvdXRlciA9IF91c2VSb3V0ZXIucm91dGVyOwoKICAgIHZhciBfdXNlRW1haWwgPSB1c2VFbWFpbCgpLAogICAgICAgIHJlc29sdmVMYWJlbENvbG9yID0gX3VzZUVtYWlsLnJlc29sdmVMYWJlbENvbG9yOyAvLyBSb3V0ZSBQYXJhbXMKCgogICAgdmFyIHJvdXRlUGFyYW1zID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gcm91dGUudmFsdWUucGFyYW1zOwogICAgfSk7CiAgICB3YXRjaChyb3V0ZVBhcmFtcywgZnVuY3Rpb24gKCkgewogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlLWJlZm9yZS1kZWZpbmUKICAgICAgZmV0Y2hFbWFpbHMoKTsKICAgIH0pOyAvLyBFbWFpbHMgJiBFbWFpbHNNZXRhCgogICAgdmFyIGVtYWlscyA9IHJlZihbXSk7CiAgICB2YXIgZW1haWxzTWV0YSA9IHJlZih7fSk7CiAgICB2YXIgcGVyZmVjdFNjcm9sbGJhclNldHRpbmdzID0gewogICAgICBtYXhTY3JvbGxiYXJMZW5ndGg6IDE1MAogICAgfTsgLy8gU2VhcmNoIFF1ZXJ5CgogICAgdmFyIHJvdXRlUXVlcnkgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiByb3V0ZS52YWx1ZS5xdWVyeS5xOwogICAgfSk7CiAgICB2YXIgc2VhcmNoUXVlcnkgPSByZWYocm91dGVRdWVyeS52YWx1ZSk7CiAgICB3YXRjaChyb3V0ZVF1ZXJ5LCBmdW5jdGlvbiAodmFsKSB7CiAgICAgIHNlYXJjaFF1ZXJ5LnZhbHVlID0gdmFsOwogICAgfSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2UtYmVmb3JlLWRlZmluZQoKICAgIHdhdGNoKHNlYXJjaFF1ZXJ5LCBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBmZXRjaEVtYWlscygpOwogICAgfSk7CgogICAgdmFyIHVwZGF0ZVJvdXRlUXVlcnkgPSBmdW5jdGlvbiB1cGRhdGVSb3V0ZVF1ZXJ5KHZhbCkgewogICAgICB2YXIgY3VycmVudFJvdXRlUXVlcnkgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJvdXRlLnZhbHVlLnF1ZXJ5KSk7CiAgICAgIGlmICh2YWwpIGN1cnJlbnRSb3V0ZVF1ZXJ5LnEgPSB2YWw7ZWxzZSBkZWxldGUgY3VycmVudFJvdXRlUXVlcnkucTsKICAgICAgcm91dGVyLnJlcGxhY2UoewogICAgICAgIG5hbWU6IHJvdXRlLm5hbWUsCiAgICAgICAgcXVlcnk6IGN1cnJlbnRSb3V0ZVF1ZXJ5CiAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgZmV0Y2hFbWFpbHMgPSBmdW5jdGlvbiBmZXRjaEVtYWlscygpIHsKICAgICAgc3RvcmUuZGlzcGF0Y2goJ2FwcC1lbWFpbC9mZXRjaEVtYWlscycsIHsKICAgICAgICBxOiBzZWFyY2hRdWVyeS52YWx1ZSwKICAgICAgICBmb2xkZXI6IHJvdXRlci5jdXJyZW50Um91dGUucGFyYW1zLmZvbGRlciB8fCAnaW5ib3gnLAogICAgICAgIGxhYmVsOiByb3V0ZXIuY3VycmVudFJvdXRlLnBhcmFtcy5sYWJlbAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGVtYWlscy52YWx1ZSA9IHJlc3BvbnNlLmRhdGEuZW1haWxzOwogICAgICAgIGVtYWlsc01ldGEudmFsdWUgPSByZXNwb25zZS5kYXRhLmVtYWlsc01ldGE7CiAgICAgIH0pOwogICAgfTsKCiAgICBmZXRjaEVtYWlscygpOyAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIE1haWwgU2VsZWN0aW9uCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAgICB2YXIgc2VsZWN0ZWRFbWFpbHMgPSByZWYoW10pOwoKICAgIHZhciB0b2dnbGVTZWxlY3RlZE1haWwgPSBmdW5jdGlvbiB0b2dnbGVTZWxlY3RlZE1haWwobWFpbElkKSB7CiAgICAgIHZhciBtYWlsSW5kZXggPSBzZWxlY3RlZEVtYWlscy52YWx1ZS5pbmRleE9mKG1haWxJZCk7CiAgICAgIGlmIChtYWlsSW5kZXggPT09IC0xKSBzZWxlY3RlZEVtYWlscy52YWx1ZS5wdXNoKG1haWxJZCk7ZWxzZSBzZWxlY3RlZEVtYWlscy52YWx1ZS5zcGxpY2UobWFpbEluZGV4LCAxKTsKICAgIH07CgogICAgdmFyIHNlbGVjdEFsbEVtYWlsQ2hlY2tib3ggPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBlbWFpbHMudmFsdWUubGVuZ3RoICYmIGVtYWlscy52YWx1ZS5sZW5ndGggPT09IHNlbGVjdGVkRW1haWxzLnZhbHVlLmxlbmd0aDsKICAgIH0pOwogICAgdmFyIGlzU2VsZWN0QWxsRW1haWxDaGVja2JveEluZGV0ZXJtaW5hdGUgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBCb29sZWFuKHNlbGVjdGVkRW1haWxzLnZhbHVlLmxlbmd0aCkgJiYgZW1haWxzLnZhbHVlLmxlbmd0aCAhPT0gc2VsZWN0ZWRFbWFpbHMudmFsdWUubGVuZ3RoOwogICAgfSk7CgogICAgdmFyIHNlbGVjdEFsbENoZWNrYm94VXBkYXRlID0gZnVuY3Rpb24gc2VsZWN0QWxsQ2hlY2tib3hVcGRhdGUodmFsKSB7CiAgICAgIHNlbGVjdGVkRW1haWxzLnZhbHVlID0gdmFsID8gZW1haWxzLnZhbHVlLm1hcChmdW5jdGlvbiAobWFpbCkgewogICAgICAgIHJldHVybiBtYWlsLmlkOwogICAgICB9KSA6IFtdOwogICAgfTsgLy8gPyBXYXRjaGVyIHRvIHJlc2V0IHNlbGVjdGVkRW1haWxzIGlzIHNvbWV3aGVyZSBiZWxvdyBkdWUgdG8gd2F0Y2ggZGVwZW5kZWN5IGZ1bGxmaWxtZW50CiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIC8vIE1haWwgQWN0aW9ucwogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoKICAgIHZhciB0b2dnbGVTdGFycmVkID0gZnVuY3Rpb24gdG9nZ2xlU3RhcnJlZChlbWFpbCkgewogICAgICBzdG9yZS5kaXNwYXRjaCgnYXBwLWVtYWlsL3VwZGF0ZUVtYWlsJywgewogICAgICAgIGVtYWlsSWRzOiBbZW1haWwuaWRdLAogICAgICAgIGRhdGFUb1VwZGF0ZTogewogICAgICAgICAgaXNTdGFycmVkOiAhZW1haWwuaXNTdGFycmVkCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ24KICAgICAgICBlbWFpbC5pc1N0YXJyZWQgPSAhZW1haWwuaXNTdGFycmVkOwogICAgICB9KTsKICAgIH07CgogICAgdmFyIG1vdmVTZWxlY3RlZEVtYWlsc1RvRm9sZGVyID0gZnVuY3Rpb24gbW92ZVNlbGVjdGVkRW1haWxzVG9Gb2xkZXIoZm9sZGVyKSB7CiAgICAgIHN0b3JlLmRpc3BhdGNoKCdhcHAtZW1haWwvdXBkYXRlRW1haWwnLCB7CiAgICAgICAgZW1haWxJZHM6IHNlbGVjdGVkRW1haWxzLnZhbHVlLAogICAgICAgIGRhdGFUb1VwZGF0ZTogewogICAgICAgICAgZm9sZGVyOiBmb2xkZXIKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGZldGNoRW1haWxzKCk7CiAgICAgIH0pWyJmaW5hbGx5Il0oZnVuY3Rpb24gKCkgewogICAgICAgIHNlbGVjdGVkRW1haWxzLnZhbHVlID0gW107CiAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgdXBkYXRlU2VsZWN0ZWRFbWFpbHNMYWJlbCA9IGZ1bmN0aW9uIHVwZGF0ZVNlbGVjdGVkRW1haWxzTGFiZWwobGFiZWwpIHsKICAgICAgc3RvcmUuZGlzcGF0Y2goJ2FwcC1lbWFpbC91cGRhdGVFbWFpbExhYmVscycsIHsKICAgICAgICBlbWFpbElkczogc2VsZWN0ZWRFbWFpbHMudmFsdWUsCiAgICAgICAgbGFiZWw6IGxhYmVsCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGZldGNoRW1haWxzKCk7CiAgICAgIH0pWyJmaW5hbGx5Il0oZnVuY3Rpb24gKCkgewogICAgICAgIHNlbGVjdGVkRW1haWxzLnZhbHVlID0gW107CiAgICAgIH0pOwogICAgfTsKCiAgICB2YXIgbWFya1NlbGVjdGVkRW1haWxzQXNVbnJlYWQgPSBmdW5jdGlvbiBtYXJrU2VsZWN0ZWRFbWFpbHNBc1VucmVhZCgpIHsKICAgICAgc3RvcmUuZGlzcGF0Y2goJ2FwcC1lbWFpbC91cGRhdGVFbWFpbCcsIHsKICAgICAgICBlbWFpbElkczogc2VsZWN0ZWRFbWFpbHMudmFsdWUsCiAgICAgICAgZGF0YVRvVXBkYXRlOiB7CiAgICAgICAgICBpc1JlYWQ6IGZhbHNlCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBmZXRjaEVtYWlscygpOwogICAgICB9KVsiZmluYWxseSJdKGZ1bmN0aW9uICgpIHsKICAgICAgICBzZWxlY3RlZEVtYWlscy52YWx1ZSA9IFtdOwogICAgICB9KTsKICAgIH07IC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgLy8gRW1haWwgRGV0YWlscwogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoKICAgIHZhciBzaG93RW1haWxEZXRhaWxzID0gcmVmKGZhbHNlKTsKICAgIHZhciBlbWFpbFZpZXdEYXRhID0gcmVmKHt9KTsKICAgIHZhciBvcGVuZGVkRW1haWxNZXRhID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICB2YXIgb3BlbmVkRW1haWxJbmRleCA9IGVtYWlscy52YWx1ZS5maW5kSW5kZXgoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gZS5pZCA9PT0gZW1haWxWaWV3RGF0YS52YWx1ZS5pZDsKICAgICAgfSk7CiAgICAgIHJldHVybiB7CiAgICAgICAgaGFzTmV4dEVtYWlsOiBCb29sZWFuKGVtYWlscy52YWx1ZVtvcGVuZWRFbWFpbEluZGV4ICsgMV0pLAogICAgICAgIGhhc1ByZXZpb3VzRW1haWw6IEJvb2xlYW4oZW1haWxzLnZhbHVlW29wZW5lZEVtYWlsSW5kZXggLSAxXSkKICAgICAgfTsKICAgIH0pOwoKICAgIHZhciB1cGRhdGVFbWFpbFZpZXdEYXRhID0gZnVuY3Rpb24gdXBkYXRlRW1haWxWaWV3RGF0YShlbWFpbCkgewogICAgICAvLyBNYXJrIGVtYWlsIGlzIHJlYWQKICAgICAgc3RvcmUuZGlzcGF0Y2goJ2FwcC1lbWFpbC91cGRhdGVFbWFpbCcsIHsKICAgICAgICBlbWFpbElkczogW2VtYWlsLmlkXSwKICAgICAgICBkYXRhVG9VcGRhdGU6IHsKICAgICAgICAgIGlzUmVhZDogdHJ1ZQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8gSWYgb3BlbmVkIGVtYWlsIGlzIHVucmVhZCB0aGVuIGRlY3JlYXNlIGJhZGdlIGNvdW50IGZvciBlbWFpbCBtZXRhIGJhc2VkIG9uIGVtYWlsIGZvbGRlcgogICAgICAgIGlmICghZW1haWwuaXNSZWFkICYmIChlbWFpbC5mb2xkZXIgPT09ICdpbmJveCcgfHwgZW1haWwuZm9sZGVyID09PSAnc3BhbScpKSB7CiAgICAgICAgICBlbWFpbHNNZXRhLnZhbHVlW2VtYWlsLmZvbGRlcl0gLT0gMTsKICAgICAgICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnbgoKCiAgICAgICAgZW1haWwuaXNSZWFkID0gdHJ1ZTsKICAgICAgfSlbImZpbmFsbHkiXShmdW5jdGlvbiAoKSB7CiAgICAgICAgZW1haWxWaWV3RGF0YS52YWx1ZSA9IGVtYWlsOwogICAgICAgIHNob3dFbWFpbERldGFpbHMudmFsdWUgPSB0cnVlOwogICAgICB9KTsKICAgIH07CgogICAgdmFyIG1vdmVPcGVuRW1haWxUb0ZvbGRlciA9IGZ1bmN0aW9uIG1vdmVPcGVuRW1haWxUb0ZvbGRlcihmb2xkZXIpIHsKICAgICAgc2VsZWN0ZWRFbWFpbHMudmFsdWUgPSBbZW1haWxWaWV3RGF0YS52YWx1ZS5pZF07CiAgICAgIG1vdmVTZWxlY3RlZEVtYWlsc1RvRm9sZGVyKGZvbGRlcik7CiAgICAgIHNlbGVjdGVkRW1haWxzLnZhbHVlID0gW107CiAgICAgIHNob3dFbWFpbERldGFpbHMudmFsdWUgPSBmYWxzZTsKICAgIH07CgogICAgdmFyIHVwZGF0ZU9wZW5FbWFpbExhYmVsID0gZnVuY3Rpb24gdXBkYXRlT3BlbkVtYWlsTGFiZWwobGFiZWwpIHsKICAgICAgc2VsZWN0ZWRFbWFpbHMudmFsdWUgPSBbZW1haWxWaWV3RGF0YS52YWx1ZS5pZF07CiAgICAgIHVwZGF0ZVNlbGVjdGVkRW1haWxzTGFiZWwobGFiZWwpOyAvLyBVcGRhdGUgbGFiZWwgaW4gb3BlbmVkIGVtYWlsCgogICAgICB2YXIgbGFiZWxJbmRleCA9IGVtYWlsVmlld0RhdGEudmFsdWUubGFiZWxzLmluZGV4T2YobGFiZWwpOwogICAgICBpZiAobGFiZWxJbmRleCA9PT0gLTEpIGVtYWlsVmlld0RhdGEudmFsdWUubGFiZWxzLnB1c2gobGFiZWwpO2Vsc2UgZW1haWxWaWV3RGF0YS52YWx1ZS5sYWJlbHMuc3BsaWNlKGxhYmVsSW5kZXgsIDEpOwogICAgICBzZWxlY3RlZEVtYWlscy52YWx1ZSA9IFtdOwogICAgfTsKCiAgICB2YXIgbWFya09wZW5FbWFpbEFzVW5yZWFkID0gZnVuY3Rpb24gbWFya09wZW5FbWFpbEFzVW5yZWFkKCkgewogICAgICBzZWxlY3RlZEVtYWlscy52YWx1ZSA9IFtlbWFpbFZpZXdEYXRhLnZhbHVlLmlkXTsKICAgICAgbWFya1NlbGVjdGVkRW1haWxzQXNVbnJlYWQoKTsKICAgICAgc2VsZWN0ZWRFbWFpbHMudmFsdWUgPSBbXTsKICAgICAgc2hvd0VtYWlsRGV0YWlscy52YWx1ZSA9IGZhbHNlOwogICAgfTsKCiAgICB2YXIgY2hhbmdlT3BlbmVkRW1haWwgPSBmdW5jdGlvbiBjaGFuZ2VPcGVuZWRFbWFpbChkaXIpIHsKICAgICAgdmFyIG9wZW5lZEVtYWlsSW5kZXggPSBlbWFpbHMudmFsdWUuZmluZEluZGV4KGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGUuaWQgPT09IGVtYWlsVmlld0RhdGEudmFsdWUuaWQ7CiAgICAgIH0pOwogICAgICB2YXIgbmV3RW1haWxJbmRleCA9IGRpciA9PT0gJ3ByZXZpb3VzJyA/IG9wZW5lZEVtYWlsSW5kZXggLSAxIDogb3BlbmVkRW1haWxJbmRleCArIDE7CiAgICAgIGVtYWlsVmlld0RhdGEudmFsdWUgPSBlbWFpbHMudmFsdWVbbmV3RW1haWxJbmRleF07CiAgICB9OyAvLyAqIElmIHNvbWVvbmUgY2xpY2tzIG9uIGZpbHRlciB3aGlsZSB2aWV3aW5nIGRldGFpbCA9PiBDbG9zZSB0aGUgZW1haWwgZGV0YWlsIHZpZXcKCgogICAgd2F0Y2gocm91dGVQYXJhbXMsIGZ1bmN0aW9uICgpIHsKICAgICAgc2hvd0VtYWlsRGV0YWlscy52YWx1ZSA9IGZhbHNlOwogICAgfSk7IC8vICogV2F0Y2hlciB0byByZXNldCBzZWxlY3RlZEVtYWlscwogICAgLy8gPyBZb3UgY2FuIGFsc28gdXNlIHNob3dFbWFpbERldGFpbHMgKGluc3RlYWQgb2YgYGVtYWlsVmlld0RhdGFgKSBidXQgaXQgd2lsbCB0cmlnZ2VyIGV4ZWN1dGlvbiB0d2ljZSBpbiB0aGlzIGNhc2UKICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2UtYmVmb3JlLWRlZmluZQoKICAgIHdhdGNoKFtlbWFpbFZpZXdEYXRhLCByb3V0ZVBhcmFtc10sIGZ1bmN0aW9uICgpIHsKICAgICAgc2VsZWN0ZWRFbWFpbHMudmFsdWUgPSBbXTsKICAgIH0pOyAvLyBDb21wb3NlCgogICAgdmFyIHNoYWxsU2hvd0VtYWlsQ29tcG9zZU1vZGFsID0gcmVmKGZhbHNlKTsgLy8gTGVmdCBTaWRlYmFyIFJlc3BvbnNpdmVuZXNzCgogICAgdmFyIF91c2VSZXNwb25zaXZlQXBwTGVmdCA9IHVzZVJlc3BvbnNpdmVBcHBMZWZ0U2lkZWJhclZpc2liaWxpdHkoKSwKICAgICAgICBtcVNoYWxsU2hvd0xlZnRTaWRlYmFyID0gX3VzZVJlc3BvbnNpdmVBcHBMZWZ0Lm1xU2hhbGxTaG93TGVmdFNpZGViYXI7CgogICAgcmV0dXJuIHsKICAgICAgLy8gVUkKICAgICAgcGVyZmVjdFNjcm9sbGJhclNldHRpbmdzOiBwZXJmZWN0U2Nyb2xsYmFyU2V0dGluZ3MsCiAgICAgIC8vIEVtYWlscyAmIEVtYWlsc01ldGEKICAgICAgZW1haWxzOiBlbWFpbHMsCiAgICAgIGVtYWlsc01ldGE6IGVtYWlsc01ldGEsCiAgICAgIC8vIE1haWwgU2VsZWN0aW9uCiAgICAgIHNlbGVjdEFsbEVtYWlsQ2hlY2tib3g6IHNlbGVjdEFsbEVtYWlsQ2hlY2tib3gsCiAgICAgIGlzU2VsZWN0QWxsRW1haWxDaGVja2JveEluZGV0ZXJtaW5hdGU6IGlzU2VsZWN0QWxsRW1haWxDaGVja2JveEluZGV0ZXJtaW5hdGUsCiAgICAgIHNlbGVjdGVkRW1haWxzOiBzZWxlY3RlZEVtYWlscywKICAgICAgdG9nZ2xlU2VsZWN0ZWRNYWlsOiB0b2dnbGVTZWxlY3RlZE1haWwsCiAgICAgIHNlbGVjdEFsbENoZWNrYm94VXBkYXRlOiBzZWxlY3RBbGxDaGVja2JveFVwZGF0ZSwKICAgICAgLy8gTWFpbCBBY3Rpb25zCiAgICAgIHRvZ2dsZVN0YXJyZWQ6IHRvZ2dsZVN0YXJyZWQsCiAgICAgIG1vdmVTZWxlY3RlZEVtYWlsc1RvRm9sZGVyOiBtb3ZlU2VsZWN0ZWRFbWFpbHNUb0ZvbGRlciwKICAgICAgdXBkYXRlU2VsZWN0ZWRFbWFpbHNMYWJlbDogdXBkYXRlU2VsZWN0ZWRFbWFpbHNMYWJlbCwKICAgICAgbWFya1NlbGVjdGVkRW1haWxzQXNVbnJlYWQ6IG1hcmtTZWxlY3RlZEVtYWlsc0FzVW5yZWFkLAogICAgICAvLyBFbWFpbCBEZXRhaWxzCiAgICAgIHNob3dFbWFpbERldGFpbHM6IHNob3dFbWFpbERldGFpbHMsCiAgICAgIGVtYWlsVmlld0RhdGE6IGVtYWlsVmlld0RhdGEsCiAgICAgIG9wZW5kZWRFbWFpbE1ldGE6IG9wZW5kZWRFbWFpbE1ldGEsCiAgICAgIHVwZGF0ZUVtYWlsVmlld0RhdGE6IHVwZGF0ZUVtYWlsVmlld0RhdGEsCiAgICAgIG1vdmVPcGVuRW1haWxUb0ZvbGRlcjogbW92ZU9wZW5FbWFpbFRvRm9sZGVyLAogICAgICB1cGRhdGVPcGVuRW1haWxMYWJlbDogdXBkYXRlT3BlbkVtYWlsTGFiZWwsCiAgICAgIG1hcmtPcGVuRW1haWxBc1VucmVhZDogbWFya09wZW5FbWFpbEFzVW5yZWFkLAogICAgICBjaGFuZ2VPcGVuZWRFbWFpbDogY2hhbmdlT3BlbmVkRW1haWwsCiAgICAgIC8vIFNlYXJjaCBRdWVyeQogICAgICBzZWFyY2hRdWVyeTogc2VhcmNoUXVlcnksCiAgICAgIHVwZGF0ZVJvdXRlUXVlcnk6IHVwZGF0ZVJvdXRlUXVlcnksCiAgICAgIC8vIFVJIEZpbHRlcnMKICAgICAgZmlsdGVyVGFnczogZmlsdGVyVGFncywKICAgICAgZm9ybWF0RGF0ZVRvTW9udGhTaG9ydDogZm9ybWF0RGF0ZVRvTW9udGhTaG9ydCwKICAgICAgLy8gdXNlRW1haWwKICAgICAgcmVzb2x2ZUxhYmVsQ29sb3I6IHJlc29sdmVMYWJlbENvbG9yLAogICAgICAvLyBDb21wb3NlCiAgICAgIHNoYWxsU2hvd0VtYWlsQ29tcG9zZU1vZGFsOiBzaGFsbFNob3dFbWFpbENvbXBvc2VNb2RhbCwKICAgICAgLy8gTGVmdCBTaWRlYmFyIFJlc3BvbnNpdmVuZXNzCiAgICAgIG1xU2hhbGxTaG93TGVmdFNpZGViYXI6IG1xU2hhbGxTaG93TGVmdFNpZGViYXIKICAgIH07CiAgfQp9Ow=="},{"version":3,"mappings":"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","names":["ref","onUnmounted","computed","watch","BFormInput","BInputGroup","BInputGroupPrepend","BDropdown","BDropdownItem","BFormCheckbox","BMedia","BMediaAside","BMediaBody","BAvatar","components","VuePerfectScrollbar","EmailLeftSidebar","EmailView","EmailCompose","setup","fetchEmails","maxScrollbarLength","searchQuery","router","name","query","store","q","folder","label","then","emails","emailsMeta","selectedEmails","emailIds","dataToUpdate","isStarred","email","isRead","hasNextEmail","hasPreviousEmail","emailViewData","showEmailDetails","moveSelectedEmailsToFolder","updateSelectedEmailsLabel","markSelectedEmailsAsUnread","perfectScrollbarSettings","selectAllEmailCheckbox","isSelectAllEmailCheckboxIndeterminate","toggleSelectedMail","selectAllCheckboxUpdate","toggleStarred","opendedEmailMeta","updateEmailViewData","moveOpenEmailToFolder","updateOpenEmailLabel","markOpenEmailAsUnread","changeOpenedEmail","updateRouteQuery","filterTags","formatDateToMonthShort","resolveLabelColor","shallShowEmailComposeModal","mqShallShowLeftSidebar"],"sourceRoot":"src/views/apps/email","sources":["Email.vue"],"sourcesContent":["<template>\n  <!-- Need to add height inherit because Vue 2 don't support multiple root ele -->\n  <div style=\"height: inherit\">\n    <div\n      class=\"body-content-overlay\"\n      :class=\"{'show': mqShallShowLeftSidebar}\"\n      @click=\"mqShallShowLeftSidebar = false\"\n    />\n\n    <!-- Email List -->\n    <div class=\"email-app-list\">\n\n      <!-- App Searchbar Header -->\n      <div class=\"app-fixed-search d-flex align-items-center\">\n\n        <!-- Toggler -->\n        <div class=\"sidebar-toggle d-block d-lg-none ml-1\">\n          <feather-icon\n            icon=\"MenuIcon\"\n            size=\"21\"\n            class=\"cursor-pointer\"\n            @click=\"mqShallShowLeftSidebar = true\"\n          />\n        </div>\n\n        <!-- Searchbar -->\n        <div class=\"d-flex align-content-center justify-content-between w-100\">\n          <b-input-group class=\"input-group-merge\">\n            <b-input-group-prepend is-text>\n              <feather-icon\n                icon=\"SearchIcon\"\n                class=\"text-muted\"\n              />\n            </b-input-group-prepend>\n            <b-form-input\n              :value=\"searchQuery\"\n              placeholder=\"Search email\"\n              @input=\"updateRouteQuery\"\n            />\n          </b-input-group>\n        </div>\n      </div>\n\n      <!-- App Action Bar -->\n      <div class=\"app-action\">\n        <div class=\"action-left\">\n          <b-form-checkbox\n            :checked=\"selectAllEmailCheckbox\"\n            :indeterminate=\"isSelectAllEmailCheckboxIndeterminate\"\n            @change=\"selectAllCheckboxUpdate\"\n          >\n            Select All\n          </b-form-checkbox>\n        </div>\n        <div\n          v-show=\"selectedEmails.length\"\n          class=\"align-items-center\"\n          :class=\"{'d-flex': selectedEmails.length}\"\n        >\n\n          <!-- Update Mail Folder Dropdown -->\n          <b-dropdown\n            variant=\"link\"\n            no-caret\n            toggle-class=\"p-0\"\n            right\n          >\n            <template #button-content>\n              <feather-icon\n                icon=\"FolderIcon\"\n                size=\"17\"\n                class=\"align-middle text-body\"\n              />\n            </template>\n\n            <b-dropdown-item @click=\"moveSelectedEmailsToFolder('draft')\">\n              <feather-icon icon=\"Edit2Icon\" />\n              <span class=\"align-middle ml-50\">Draft</span>\n            </b-dropdown-item>\n\n            <b-dropdown-item @click=\"moveSelectedEmailsToFolder('spam')\">\n              <feather-icon icon=\"InfoIcon\" />\n              <span class=\"align-middle ml-50\">Spam</span>\n            </b-dropdown-item>\n\n            <b-dropdown-item\n              v-show=\"$route.params.folder !== 'trash'\"\n              @click=\"moveSelectedEmailsToFolder('trash')\"\n            >\n              <feather-icon icon=\"TrashIcon\" />\n              <span class=\"align-middle ml-50\">Trash</span>\n            </b-dropdown-item>\n          </b-dropdown>\n\n          <!-- Update Mail Folder Dropdown -->\n          <b-dropdown\n            variant=\"link\"\n            no-caret\n            toggle-class=\"p-0\"\n            class=\"ml-1\"\n            right\n          >\n            <template #button-content>\n              <feather-icon\n                icon=\"TagIcon\"\n                size=\"17\"\n                class=\"align-middle text-body\"\n              />\n            </template>\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('personal')\">\n              <span class=\"mr-50 bullet bullet-success bullet-sm\" />\n              <span>Personal</span>\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('company')\">\n              <span class=\"mr-50 bullet bullet-primary bullet-sm\" />\n              <span>Company</span>\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('important')\">\n              <span class=\"mr-50 bullet bullet-warning bullet-sm\" />\n              <span>Important</span>\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"updateSelectedEmailsLabel('private')\">\n              <span class=\"mr-50 bullet bullet-danger bullet-sm\" />\n              <span>Private</span>\n            </b-dropdown-item>\n          </b-dropdown>\n\n          <feather-icon\n            icon=\"MailIcon\"\n            size=\"17\"\n            class=\"cursor-pointer ml-1\"\n            @click=\"markSelectedEmailsAsUnread\"\n          />\n\n          <feather-icon\n            v-show=\"$route.params.folder !== 'trash'\"\n            icon=\"TrashIcon\"\n            size=\"17\"\n            class=\"cursor-pointer ml-1\"\n            @click=\"moveSelectedEmailsToFolder('trash')\"\n          />\n\n        </div>\n      </div>\n\n      <!-- Emails List -->\n      <vue-perfect-scrollbar\n        :settings=\"perfectScrollbarSettings\"\n        class=\"email-user-list scroll-area\"\n      >\n        <ul class=\"email-media-list\">\n          <b-media\n            v-for=\"email in emails\"\n            :key=\"email.id\"\n            tag=\"li\"\n            no-body\n            :class=\"{ 'mail-read': email.isRead }\"\n            @click=\"updateEmailViewData(email)\"\n          >\n\n            <b-media-aside class=\"media-left mr-50\">\n              <b-avatar\n                class=\"avatar\"\n                size=\"40\"\n                variant=\"primary\"\n                :src=\"email.from.avatar\"\n              />\n              <div class=\"user-action\">\n                <b-form-checkbox\n                  :checked=\"selectedEmails.includes(email.id)\"\n                  @change=\"toggleSelectedMail(email.id)\"\n                  @click.native.stop\n                />\n                <div class=\"email-favorite\">\n                  <feather-icon\n                    icon=\"StarIcon\"\n                    size=\"17\"\n                    :class=\"{ 'text-warning fill-current': email.isStarred }\"\n                    @click.stop=\"toggleStarred(email)\"\n                  />\n                </div>\n              </div>\n            </b-media-aside>\n\n            <b-media-body>\n              <div class=\"mail-details\">\n                <div class=\"mail-items\">\n                  <h5 class=\"mb-25\">\n                    {{ email.from.name }}\n                  </h5>\n                  <span class=\"text-truncate\">{{ email.subject }}</span>\n                </div>\n                <div class=\"mail-meta-item\">\n                  <feather-icon\n                    v-if=\"email.attachments.length\"\n                    icon=\"PaperclipIcon\"\n                  />\n                  <span\n                    v-for=\"label in email.labels\"\n                    :key=\"label\"\n                    class=\"mx-50 bullet bullet-sm\"\n                    :class=\"`bullet-${resolveLabelColor(label)}`\"\n                  />\n                  <span class=\"mail-date\">{{ formatDateToMonthShort(email.time, { hour: 'numeric', minute: 'numeric', }) }}</span>\n                </div>\n              </div>\n\n              <div class=\"mail-message\">\n                <p class=\"text-truncate mb-0\">\n                  {{ filterTags(email.message) }}\n                </p>\n              </div>\n            </b-media-body>\n          </b-media>\n        </ul>\n        <div\n          class=\"no-results\"\n          :class=\"{'show': !emails.length}\"\n        >\n          <h5>No Items Found</h5>\n        </div>\n      </vue-perfect-scrollbar>\n    </div>\n\n    <!-- Email View/Detail -->\n    <email-view\n      :class=\"{'show': showEmailDetails}\"\n      :email-view-data=\"emailViewData\"\n      :opended-email-meta=\"opendedEmailMeta\"\n      @close-email-view=\"showEmailDetails = false\"\n      @move-email-to-folder=\"moveOpenEmailToFolder\"\n      @toggle-email-starred=\"toggleStarred(emailViewData)\"\n      @update-email-label=\"updateOpenEmailLabel\"\n      @mark-email-unread=\"markOpenEmailAsUnread\"\n      @change-opened-email=\"changeOpenedEmail\"\n    />\n\n    <!-- Sidebar -->\n    <portal to=\"content-renderer-sidebar-left\">\n      <email-left-sidebar\n        :shall-show-email-compose-modal.sync=\"shallShowEmailComposeModal\"\n        :emails-meta=\"emailsMeta\"\n        :class=\"{'show': mqShallShowLeftSidebar}\"\n        @close-left-sidebar=\"mqShallShowLeftSidebar = false\"\n      />\n    </portal>\n\n    <!-- Compose Email Modal -->\n    <email-compose v-model=\"shallShowEmailComposeModal\" />\n  </div>\n</template>\n\n<script>\nimport store from '@/store'\nimport {\n  ref, onUnmounted, computed, watch,\n  // ref, watch, computed, onUnmounted,\n} from '@vue/composition-api'\nimport {\n  BFormInput, BInputGroup, BInputGroupPrepend, BDropdown, BDropdownItem,\n  BFormCheckbox, BMedia, BMediaAside, BMediaBody, BAvatar,\n} from 'bootstrap-vue'\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport { filterTags, formatDateToMonthShort } from '@core/utils/filter'\nimport { useRouter } from '@core/utils/utils'\nimport { useResponsiveAppLeftSidebarVisibility } from '@core/comp-functions/ui/app'\nimport EmailLeftSidebar from './EmailLeftSidebar.vue'\nimport EmailView from './EmailView.vue'\nimport emailStoreModule from './emailStoreModule'\nimport useEmail from './useEmail'\nimport EmailCompose from './EmailCompose.vue'\n\nexport default {\n  components: {\n    BFormInput,\n    BInputGroup,\n    BInputGroupPrepend,\n    BDropdown,\n    BDropdownItem,\n    BFormCheckbox,\n    BMedia,\n    BMediaAside,\n    BMediaBody,\n    BAvatar,\n\n    // 3rd Party\n    VuePerfectScrollbar,\n\n    // App SFC\n    EmailLeftSidebar,\n    EmailView,\n    EmailCompose,\n  },\n  setup() {\n    const EMAIL_APP_STORE_MODULE_NAME = 'app-email'\n\n    // Register module\n    if (!store.hasModule(EMAIL_APP_STORE_MODULE_NAME)) store.registerModule(EMAIL_APP_STORE_MODULE_NAME, emailStoreModule)\n\n    // UnRegister on leave\n    onUnmounted(() => {\n      if (store.hasModule(EMAIL_APP_STORE_MODULE_NAME)) store.unregisterModule(EMAIL_APP_STORE_MODULE_NAME)\n    })\n\n    const { route, router } = useRouter()\n    const { resolveLabelColor } = useEmail()\n\n    // Route Params\n    const routeParams = computed(() => route.value.params)\n    watch(routeParams, () => {\n      // eslint-disable-next-line no-use-before-define\n      fetchEmails()\n    })\n\n    // Emails & EmailsMeta\n    const emails = ref([])\n    const emailsMeta = ref({})\n\n    const perfectScrollbarSettings = {\n      maxScrollbarLength: 150,\n    }\n\n    // Search Query\n    const routeQuery = computed(() => route.value.query.q)\n    const searchQuery = ref(routeQuery.value)\n    watch(routeQuery, val => {\n      searchQuery.value = val\n    })\n    // eslint-disable-next-line no-use-before-define\n    watch(searchQuery, () => fetchEmails())\n    const updateRouteQuery = val => {\n      const currentRouteQuery = JSON.parse(JSON.stringify(route.value.query))\n\n      if (val) currentRouteQuery.q = val\n      else delete currentRouteQuery.q\n\n      router.replace({ name: route.name, query: currentRouteQuery })\n    }\n\n    const fetchEmails = () => {\n      store.dispatch('app-email/fetchEmails', {\n        q: searchQuery.value,\n        folder: router.currentRoute.params.folder || 'inbox',\n        label: router.currentRoute.params.label,\n      })\n        .then(response => {\n          emails.value = response.data.emails\n          emailsMeta.value = response.data.emailsMeta\n        })\n    }\n\n    fetchEmails()\n\n    // ------------------------------------------------\n    // Mail Selection\n    // ------------------------------------------------\n    const selectedEmails = ref([])\n    const toggleSelectedMail = mailId => {\n      const mailIndex = selectedEmails.value.indexOf(mailId)\n\n      if (mailIndex === -1) selectedEmails.value.push(mailId)\n      else selectedEmails.value.splice(mailIndex, 1)\n    }\n    const selectAllEmailCheckbox = computed(() => emails.value.length && (emails.value.length === selectedEmails.value.length))\n    const isSelectAllEmailCheckboxIndeterminate = computed(() => Boolean(selectedEmails.value.length) && emails.value.length !== selectedEmails.value.length)\n    const selectAllCheckboxUpdate = val => {\n      selectedEmails.value = val ? emails.value.map(mail => mail.id) : []\n    }\n    // ? Watcher to reset selectedEmails is somewhere below due to watch dependecy fullfilment\n\n    // ------------------------------------------------\n    // Mail Actions\n    // ------------------------------------------------\n    const toggleStarred = email => {\n      store.dispatch('app-email/updateEmail', {\n        emailIds: [email.id],\n        dataToUpdate: { isStarred: !email.isStarred },\n      }).then(() => {\n        // eslint-disable-next-line no-param-reassign\n        email.isStarred = !email.isStarred\n      })\n    }\n\n    const moveSelectedEmailsToFolder = folder => {\n      store.dispatch('app-email/updateEmail', {\n        emailIds: selectedEmails.value,\n        dataToUpdate: { folder },\n      })\n        .then(() => { fetchEmails() })\n        .finally(() => { selectedEmails.value = [] })\n    }\n\n    const updateSelectedEmailsLabel = label => {\n      store.dispatch('app-email/updateEmailLabels', {\n        emailIds: selectedEmails.value,\n        label,\n      })\n        .then(() => { fetchEmails() })\n        .finally(() => { selectedEmails.value = [] })\n    }\n\n    const markSelectedEmailsAsUnread = () => {\n      store.dispatch('app-email/updateEmail', {\n        emailIds: selectedEmails.value,\n        dataToUpdate: { isRead: false },\n      })\n        .then(() => { fetchEmails() })\n        .finally(() => { selectedEmails.value = [] })\n    }\n\n    // ------------------------------------------------\n    // Email Details\n    // ------------------------------------------------\n    const showEmailDetails = ref(false)\n    const emailViewData = ref({})\n    const opendedEmailMeta = computed(() => {\n      const openedEmailIndex = emails.value.findIndex(e => e.id === emailViewData.value.id)\n      return {\n        hasNextEmail: Boolean(emails.value[openedEmailIndex + 1]),\n        hasPreviousEmail: Boolean(emails.value[openedEmailIndex - 1]),\n      }\n    })\n    const updateEmailViewData = email => {\n      // Mark email is read\n      store.dispatch('app-email/updateEmail', {\n        emailIds: [email.id],\n        dataToUpdate: { isRead: true },\n      })\n        .then(() => {\n          // If opened email is unread then decrease badge count for email meta based on email folder\n          if (!email.isRead && (email.folder === 'inbox' || email.folder === 'spam')) {\n            emailsMeta.value[email.folder] -= 1\n          }\n\n          // eslint-disable-next-line no-param-reassign\n          email.isRead = true\n        })\n        .finally(() => {\n          emailViewData.value = email\n          showEmailDetails.value = true\n        })\n    }\n    const moveOpenEmailToFolder = folder => {\n      selectedEmails.value = [emailViewData.value.id]\n      moveSelectedEmailsToFolder(folder)\n      selectedEmails.value = []\n      showEmailDetails.value = false\n    }\n    const updateOpenEmailLabel = label => {\n      selectedEmails.value = [emailViewData.value.id]\n      updateSelectedEmailsLabel(label)\n\n      // Update label in opened email\n      const labelIndex = emailViewData.value.labels.indexOf(label)\n      if (labelIndex === -1) emailViewData.value.labels.push(label)\n      else emailViewData.value.labels.splice(labelIndex, 1)\n\n      selectedEmails.value = []\n    }\n\n    const markOpenEmailAsUnread = () => {\n      selectedEmails.value = [emailViewData.value.id]\n      markSelectedEmailsAsUnread()\n\n      selectedEmails.value = []\n      showEmailDetails.value = false\n    }\n\n    const changeOpenedEmail = dir => {\n      const openedEmailIndex = emails.value.findIndex(e => e.id === emailViewData.value.id)\n      const newEmailIndex = dir === 'previous' ? openedEmailIndex - 1 : openedEmailIndex + 1\n      emailViewData.value = emails.value[newEmailIndex]\n    }\n\n    // * If someone clicks on filter while viewing detail => Close the email detail view\n    watch(routeParams, () => {\n      showEmailDetails.value = false\n    })\n\n    // * Watcher to reset selectedEmails\n    // ? You can also use showEmailDetails (instead of `emailViewData`) but it will trigger execution twice in this case\n    // eslint-disable-next-line no-use-before-define\n    watch([emailViewData, routeParams], () => {\n      selectedEmails.value = []\n    })\n\n    // Compose\n    const shallShowEmailComposeModal = ref(false)\n\n    // Left Sidebar Responsiveness\n    const { mqShallShowLeftSidebar } = useResponsiveAppLeftSidebarVisibility()\n\n    return {\n      // UI\n      perfectScrollbarSettings,\n\n      // Emails & EmailsMeta\n      emails,\n      emailsMeta,\n\n      // Mail Selection\n      selectAllEmailCheckbox,\n      isSelectAllEmailCheckboxIndeterminate,\n      selectedEmails,\n      toggleSelectedMail,\n      selectAllCheckboxUpdate,\n\n      // Mail Actions\n      toggleStarred,\n      moveSelectedEmailsToFolder,\n      updateSelectedEmailsLabel,\n      markSelectedEmailsAsUnread,\n\n      // Email Details\n      showEmailDetails,\n      emailViewData,\n      opendedEmailMeta,\n      updateEmailViewData,\n      moveOpenEmailToFolder,\n      updateOpenEmailLabel,\n      markOpenEmailAsUnread,\n      changeOpenedEmail,\n\n      // Search Query\n      searchQuery,\n      updateRouteQuery,\n\n      // UI Filters\n      filterTags,\n      formatDateToMonthShort,\n\n      // useEmail\n      resolveLabelColor,\n\n      // Compose\n      shallShowEmailComposeModal,\n\n      // Left Sidebar Responsiveness\n      mqShallShowLeftSidebar,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n\n<style lang=\"scss\">\n@import \"~@core/scss/base/pages/app-email.scss\";\n</style>\n"]}]}