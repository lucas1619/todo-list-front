{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/@core/components/statistics-cards/StatisticCardWithLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/@core/components/statistics-cards/StatisticCardWithLineChart.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWxsLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgQkNhcmQsIEJDYXJkQm9keSwgQkF2YXRhciB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnOwppbXBvcnQgVnVlQXBleENoYXJ0cyBmcm9tICd2dWUtYXBleGNoYXJ0cyc7CmltcG9ydCB7ICR0aGVtZUNvbG9ycyB9IGZyb20gJ0B0aGVtZUNvbmZpZyc7CmltcG9ydCB7IGxpbmVDaGFydE9wdGlvbnMgfSBmcm9tICcuL2NoYXJ0T3B0aW9ucyc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBWdWVBcGV4Q2hhcnRzOiBWdWVBcGV4Q2hhcnRzLAogICAgQkNhcmQ6IEJDYXJkLAogICAgQkNhcmRCb2R5OiBCQ2FyZEJvZHksCiAgICBCQXZhdGFyOiBCQXZhdGFyCiAgfSwKICBwcm9wczogewogICAgaWNvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgc3RhdGlzdGljOiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgc3RhdGlzdGljVGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICcnCiAgICB9LAogICAgY29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICdwcmltYXJ5JwogICAgfSwKICAgIGNoYXJ0RGF0YTogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgImRlZmF1bHQiOiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICAiZGVmYXVsdCI6IG51bGwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGFydE9wdGlvbnNDb21wdXRlZDogZnVuY3Rpb24gY2hhcnRPcHRpb25zQ29tcHV0ZWQoKSB7CiAgICAgIGlmICh0aGlzLmNoYXJ0T3B0aW9ucyA9PT0gbnVsbCkgewogICAgICAgIHZhciBvcHRpb25zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShsaW5lQ2hhcnRPcHRpb25zKSk7CiAgICAgICAgb3B0aW9ucy5maWxsLmdyYWRpZW50LmdyYWRpZW50VG9Db2xvcnMgPSBbdGhpcy5ncmFkaWVudFRvQ29sb3IodGhpcy5jb2xvcildOwogICAgICAgIG9wdGlvbnMuY29sb3JzID0gWyR0aGVtZUNvbG9yc1t0aGlzLmNvbG9yXV07CiAgICAgICAgcmV0dXJuIG9wdGlvbnM7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLmNoYXJ0T3B0aW9uczsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdyYWRpZW50VG9Db2xvcjogZnVuY3Rpb24gZ3JhZGllbnRUb0NvbG9yKGNvbG9yKSB7CiAgICAgIHZhciBncmFkaWVudFRvQ29sb3JzID0gewogICAgICAgIHByaW1hcnk6ICcjQTlBMkY2JywKICAgICAgICBzdWNjZXNzOiAnIzU1REQ5MicsCiAgICAgICAgd2FybmluZzogJyNmZmMwODUnLAogICAgICAgIGRhbmdlcjogJyNGOTc3OTQnLAogICAgICAgIGluZm86ICcjNTlFMEYwJywKICAgICAgICBzZWNvbmRhcnk6ICcjQjRCOUJGJywKICAgICAgICBsaWdodDogJyNEMEQ0REInLAogICAgICAgIGRhcms6ICcjOTE5MTkxJwogICAgICB9OwogICAgICByZXR1cm4gZ3JhZGllbnRUb0NvbG9yc1tjb2xvcl07CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AAEA;AACAA;AACAC,gCADA;AAEAC,gBAFA;AAGAC,wBAHA;AAIAC;AAJA,GADA;AAOAC;AACAC;AACAC,kBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,4BADA;AAEAC;AAFA,KALA;AASAE;AACAH,kBADA;AAEA;AAFA,KATA;AAaAI;AACAJ,kBADA;AAEA;AAFA,KAbA;AAiBAK;AACAL,iBADA;AAEA;AAAA;AAAA;AAFA,KAjBA;AAqBAM;AACAN,kBADA;AAEA;AAFA;AArBA,GAPA;AAiCAO;AACAC,wBADA,kCACA;AACA;AACA;AAEAC;AACAA;AAEA;AACA;;AACA;AACA;AAXA,GAjCA;AA8CAC;AACAC,mBADA,2BACAP,KADA,EACA;AACA;AACAQ,0BADA;AAEAC,0BAFA;AAGAC,0BAHA;AAIAC,yBAJA;AAKAC,uBALA;AAMAC,4BANA;AAOAC,wBAPA;AAQAC;AARA;AAWA;AACA;AAdA;AA9CA","names":["components","VueApexCharts","BCard","BCardBody","BAvatar","props","icon","type","required","statistic","statisticTitle","color","chartData","chartOptions","computed","chartOptionsComputed","options","methods","gradientToColor","primary","success","warning","danger","info","secondary","light","dark"],"sourceRoot":"src/@core/components/statistics-cards","sources":["StatisticCardWithLineChart.vue"],"sourcesContent":["<template>\n  <b-card no-body>\n    <b-card-body class=\"d-flex justify-content-between align-items-center pb-0\">\n      <div class=\"truncate\">\n        <h2 class=\"font-weight-bolder\">\n          {{ statistic }}\n        </h2>\n        <span>{{ statisticTitle }}</span>\n      </div>\n      <b-avatar\n        :variant=\"`light-${color}`\"\n        size=\"45\"\n      >\n        <feather-icon\n          size=\"21\"\n          :icon=\"icon\"\n        />\n      </b-avatar>\n    </b-card-body>\n\n    <vue-apex-charts\n      type=\"line\"\n      height=\"100\"\n      width=\"100%\"\n      :options=\"chartOptionsComputed\"\n      :series=\"chartData\"\n    />\n\n  </b-card>\n</template>\n\n<script>\nimport { BCard, BCardBody, BAvatar } from 'bootstrap-vue'\nimport VueApexCharts from 'vue-apexcharts'\nimport { $themeColors } from '@themeConfig'\nimport { lineChartOptions } from './chartOptions'\n\nexport default {\n  components: {\n    VueApexCharts,\n    BCard,\n    BCardBody,\n    BAvatar,\n  },\n  props: {\n    icon: {\n      type: String,\n      required: true,\n    },\n    statistic: {\n      type: [Number, String],\n      required: true,\n    },\n    statisticTitle: {\n      type: String,\n      default: '',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    chartData: {\n      type: Array,\n      default: () => [],\n    },\n    chartOptions: {\n      type: Object,\n      default: null,\n    },\n  },\n  computed: {\n    chartOptionsComputed() {\n      if (this.chartOptions === null) {\n        const options = JSON.parse(JSON.stringify(lineChartOptions))\n\n        options.fill.gradient.gradientToColors = [this.gradientToColor(this.color)]\n        options.colors = [$themeColors[this.color]]\n\n        return options\n      }\n      return this.chartOptions\n    },\n  },\n  methods: {\n    gradientToColor(color) {\n      const gradientToColors = {\n        primary: '#A9A2F6',\n        success: '#55DD92',\n        warning: '#ffc085',\n        danger: '#F97794',\n        info: '#59E0F0',\n        secondary: '#B4B9BF',\n        light: '#D0D4DB',\n        dark: '#919191',\n      }\n\n      return gradientToColors[color]\n    },\n  },\n}\n</script>\n"]}]}