{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/src/@core/components/app-auto-suggest/useAutoSuggest.js","dependencies":[{"path":"/home/lucas/Desktop/test/src/@core/components/app-auto-suggest/useAutoSuggest.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCB7IHJlZiwgd2F0Y2ggfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaSc7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZUF1dG9TdWdnZXN0KHByb3BzKSB7CiAgdmFyIGZpbHRlcmVkRGF0YSA9IHJlZih7fSk7CiAgLyoqCiAgICogRmlsdGVyIGdyb3VwIGFnYWluc3QgcHJvdmlkZWQgcXVlcnkKICAgKiBHcnAgU3RydWN0dXJlOgogICAqIHsKICAgKiAgICBrZXk6ICd0aXRsZScsCiAgICogICAgZGF0YTogWwogICAqICAgICAgdGl0bGU6ICdBZG1pbicsIGltZzogJ3NvbWVJbWFnZS5wbmcnLAogICAqICAgICAgdGl0bGU6ICdUZW1wbGF0ZScsIGltZzogJ290aGVySW1hZ2UucG5nJywKICAgKiAgICBdCiAgICogfQogICAqIEBwYXJhbSB7T2JqZWN0fSBncnAgR3JvdXAgb2JqZWN0IHRvIHBlcmZvcm0gZmlsdGVyIG9uCiAgICogQHBhcmFtIHtTdHJpbmd9IHF1ZXJ5IFF1ZXJ5IHN0cmluZyB0byBmaWx0ZXIKICAgKi8KCiAgdmFyIGZpbHRlckdycCA9IGZ1bmN0aW9uIGZpbHRlckdycChncnAsIHF1ZXJ5KSB7CiAgICB2YXIgZXhhY3RFbGUgPSBncnAuZGF0YS5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIGl0ZW1bZ3JwLmtleV0udG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKHF1ZXJ5LnRvTG93ZXJDYXNlKCkpOwogICAgfSk7CiAgICB2YXIgY29udGFpbkVsZSA9IGdycC5kYXRhLmZpbHRlciggLy8gcHJldHRpZXItaWdub3JlCiAgICBmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gIWl0ZW1bZ3JwLmtleV0udG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKHF1ZXJ5LnRvTG93ZXJDYXNlKCkpICYmIGl0ZW1bZ3JwLmtleV0udG9Mb3dlckNhc2UoKS5pbmRleE9mKHF1ZXJ5LnRvTG93ZXJDYXNlKCkpID4gLTE7CiAgICB9KTsKICAgIHJldHVybiBleGFjdEVsZS5jb25jYXQoY29udGFpbkVsZSkuc2xpY2UoMCwgcHJvcHMuc2VhcmNoTGltaXQpOwogIH07CgogIHZhciBzZWFyY2hRdWVyeSA9IHJlZignJyk7CgogIHZhciByZXNldHNlYXJjaFF1ZXJ5ID0gZnVuY3Rpb24gcmVzZXRzZWFyY2hRdWVyeSgpIHsKICAgIHNlYXJjaFF1ZXJ5LnZhbHVlID0gJyc7CiAgfTsKCiAgdmFyIGhhbmRsZVNlYXJjaFF1ZXJ5VXBkYXRlID0gZnVuY3Rpb24gaGFuZGxlU2VhcmNoUXVlcnlVcGRhdGUodmFsKSB7CiAgICBpZiAodmFsID09PSAnJykgewogICAgICBmaWx0ZXJlZERhdGEudmFsdWUgPSB7fTsKICAgIH0gZWxzZSB7CiAgICAgIHZhciBxdWVyaWVkRGF0YSA9IHt9OwogICAgICB2YXIgZGF0YUdycHMgPSBPYmplY3Qua2V5cyhwcm9wcy5kYXRhKTsKICAgICAgZGF0YUdycHMuZm9yRWFjaChmdW5jdGlvbiAoZ3JwLCBpKSB7CiAgICAgICAgcXVlcmllZERhdGFbZGF0YUdycHNbaV1dID0gZmlsdGVyR3JwKHByb3BzLmRhdGFbZ3JwXSwgdmFsKTsKICAgICAgfSk7CiAgICAgIGZpbHRlcmVkRGF0YS52YWx1ZSA9IHF1ZXJpZWREYXRhOwogICAgfQogIH07CgogIHdhdGNoKHNlYXJjaFF1ZXJ5LCBmdW5jdGlvbiAodmFsKSB7CiAgICByZXR1cm4gaGFuZGxlU2VhcmNoUXVlcnlVcGRhdGUodmFsKTsKICB9KTsKICByZXR1cm4gewogICAgc2VhcmNoUXVlcnk6IHNlYXJjaFF1ZXJ5LAogICAgcmVzZXRzZWFyY2hRdWVyeTogcmVzZXRzZWFyY2hRdWVyeSwKICAgIGZpbHRlcmVkRGF0YTogZmlsdGVyZWREYXRhCiAgfTsKfQ=="},{"version":3,"sources":["/home/lucas/Desktop/test/src/@core/components/app-auto-suggest/useAutoSuggest.js"],"names":["ref","watch","useAutoSuggest","props","filteredData","filterGrp","grp","query","exactEle","data","filter","item","key","toLowerCase","startsWith","containEle","indexOf","concat","slice","searchLimit","searchQuery","resetsearchQuery","value","handleSearchQueryUpdate","val","queriedData","dataGrps","Object","keys","forEach","i"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,KAAd,QAA2B,sBAA3B;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,MAAMC,YAAY,GAAGJ,GAAG,CAAC,EAAD,CAAxB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,MAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAChC,QAAMC,QAAQ,GAAGF,GAAG,CAACG,IAAJ,CAASC,MAAT,CAAgB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACL,GAAG,CAACM,GAAL,CAAJ,CAAcC,WAAd,GAA4BC,UAA5B,CAAuCP,KAAK,CAACM,WAAN,EAAvC,CAAJ;AAAA,KAApB,CAAjB;AACA,QAAME,UAAU,GAAGT,GAAG,CAACG,IAAJ,CAASC,MAAT,EACjB;AACA,cAAAC,IAAI;AAAA,aAAI,CAACA,IAAI,CAACL,GAAG,CAACM,GAAL,CAAJ,CAAcC,WAAd,GAA4BC,UAA5B,CAAuCP,KAAK,CAACM,WAAN,EAAvC,CAAD,IAAgEF,IAAI,CAACL,GAAG,CAACM,GAAL,CAAJ,CAAcC,WAAd,GAA4BG,OAA5B,CAAoCT,KAAK,CAACM,WAAN,EAApC,IAA2D,CAAC,CAAhI;AAAA,KAFa,CAAnB;AAIA,WAAOL,QAAQ,CAACS,MAAT,CAAgBF,UAAhB,EAA4BG,KAA5B,CAAkC,CAAlC,EAAqCf,KAAK,CAACgB,WAA3C,CAAP;AACD,GAPD;;AASA,MAAMC,WAAW,GAAGpB,GAAG,CAAC,EAAD,CAAvB;;AACA,MAAMqB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,WAAW,CAACE,KAAZ,GAAoB,EAApB;AACD,GAFD;;AAIA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,GAAG,EAAI;AACrC,QAAIA,GAAG,KAAK,EAAZ,EAAgB;AACdpB,MAAAA,YAAY,CAACkB,KAAb,GAAqB,EAArB;AACD,KAFD,MAEO;AACL,UAAMG,WAAW,GAAG,EAApB;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYzB,KAAK,CAACM,IAAlB,CAAjB;AAEAiB,MAAAA,QAAQ,CAACG,OAAT,CAAiB,UAACvB,GAAD,EAAMwB,CAAN,EAAY;AAC3BL,QAAAA,WAAW,CAACC,QAAQ,CAACI,CAAD,CAAT,CAAX,GAA2BzB,SAAS,CAACF,KAAK,CAACM,IAAN,CAAWH,GAAX,CAAD,EAAkBkB,GAAlB,CAApC;AACD,OAFD;AAIApB,MAAAA,YAAY,CAACkB,KAAb,GAAqBG,WAArB;AACD;AACF,GAbD;;AAeAxB,EAAAA,KAAK,CAACmB,WAAD,EAAc,UAAAI,GAAG;AAAA,WAAID,uBAAuB,CAACC,GAAD,CAA3B;AAAA,GAAjB,CAAL;AAEA,SAAO;AACLJ,IAAAA,WAAW,EAAXA,WADK;AAELC,IAAAA,gBAAgB,EAAhBA,gBAFK;AAGLjB,IAAAA,YAAY,EAAZA;AAHK,GAAP;AAKD","sourcesContent":["import { ref, watch } from '@vue/composition-api'\n\nexport default function useAutoSuggest(props) {\n  const filteredData = ref({})\n\n  /**\n   * Filter group against provided query\n   * Grp Structure:\n   * {\n   *    key: 'title',\n   *    data: [\n   *      title: 'Admin', img: 'someImage.png',\n   *      title: 'Template', img: 'otherImage.png',\n   *    ]\n   * }\n   * @param {Object} grp Group object to perform filter on\n   * @param {String} query Query string to filter\n   */\n  const filterGrp = (grp, query) => {\n    const exactEle = grp.data.filter(item => item[grp.key].toLowerCase().startsWith(query.toLowerCase()))\n    const containEle = grp.data.filter(\n      // prettier-ignore\n      item => !item[grp.key].toLowerCase().startsWith(query.toLowerCase()) && item[grp.key].toLowerCase().indexOf(query.toLowerCase()) > -1,\n    )\n    return exactEle.concat(containEle).slice(0, props.searchLimit)\n  }\n\n  const searchQuery = ref('')\n  const resetsearchQuery = () => {\n    searchQuery.value = ''\n  }\n\n  const handleSearchQueryUpdate = val => {\n    if (val === '') {\n      filteredData.value = {}\n    } else {\n      const queriedData = {}\n      const dataGrps = Object.keys(props.data)\n\n      dataGrps.forEach((grp, i) => {\n        queriedData[dataGrps[i]] = filterGrp(props.data[grp], val)\n      })\n\n      filteredData.value = queriedData\n    }\n  }\n\n  watch(searchQuery, val => handleSearchQueryUpdate(val))\n\n  return {\n    searchQuery,\n    resetsearchQuery,\n    filteredData,\n  }\n}\n"]}]}