{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/apps/user/users-list/UserListAddNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/apps/user/users-list/UserListAddNew.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBCU2lkZWJhciwgQkZvcm0sIEJGb3JtR3JvdXAsIEJGb3JtSW5wdXQsIEJGb3JtSW52YWxpZEZlZWRiYWNrLCBCQnV0dG9uIH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSc7CmltcG9ydCB7IFZhbGlkYXRpb25Qcm92aWRlciwgVmFsaWRhdGlvbk9ic2VydmVyIH0gZnJvbSAndmVlLXZhbGlkYXRlJzsKaW1wb3J0IHsgcmVmIH0gZnJvbSAnQHZ1ZS9jb21wb3NpdGlvbi1hcGknOwppbXBvcnQgeyByZXF1aXJlZCwgYWxwaGFOdW0sIGVtYWlsIH0gZnJvbSAnQHZhbGlkYXRpb25zJzsKaW1wb3J0IGZvcm1WYWxpZGF0aW9uIGZyb20gJ0Bjb3JlL2NvbXAtZnVuY3Rpb25zL2Zvcm1zL2Zvcm0tdmFsaWRhdGlvbic7CmltcG9ydCBSaXBwbGUgZnJvbSAndnVlLXJpcHBsZS1kaXJlY3RpdmUnOwppbXBvcnQgdlNlbGVjdCBmcm9tICd2dWUtc2VsZWN0JzsKaW1wb3J0IGNvdW50cmllcyBmcm9tICdAL0BmYWtlLWRiL2RhdGEvb3RoZXIvY291bnRyaWVzJzsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQlNpZGViYXI6IEJTaWRlYmFyLAogICAgQkZvcm06IEJGb3JtLAogICAgQkZvcm1Hcm91cDogQkZvcm1Hcm91cCwKICAgIEJGb3JtSW5wdXQ6IEJGb3JtSW5wdXQsCiAgICBCRm9ybUludmFsaWRGZWVkYmFjazogQkZvcm1JbnZhbGlkRmVlZGJhY2ssCiAgICBCQnV0dG9uOiBCQnV0dG9uLAogICAgdlNlbGVjdDogdlNlbGVjdCwKICAgIC8vIEZvcm0gVmFsaWRhdGlvbgogICAgVmFsaWRhdGlvblByb3ZpZGVyOiBWYWxpZGF0aW9uUHJvdmlkZXIsCiAgICBWYWxpZGF0aW9uT2JzZXJ2ZXI6IFZhbGlkYXRpb25PYnNlcnZlcgogIH0sCiAgZGlyZWN0aXZlczogewogICAgUmlwcGxlOiBSaXBwbGUKICB9LAogIG1vZGVsOiB7CiAgICBwcm9wOiAnaXNBZGROZXdVc2VyU2lkZWJhckFjdGl2ZScsCiAgICBldmVudDogJ3VwZGF0ZTppcy1hZGQtbmV3LXVzZXItc2lkZWJhci1hY3RpdmUnCiAgfSwKICBwcm9wczogewogICAgaXNBZGROZXdVc2VyU2lkZWJhckFjdGl2ZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHJvbGVPcHRpb25zOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHBsYW5PcHRpb25zOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgYWxwaGFOdW06IGFscGhhTnVtLAogICAgICBlbWFpbDogZW1haWwsCiAgICAgIGNvdW50cmllczogY291bnRyaWVzCiAgICB9OwogIH0sCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzLCBfcmVmKSB7CiAgICB2YXIgZW1pdCA9IF9yZWYuZW1pdDsKICAgIHZhciBibGFua1VzZXJEYXRhID0gewogICAgICBmdWxsTmFtZTogJycsCiAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgZW1haWw6ICcnLAogICAgICByb2xlOiBudWxsLAogICAgICBjdXJyZW50UGxhbjogbnVsbCwKICAgICAgY29tcGFueTogJycsCiAgICAgIGNvdW50cnk6ICcnLAogICAgICBjb250YWN0OiAnJwogICAgfTsKICAgIHZhciB1c2VyRGF0YSA9IHJlZihKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGJsYW5rVXNlckRhdGEpKSk7CgogICAgdmFyIHJlc2V0dXNlckRhdGEgPSBmdW5jdGlvbiByZXNldHVzZXJEYXRhKCkgewogICAgICB1c2VyRGF0YS52YWx1ZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoYmxhbmtVc2VyRGF0YSkpOwogICAgfTsKCiAgICB2YXIgb25TdWJtaXQgPSBmdW5jdGlvbiBvblN1Ym1pdCgpIHsKICAgICAgc3RvcmUuZGlzcGF0Y2goJ2FwcC11c2VyL2FkZFVzZXInLCB1c2VyRGF0YS52YWx1ZSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgZW1pdCgncmVmZXRjaC1kYXRhJyk7CiAgICAgICAgZW1pdCgndXBkYXRlOmlzLWFkZC1uZXctdXNlci1zaWRlYmFyLWFjdGl2ZScsIGZhbHNlKTsKICAgICAgfSk7CiAgICB9OwoKICAgIHZhciBfZm9ybVZhbGlkYXRpb24gPSBmb3JtVmFsaWRhdGlvbihyZXNldHVzZXJEYXRhKSwKICAgICAgICByZWZGb3JtT2JzZXJ2ZXIgPSBfZm9ybVZhbGlkYXRpb24ucmVmRm9ybU9ic2VydmVyLAogICAgICAgIGdldFZhbGlkYXRpb25TdGF0ZSA9IF9mb3JtVmFsaWRhdGlvbi5nZXRWYWxpZGF0aW9uU3RhdGUsCiAgICAgICAgcmVzZXRGb3JtID0gX2Zvcm1WYWxpZGF0aW9uLnJlc2V0Rm9ybTsKCiAgICByZXR1cm4gewogICAgICB1c2VyRGF0YTogdXNlckRhdGEsCiAgICAgIG9uU3VibWl0OiBvblN1Ym1pdCwKICAgICAgcmVmRm9ybU9ic2VydmVyOiByZWZGb3JtT2JzZXJ2ZXIsCiAgICAgIGdldFZhbGlkYXRpb25TdGF0ZTogZ2V0VmFsaWRhdGlvblN0YXRlLAogICAgICByZXNldEZvcm06IHJlc2V0Rm9ybQogICAgfTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmQA,SACAA,QADA,EACAC,KADA,EACAC,UADA,EACAC,UADA,EACAC,oBADA,EACAC,OADA,QAEA,eAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC;AACAN,sBADA;AAEAC,gBAFA;AAGAC,0BAHA;AAIAC,0BAJA;AAKAC,8CALA;AAMAC,oBANA;AAOAE,oBAPA;AASA;AACAC,0CAVA;AAWAC;AAXA,GADA;AAcAC;AACAC;AADA,GAdA;AAiBAC;AACAC,qCADA;AAEAC;AAFA,GAjBA;AAqBAC;AACAC;AACAC,mBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,iBADA;AAEAC;AAFA,KALA;AASAE;AACAH,iBADA;AAEAC;AAFA;AATA,GArBA;AAmCAG,MAnCA,kBAmCA;AACA;AACAH,wBADA;AAEAI,wBAFA;AAGAC,kBAHA;AAIAC;AAJA;AAMA,GA1CA;AA2CAC,OA3CA,iBA2CAV,KA3CA,QA2CA;AAAA;AACA;AACAW,kBADA;AAEAC,kBAFA;AAGAJ,eAHA;AAIAK,gBAJA;AAKAC,uBALA;AAMAC,iBANA;AAOAC,iBAPA;AAQAC;AARA;AAWA;;AACA;AACAC;AACA,KAFA;;AAIA;AACAC,yDACAC,IADA,CACA;AACAC;AACAA;AACA,OAJA;AAKA,KANA;;AAQA,0BAIAC,6BAJA;AAAA,QACAC,eADA,mBACAA,eADA;AAAA,QAEAC,kBAFA,mBAEAA,kBAFA;AAAA,QAGAC,SAHA,mBAGAA,SAHA;;AAMA;AACAP,wBADA;AAEAQ,wBAFA;AAIAH,sCAJA;AAKAC,4CALA;AAMAC;AANA;AAQA;AAlFA","names":["BSidebar","BForm","BFormGroup","BFormInput","BFormInvalidFeedback","BButton","components","vSelect","ValidationProvider","ValidationObserver","directives","Ripple","model","prop","event","props","isAddNewUserSidebarActive","type","required","roleOptions","planOptions","data","alphaNum","email","countries","setup","fullName","username","role","currentPlan","company","country","contact","userData","store","then","emit","formValidation","refFormObserver","getValidationState","resetForm","onSubmit"],"sourceRoot":"src/views/apps/user/users-list","sources":["UserListAddNew.vue"],"sourcesContent":["<template>\n  <b-sidebar\n    id=\"add-new-user-sidebar\"\n    :visible=\"isAddNewUserSidebarActive\"\n    bg-variant=\"white\"\n    sidebar-class=\"sidebar-lg\"\n    shadow\n    backdrop\n    no-header\n    right\n    @hidden=\"resetForm\"\n    @change=\"(val) => $emit('update:is-add-new-user-sidebar-active', val)\"\n  >\n    <template #default=\"{ hide }\">\n      <!-- Header -->\n      <div class=\"d-flex justify-content-between align-items-center content-sidebar-header px-2 py-1\">\n        <h5 class=\"mb-0\">\n          Add New User\n        </h5>\n\n        <feather-icon\n          class=\"ml-1 cursor-pointer\"\n          icon=\"XIcon\"\n          size=\"16\"\n          @click=\"hide\"\n        />\n\n      </div>\n\n      <!-- BODY -->\n      <validation-observer\n        #default=\"{ handleSubmit }\"\n        ref=\"refFormObserver\"\n      >\n        <!-- Form -->\n        <b-form\n          class=\"p-2\"\n          @submit.prevent=\"handleSubmit(onSubmit)\"\n          @reset.prevent=\"resetForm\"\n        >\n\n          <!-- Full Name -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Full Name\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Full Name\"\n              label-for=\"full-name\"\n            >\n              <b-form-input\n                id=\"full-name\"\n                v-model=\"userData.fullName\"\n                autofocus\n                :state=\"getValidationState(validationContext)\"\n                trim\n                placeholder=\"John Doe\"\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Username -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Username\"\n            rules=\"required|alpha-num\"\n          >\n            <b-form-group\n              label=\"Username\"\n              label-for=\"username\"\n            >\n              <b-form-input\n                id=\"username\"\n                v-model=\"userData.username\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Email -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Email\"\n            rules=\"required|email\"\n          >\n            <b-form-group\n              label=\"Email\"\n              label-for=\"email\"\n            >\n              <b-form-input\n                id=\"email\"\n                v-model=\"userData.email\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Company -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Contact\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Contact\"\n              label-for=\"contact\"\n            >\n              <b-form-input\n                id=\"contact\"\n                v-model=\"userData.contact\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Company -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Company\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Company\"\n              label-for=\"company\"\n            >\n              <b-form-input\n                id=\"company\"\n                v-model=\"userData.company\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Country -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Country\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Country\"\n              label-for=\"country\"\n              :state=\"getValidationState(validationContext)\"\n            >\n              <v-select\n                v-model=\"userData.country\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"countries\"\n                :clearable=\"false\"\n                input-id=\"country\"\n              />\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- User Role -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"User Role\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"User Role\"\n              label-for=\"user-role\"\n              :state=\"getValidationState(validationContext)\"\n            >\n              <v-select\n                v-model=\"userData.role\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"roleOptions\"\n                :reduce=\"val => val.value\"\n                :clearable=\"false\"\n                input-id=\"user-role\"\n              />\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Plan -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Plan\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Plan\"\n              label-for=\"plan\"\n              :state=\"getValidationState(validationContext)\"\n            >\n              <v-select\n                v-model=\"userData.currentPlan\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"planOptions\"\n                :reduce=\"val => val.value\"\n                :clearable=\"false\"\n                input-id=\"plan\"\n              />\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Form Actions -->\n          <div class=\"d-flex mt-2\">\n            <b-button\n              v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n              variant=\"primary\"\n              class=\"mr-2\"\n              type=\"submit\"\n            >\n              Add\n            </b-button>\n            <b-button\n              v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n              type=\"button\"\n              variant=\"outline-secondary\"\n              @click=\"hide\"\n            >\n              Cancel\n            </b-button>\n          </div>\n\n        </b-form>\n      </validation-observer>\n    </template>\n  </b-sidebar>\n</template>\n\n<script>\nimport {\n  BSidebar, BForm, BFormGroup, BFormInput, BFormInvalidFeedback, BButton,\n} from 'bootstrap-vue'\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport { ref } from '@vue/composition-api'\nimport { required, alphaNum, email } from '@validations'\nimport formValidation from '@core/comp-functions/forms/form-validation'\nimport Ripple from 'vue-ripple-directive'\nimport vSelect from 'vue-select'\nimport countries from '@/@fake-db/data/other/countries'\nimport store from '@/store'\n\nexport default {\n  components: {\n    BSidebar,\n    BForm,\n    BFormGroup,\n    BFormInput,\n    BFormInvalidFeedback,\n    BButton,\n    vSelect,\n\n    // Form Validation\n    ValidationProvider,\n    ValidationObserver,\n  },\n  directives: {\n    Ripple,\n  },\n  model: {\n    prop: 'isAddNewUserSidebarActive',\n    event: 'update:is-add-new-user-sidebar-active',\n  },\n  props: {\n    isAddNewUserSidebarActive: {\n      type: Boolean,\n      required: true,\n    },\n    roleOptions: {\n      type: Array,\n      required: true,\n    },\n    planOptions: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      required,\n      alphaNum,\n      email,\n      countries,\n    }\n  },\n  setup(props, { emit }) {\n    const blankUserData = {\n      fullName: '',\n      username: '',\n      email: '',\n      role: null,\n      currentPlan: null,\n      company: '',\n      country: '',\n      contact: '',\n    }\n\n    const userData = ref(JSON.parse(JSON.stringify(blankUserData)))\n    const resetuserData = () => {\n      userData.value = JSON.parse(JSON.stringify(blankUserData))\n    }\n\n    const onSubmit = () => {\n      store.dispatch('app-user/addUser', userData.value)\n        .then(() => {\n          emit('refetch-data')\n          emit('update:is-add-new-user-sidebar-active', false)\n        })\n    }\n\n    const {\n      refFormObserver,\n      getValidationState,\n      resetForm,\n    } = formValidation(resetuserData)\n\n    return {\n      userData,\n      onSubmit,\n\n      refFormObserver,\n      getValidationState,\n      resetForm,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-select.scss';\n\n#add-new-user-sidebar {\n  .vs__dropdown-menu {\n    max-height: 200px !important;\n  }\n}\n</style>\n"]}]}