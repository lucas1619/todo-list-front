{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/src/views/components/overlay/code.js","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/overlay/code.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IHZhciBjb2RlQmFzaWMgPSAiXG48dGVtcGxhdGU+XG4gIDxkaXY+XG4gICAgPGItb3ZlcmxheVxuICAgICAgOnNob3c9XCJzaG93XCJcbiAgICAgIHJvdW5kZWQ9XCJzbVwiXG4gICAgPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGItY2FyZC10ZXh0PlxuICAgICAgICAgIDxzcGFuPkJvb3RzdHJhcFZ1ZSdzIGN1c3RvbSA8L3NwYW4+XG4gICAgICAgICAgPGNvZGU+Yi1vdmVybGF5PC9jb2RlPlxuICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgY29tcG9uZW50IGlzIHVzZWQgdG8gdmlzdWFsbHkgb2JzY3VyZSBhIHBhcnRpY3VsYXIgZWxlbWVudCBvciBjb21wb25lbnQgYW5kIGl0cyBjb250ZW50LiBJdCBzaWduYWxzIHRvIHRoZVxuICAgICAgICAgICAgdXNlciBvZiBhIHN0YXRlIGNoYW5nZSB3aXRoaW4gdGhlIGVsZW1lbnQgb3IgY29tcG9uZW50IGFuZCBjYW4gYmUgdXNlZCBmb3IgY3JlYXRpbmcgbG9hZGVycyxcbiAgICAgICAgICAgIHdhcm5pbmdzL2FsZXJ0cywgcHJvbXB0cywgYW5kIG1vcmUuXG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2ItY2FyZC10ZXh0PlxuXG4gICAgICAgIDxiLWJ1dHRvblxuICAgICAgICAgIHYtcmlwcGxlLjQwMD1cIidyZ2JhKDExMywgMTAyLCAyNDAsIDAuMTUpJ1wiXG4gICAgICAgICAgOmRpc2FibGVkPVwic2hvd1wiXG4gICAgICAgICAgdmFyaWFudD1cIm91dGxpbmUtcHJpbWFyeVwiXG4gICAgICAgICAgQGNsaWNrPVwic2hvdyA9IHRydWVcIlxuICAgICAgICA+XG4gICAgICAgICAgU2hvdyBvdmVybGF5XG4gICAgICAgIDwvYi1idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Itb3ZlcmxheT5cblxuICAgIDxiLWJ1dHRvblxuICAgICAgdi1yaXBwbGUuNDAwPVwiJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSknXCJcbiAgICAgIHZhcmlhbnQ9XCJwcmltYXJ5XCJcbiAgICAgIGNsYXNzPVwibXQtMVwiXG4gICAgICBAY2xpY2s9XCJzaG93ID0gIXNob3dcIlxuICAgID5cbiAgICAgIFRvZ2dsZSBvdmVybGF5XG4gICAgPC9iLWJ1dHRvbj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHsgQk92ZXJsYXksIEJCdXR0b24sIEJDYXJkVGV4dCB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnXG5pbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICBCT3ZlcmxheSxcbiAgICBCQnV0dG9uLFxuICAgIEJDYXJkVGV4dCxcbiAgfSxcbiAgZGlyZWN0aXZlczoge1xuICAgIFJpcHBsZSxcbiAgfSxcbiAgZGF0YTogKCkgPT4gKHtcbiAgICBzaG93OiBmYWxzZSxcbiAgfSksXG59XG48L3NjcmlwdD5cbiI7CmV4cG9ydCB2YXIgY29kZUJhY2tkcm9wID0gIlxuPHRlbXBsYXRlPlxuICA8Yi1yb3c+XG4gICAgPGItY29sXG4gICAgICBsZz1cIjZcIlxuICAgICAgYXJpYS1jb250cm9scz1cIm92ZXJsYXktYmFja2dyb3VuZFwiXG4gICAgPlxuICAgICAgPGItZm9ybS1ncm91cFxuICAgICAgICBsYWJlbD1cIlZhcmlhbnRcIlxuICAgICAgICBsYWJlbC1mb3I9XCJiZy12YXJpYW50XCJcbiAgICAgICAgbGFiZWwtY29scy1zbT1cIjRcIlxuICAgICAgICBsYWJlbC1jb2xzLWxnPVwiMTJcIlxuICAgICAgPlxuICAgICAgICA8Yi1mb3JtLXNlbGVjdFxuICAgICAgICAgIGlkPVwiYmctdmFyaWFudFwiXG4gICAgICAgICAgdi1tb2RlbD1cInZhcmlhbnRcIlxuICAgICAgICAgIDpvcHRpb25zPVwidmFyaWFudHNcIlxuICAgICAgICAvPlxuICAgICAgPC9iLWZvcm0tZ3JvdXA+XG4gICAgICA8Yi1mb3JtLWdyb3VwXG4gICAgICAgIGxhYmVsPVwiT3BhY2l0eVwiXG4gICAgICAgIGxhYmVsLWZvcj1cImJnLW9wYWNpdHlcIlxuICAgICAgICBsYWJlbC1jb2xzLXNtPVwiNFwiXG4gICAgICAgIGxhYmVsLWNvbHMtbGc9XCIxMlwiXG4gICAgICA+XG4gICAgICAgIDxiLWlucHV0LWdyb3VwPlxuICAgICAgICAgIDxiLWZvcm0taW5wdXRcbiAgICAgICAgICAgIGlkPVwiYmctb3BhY2l0eVwiXG4gICAgICAgICAgICB2LW1vZGVsPVwib3BhY2l0eVwiXG4gICAgICAgICAgICB0eXBlPVwicmFuZ2VcIlxuICAgICAgICAgICAgbnVtYmVyXG4gICAgICAgICAgICBtaW49XCIwXCJcbiAgICAgICAgICAgIG1heD1cIjFcIlxuICAgICAgICAgICAgc3RlcD1cIjAuMDFcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGItaW5wdXQtZ3JvdXAtYXBwZW5kXG4gICAgICAgICAgICBpcy10ZXh0XG4gICAgICAgICAgICBjbGFzcz1cInRleHQtbW9ub3NwYWNlXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7eyBvcGFjaXR5LnRvRml4ZWQoMikgfX1cbiAgICAgICAgICA8L2ItaW5wdXQtZ3JvdXAtYXBwZW5kPlxuICAgICAgICA8L2ItaW5wdXQtZ3JvdXA+XG4gICAgICA8L2ItZm9ybS1ncm91cD5cbiAgICAgIDxiLWZvcm0tZ3JvdXBcbiAgICAgICAgbGFiZWw9XCJCbHVyXCJcbiAgICAgICAgbGFiZWwtZm9yPVwiYmctYmx1clwiXG4gICAgICAgIGxhYmVsLWNvbHMtc209XCI0XCJcbiAgICAgICAgbGFiZWwtY29scy1sZz1cIjEyXCJcbiAgICAgICAgY2xhc3M9XCJtYi0yIG1iLWxnLTBcIlxuICAgICAgPlxuICAgICAgICA8Yi1mb3JtLXNlbGVjdFxuICAgICAgICAgIGlkPVwiYmctYmx1clwiXG4gICAgICAgICAgdi1tb2RlbD1cImJsdXJcIlxuICAgICAgICAgIDpvcHRpb25zPVwiYmx1cnNcIlxuICAgICAgICAvPlxuICAgICAgPC9iLWZvcm0tZ3JvdXA+XG4gICAgPC9iLWNvbD5cbiAgICA8Yi1jb2wgbGc9XCI2XCI+XG4gICAgICA8Yi1vdmVybGF5XG4gICAgICAgIGlkPVwib3ZlcmxheS1iYWNrZ3JvdW5kXCJcbiAgICAgICAgc2hvd1xuICAgICAgICA6dmFyaWFudD1cInZhcmlhbnRcIlxuICAgICAgICA6b3BhY2l0eT1cIm9wYWNpdHlcIlxuICAgICAgICA6Ymx1cj1cImJsdXJcIlxuICAgICAgICByb3VuZGVkPVwic21cIlxuICAgICAgPlxuICAgICAgICA8Yi1jYXJkXG4gICAgICAgICAgdGl0bGU9XCJDYXJkIHdpdGggb3ZlcmxheVwiXG4gICAgICAgICAgYXJpYS1oaWRkZW49XCJ0cnVlXCJcbiAgICAgICAgICBjbGFzcz1cIm1iLTBcIlxuICAgICAgICA+XG4gICAgICAgICAgPGItY2FyZC10ZXh0PlxuICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0XG4gICAgICAgICAgICBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1bGxhbWNvIGxhYm9yaXMgbmlzaSB1dCBhbGlxdWlwXG4gICAgICAgICAgICBleCBlYSBjb21tb2RvIGNvbnNlcXVhdC5cbiAgICAgICAgICA8L2ItY2FyZC10ZXh0PlxuICAgICAgICAgIDxiLWJ1dHRvblxuICAgICAgICAgICAgdi1yaXBwbGUuNDAwPVwiJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSknXCJcbiAgICAgICAgICAgIGRpc2FibGVkXG4gICAgICAgICAgICB2YXJpYW50PVwicHJpbWFyeVwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgQnV0dG9uXG4gICAgICAgICAgPC9iLWJ1dHRvbj5cbiAgICAgICAgPC9iLWNhcmQ+XG4gICAgICA8L2Itb3ZlcmxheT5cbiAgICA8L2ItY29sPlxuICA8L2Itcm93PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbiAgaW1wb3J0IHtcbiAgICBCUm93LFxuICAgIEJDb2wsXG4gICAgQkZvcm1Hcm91cCxcbiAgICBCRm9ybVNlbGVjdCxcbiAgICBCRm9ybUlucHV0LFxuICAgIEJJbnB1dEdyb3VwQXBwZW5kLFxuICAgIEJDYXJkLFxuICAgIEJPdmVybGF5LFxuICAgIEJCdXR0b24sXG4gICAgQklucHV0R3JvdXAsXG4gIH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZSdcbmltcG9ydCBSaXBwbGUgZnJvbSAndnVlLXJpcHBsZS1kaXJlY3RpdmUnXG5cbiAgZXhwb3J0IGRlZmF1bHQge1xuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgIEJSb3csXG4gICAgICBCQ29sLFxuICAgICAgQkZvcm1Hcm91cCxcbiAgICAgIEJGb3JtU2VsZWN0LFxuICAgICAgQkZvcm1JbnB1dCxcbiAgICAgIEJJbnB1dEdyb3VwQXBwZW5kLFxuICAgICAgQkNhcmQsXG4gICAgICBCT3ZlcmxheSxcbiAgICAgIEJCdXR0b24sXG4gICAgICBCQ2FyZFRleHQsXG4gICAgICBCSW5wdXRHcm91cCxcbiAgICB9LFxuICAgIGRpcmVjdGl2ZXM6IHtcbiAgICBSaXBwbGUsXG4gIH0sXG4gICAgZGF0YTogKCkgPT4gKHtcbiAgICAgIHZhcmlhbnQ6ICdsaWdodCcsXG4gICAgICBvcGFjaXR5OiAwLjg1LFxuICAgICAgYmx1cjogJzJweCcsXG4gICAgICB2YXJpYW50czogWyd0cmFuc3BhcmVudCcsICd3aGl0ZScsICdsaWdodCcsICdkYXJrJywgJ3ByaW1hcnknLCAnc2Vjb25kYXJ5JywgJ3N1Y2Nlc3MnLCAnZGFuZ2VyJywgJ3dhcm5pbmcnLCAnaW5mbyddLFxuICAgICAgYmx1cnM6IFt7IHRleHQ6ICdOb25lJywgdmFsdWU6ICcnIH0sICcxcHgnLCAnMnB4JywgJzVweCcsICcwLjVlbScsICcxcmVtJ10sXG4gICAgfSksXG4gIH1cbjwvc2NyaXB0PlxuIjsKZXhwb3J0IHZhciBjb2RlRmFkZSA9ICJcbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8Yi1vdmVybGF5XG4gICAgICA6c2hvdz1cInNob3dcIlxuICAgICAgcm91bmRlZD1cInNtXCJcbiAgICAgIG5vLWZhZGVcbiAgICA+XG4gICAgICA8ZGl2XG4gICAgICAgIHRpdGxlPVwiQ2FyZCB3aXRoIG92ZXJsYXlcIlxuICAgICAgICA6YXJpYS1oaWRkZW49XCJzaG93ID8gJ3RydWUnIDogbnVsbFwiXG4gICAgICA+XG4gICAgICAgIDxiLWNhcmQtdGV4dD5cbiAgICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gRGlzdGluY3RpbyB2b2x1cHRhdGlidXMgZG9sb3JlbXF1ZSBkb2xvciBuZXNjaXVudFxuICAgICAgICAgIGVzdCBub2JpcyBjb25zZXF1dW50dXIgbWF4aW1lIGVhIGlwc2FtPyBEb2xvcmlidXMgcXVpZGVtIGRvbG9yZW1xdWUgYWQgbGF1ZGFudGl1bSB1bGxhbSBlb3MsIGNvbnNlcXV1bnR1clxuICAgICAgICAgIHZlbGl0IHF1YXMgdmVyby5cbiAgICAgICAgPC9iLWNhcmQtdGV4dD5cblxuICAgICAgICA8Yi1idXR0b25cbiAgICAgICAgICB2LXJpcHBsZS40MDA9XCIncmdiYSgxMTMsIDEwMiwgMjQwLCAwLjE1KSdcIlxuICAgICAgICAgIDpkaXNhYmxlZD1cInNob3dcIlxuICAgICAgICAgIHZhcmlhbnQ9XCJvdXRsaW5lLXByaW1hcnlcIlxuICAgICAgICAgIEBjbGljaz1cInNob3cgPSB0cnVlXCJcbiAgICAgICAgPlxuICAgICAgICAgIFNob3cgb3ZlcmxheVxuICAgICAgICA8L2ItYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9iLW92ZXJsYXk+XG5cbiAgICA8IS0tIHRyaWdnZXIgYnV0dG9uIC0tPlxuICAgIDxiLWJ1dHRvblxuICAgICAgdi1yaXBwbGUuNDAwPVwiJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSknXCJcbiAgICAgIHZhcmlhbnQ9XCJwcmltYXJ5XCJcbiAgICAgIGNsYXNzPVwibXQtMVwiXG4gICAgICBAY2xpY2s9XCJzaG93ID0gIXNob3dcIlxuICAgID5cbiAgICAgIFRvZ2dsZSBvdmVybGF5XG4gICAgPC9iLWJ1dHRvbj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHsgQk92ZXJsYXksIEJCdXR0b24sIEJDYXJkVGV4dCB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnXG5pbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJ1xuXG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICBCT3ZlcmxheSxcbiAgICAgIEJCdXR0b24sXG4gICAgICBCQ2FyZFRleHQsXG4gICAgfSxcbiAgICBkaXJlY3RpdmVzOiB7XG4gICAgUmlwcGxlLFxuICB9LFxuICAgIGRhdGE6ICgpID0+ICh7XG4gICAgICBzaG93OiBmYWxzZSxcbiAgICB9KSxcbiAgfVxuPC9zY3JpcHQ+XG4iOwpleHBvcnQgdmFyIGNvZGVTcGlubmVyID0gIlxuPHRlbXBsYXRlPlxuICA8Yi1vdmVybGF5XG4gICAgc2hvd1xuICAgIHNwaW5uZXItdmFyaWFudD1cInByaW1hcnlcIlxuICAgIHNwaW5uZXItdHlwZT1cImdyb3dcIlxuICAgIHNwaW5uZXItc21hbGxcbiAgICByb3VuZGVkPVwic21cIlxuICA+XG4gICAgPGItY2FyZFxuICAgICAgdGl0bGU9XCJDYXJkIHdpdGggc3Bpbm5lciBzdHlsZVwiXG4gICAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgICAgY2xhc3M9XCJtYi0wXCJcbiAgICA+XG4gICAgICA8Yi1jYXJkLXRleHQ+XG4gICAgICAgIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldFxuICAgICAgICBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1bGxhbWNvIGxhYm9yaXMgbmlzaSB1dCBhbGlxdWlwIGV4XG4gICAgICAgIGVhIGNvbW1vZG8gY29uc2VxdWF0LlxuICAgICAgPC9iLWNhcmQtdGV4dD5cbiAgICAgIDxiLWJ1dHRvblxuICAgICAgICB2LXJpcHBsZS40MDA9XCIncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSdcIlxuICAgICAgICBkaXNhYmxlZFxuICAgICAgICB2YXJpYW50PVwicHJpbWFyeVwiXG4gICAgICA+XG4gICAgICAgIEJ1dHRvblxuICAgICAgPC9iLWJ1dHRvbj5cbiAgICA8L2ItY2FyZD5cbiAgPC9iLW92ZXJsYXk+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHsgQk92ZXJsYXksIEJCdXR0b24sIEJDYXJkLCBCQ2FyZFRleHR9IGZyb20gJ2Jvb3RzdHJhcC12dWUnXG5pbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICBCT3ZlcmxheSxcbiAgICBCQnV0dG9uLFxuICAgIEJDYXJkLFxuICAgIEJDYXJkVGV4dCxcbiAgfSxcbiAgZGlyZWN0aXZlczoge1xuICAgIFJpcHBsZSxcbiAgfSxcbn1cbjwvc2NyaXB0PlxuIjsKZXhwb3J0IHZhciBjb2RlQ29ybmVyUm91bmRlZCA9ICJcbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8Yi1idXR0b25cbiAgICAgIHYtcmlwcGxlLjQwMD1cIidyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpJ1wiXG4gICAgICB2YXJpYW50PVwicHJpbWFyeVwiXG4gICAgICBAY2xpY2s9XCJzaG93ID0gIXNob3dcIlxuICAgID5cbiAgICAgIFRvZ2dsZSBvdmVybGF5XG4gICAgPC9iLWJ1dHRvbj5cblxuICAgIDxiLXJvdyBjbGFzcz1cInRleHQtY2VudGVyIG10LTJcIj5cbiAgICAgIDxiLWNvbCBtZD1cIjZcIj5cbiAgICAgICAgPGItY2FyZC10ZXh0PldpdGggcm91bmRpbmc8L2ItY2FyZC10ZXh0PlxuICAgICAgICA8Yi1vdmVybGF5XG4gICAgICAgICAgOnNob3c9XCJzaG93XCJcbiAgICAgICAgICBjbGFzcz1cImQtaW5saW5lLWJsb2NrXCJcbiAgICAgICAgICByb3VuZGVkPVwiY2lyY2xlXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxiLWltZ1xuICAgICAgICAgICAgcm91bmRlZD1cImNpcmNsZVwiXG4gICAgICAgICAgICBoZWlnaHQ9XCIzMDBcIlxuICAgICAgICAgICAgOnNyYz1cInJlcXVpcmUoJ0AvYXNzZXRzL2ltYWdlcy9iYW5uZXIvYmFubmVyLTI3LmpwZycpXCJcbiAgICAgICAgICAgIGFsdD1cIkltYWdlIDFcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvYi1vdmVybGF5PlxuICAgICAgPC9iLWNvbD5cbiAgICAgIDxiLWNvbFxuICAgICAgICBtZD1cIjZcIlxuICAgICAgICBjbGFzcz1cIm10LTEgbXQtbWQtMFwiXG4gICAgICA+XG4gICAgICAgIDxiLWNhcmQtdGV4dD5XaXRob3V0IHJvdW5kaW5nPC9iLWNhcmQtdGV4dD5cbiAgICAgICAgPGItb3ZlcmxheVxuICAgICAgICAgIDpzaG93PVwic2hvd1wiXG4gICAgICAgICAgY2xhc3M9XCJkLWlubGluZS1ibG9ja1wiXG4gICAgICAgID5cbiAgICAgICAgICA8Yi1pbWdcbiAgICAgICAgICAgIHJvdW5kZWQ9XCJjaXJjbGVcIlxuICAgICAgICAgICAgaGVpZ2h0PVwiMzAwXCJcbiAgICAgICAgICAgIDpzcmM9XCJyZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvYmFubmVyL2Jhbm5lci0yNy5qcGcnKVwiXG4gICAgICAgICAgICBhbHQ9XCJJbWFnZSAxXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2Itb3ZlcmxheT5cbiAgICAgIDwvYi1jb2w+XG4gICAgPC9iLXJvdz5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHtCT3ZlcmxheSwgQkJ1dHRvbiwgQkltZywgQlJvdywgQkNvbCwgQkNhcmRUZXh0fSBmcm9tICdib290c3RyYXAtdnVlJ1xuaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICBjb21wb25lbnRzOiB7XG4gICAgQk92ZXJsYXksXG4gICAgQkJ1dHRvbixcbiAgICBCQ2FyZFRleHQsXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHZ1ZS9uby11bnVzZWQtY29tcG9uZW50c1xuICAgIEJJbWcsXG4gICAgQlJvdyxcbiAgICBCQ29sLFxuICB9LFxuICBkaXJlY3RpdmVzOiB7XG4gICAgUmlwcGxlLFxuICB9LFxuICBkYXRhOiAoKSA9PiAoe1xuICAgIHNob3c6IGZhbHNlLFxuICB9KSxcbn1cbjwvc2NyaXB0PlxuIjsKZXhwb3J0IHZhciBjb2RlQ3VzdG9tQ29udGVudCA9ICJcbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8Yi1vdmVybGF5IDpzaG93PVwic2hvd1wiIHJvdW5kZWQ9XCJzbVwiIEBzaG93bj1cIm9uU2hvd25cIiBAaGlkZGVuPVwib25IaWRkZW5cIj5cbiAgICA8ZGl2PlxuICAgICAgPGg2PkNhcmQgd2l0aCBjdXN0b20gb3ZlcmxheSBjb250ZW50PC9oNj5cbiAgICAgIDxwPkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQuPC9wPlxuICAgICAgPHA+Q2xpY2sgdGhlIGJ1dHRvbiB0byB0b2dnbGUgdGhlIG92ZXJsYXk6PC9wPlxuICAgICAgPGItYnV0dG9uIHYtcmlwcGxlLjQwMD1cIidyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpJ1wiIHJlZj1cInNob3dcIiA6ZGlzYWJsZWQ9XCJzaG93XCIgdmFyaWFudD1cInByaW1hcnlcIiBAY2xpY2s9XCJzaG93ID0gdHJ1ZVwiPlxuICAgICAgICBTaG93IG92ZXJsYXlcbiAgICAgIDwvYi1idXR0b24+XG4gICAgPC9kaXY+XG4gICAgPHRlbXBsYXRlICNvdmVybGF5PlxuICAgICAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyXCI+XG4gICAgICAgIDxiLWljb24gaWNvbj1cInN0b3B3YXRjaFwiIGZvbnQtc2NhbGU9XCIzXCIgYW5pbWF0aW9uPVwiY3lsb25cIiAvPlxuICAgICAgICA8cCBpZD1cImNhbmNlbC1sYWJlbFwiPlxuICAgICAgICAgIFBsZWFzZSB3YWl0Li4uXG4gICAgICAgIDwvcD5cbiAgICAgIDxiLWJ1dHRvblxuICAgICAgICAgIHJlZj1cImNhbmNlbFwiXG4gICAgICAgICAgdi1yaXBwbGUuNDAwPVwiJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSknXCJcbiAgICAgICAgICB2YXJpYW50PVwib3V0bGluZS1kYW5nZXJcIlxuICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgYXJpYS1kZXNjcmliZWRieT1cImNhbmNlbC1sYWJlbFwiXG4gICAgICAgICAgQGNsaWNrPVwic2hvdyA9IGZhbHNlXCJcbiAgICAgICAgPlxuICAgICAgICAgIENhbmNlbFxuICAgICAgPC9iLWJ1dHRvbj5cbiAgICA8L3RlbXBsYXRlPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgeyBCT3ZlcmxheSwgQkJ1dHRvbiB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnXG5pbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICBCT3ZlcmxheSxcbiAgICBCQnV0dG9uLFxuICB9LFxuICBkaXJlY3RpdmVzOiB7XG4gICAgUmlwcGxlLFxuICB9LFxuICBkYXRhOiAoKSA9PiAoe1xuICAgIHNob3c6IGZhbHNlLFxuICB9KSxcbiAgbWV0aG9kczoge1xuICAgIG9uU2hvd24oKSB7XG4gICAgICAvLyBGb2N1cyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBvdmVybGF5IGlzIHNob3dpbmdcbiAgICAgIHRoaXMuJHJlZnMuY2FuY2VsLmZvY3VzKClcbiAgICB9LFxuICAgIG9uSGlkZGVuKCkge1xuICAgICAgLy8gRm9jdXMgdGhlIHNob3cgYnV0dG9uIHdoZW4gdGhlIG92ZXJsYXkgaXMgcmVtb3ZlZFxuICAgICAgdGhpcy4kcmVmcy5zaG93LmZvY3VzKClcbiAgICB9LFxuICB9LFxufVxuPC9zY3JpcHQ+XG4iOwpleHBvcnQgdmFyIGNvZGVOb1dyYXBNb2RlID0gIlxuPHRlbXBsYXRlPlxuIDxkaXY+XG4gICAgPGRpdiBjbGFzcz1cInBvc2l0aW9uLXJlbGF0aXZlIHAtMiBiZy1pbmZvXCI+XG4gICAgICA8Yi1jYXJkLXRleHQgY2xhc3M9XCJ0ZXh0LXdoaXRlIGZvbnQtd2VpZ2h0LWJvbGRcIj5cbiAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC5cbiAgICAgIDwvYi1jYXJkLXRleHQ+XG4gICAgICA8Yi1jYXJkXG4gICAgICAgIHRpdGxlPVwiQ2FyZCB3aXRoIHBhcmVudCBvdmVybGF5XCJcbiAgICAgICAgY2xhc3M9XCJtYi0xXCJcbiAgICAgID5cbiAgICAgICAgPGItY2FyZC10ZXh0PkxhYm9ydW0gY29uc2VxdWF0IG5vbiBlbGl0IGVuaW0gZXhlcmNpdGF0aW9uIGNpbGx1bS48L2ItY2FyZC10ZXh0PlxuICAgICAgICA8Yi1jYXJkLXRleHQ+Q2xpY2sgdGhlIGJ1dHRvbiB0byB0b2dnbGUgdGhlIG92ZXJsYXk6PC9iLWNhcmQtdGV4dD5cbiAgICAgICAgPGItYnV0dG9uXG4gICAgICAgICAgdi1yaXBwbGUuNDAwPVwiJ3JnYmEoMTEzLCAxMDIsIDI0MCwgMC4xNSknXCJcbiAgICAgICAgICA6ZGlzYWJsZWQ9XCJzaG93XCJcbiAgICAgICAgICB2YXJpYW50PVwib3V0bGluZS1wcmltYXJ5XCJcbiAgICAgICAgICBAY2xpY2s9XCJzaG93ID0gdHJ1ZVwiXG4gICAgICAgID5cbiAgICAgICAgICBTaG93IG92ZXJsYXlcbiAgICAgICAgPC9iLWJ1dHRvbj5cbiAgICAgIDwvYi1jYXJkPlxuICAgICAgPGItY2FyZC10ZXh0IGNsYXNzPVwidGV4dC13aGl0ZSBmb250LXdlaWdodC1ib2xkIG1iLTBcIj5cbiAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC5cbiAgICAgIDwvYi1jYXJkLXRleHQ+XG4gICAgICA8Yi1vdmVybGF5XG4gICAgICAgIDpzaG93PVwic2hvd1wiXG4gICAgICAgIG5vLXdyYXBcbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gICAgPGItYnV0dG9uXG4gICAgICB2LXJpcHBsZS40MDA9XCIncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSdcIlxuICAgICAgY2xhc3M9XCJtdC0zXCJcbiAgICAgIHZhcmlhbnQ9XCJwcmltYXJ5XCJcbiAgICAgIEBjbGljaz1cInNob3cgPSAhc2hvd1wiXG4gICAgPlxuICAgICAgVG9nZ2xlIG92ZXJsYXlcbiAgICA8L2ItYnV0dG9uPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgeyBCT3ZlcmxheSwgQkJ1dHRvbiwgQkNhcmQsIEJDYXJkVGV4dCB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnXG5pbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICBCT3ZlcmxheSxcbiAgICBCQnV0dG9uLFxuICAgIEJDYXJkLFxuICAgIEJDYXJkVGV4dCxcbiAgfSxcbiAgIGRpcmVjdGl2ZXM6IHtcbiAgICBSaXBwbGUsXG4gIH0sXG4gIGRhdGE6ICgpID0+ICh7XG4gICAgc2hvdzogZmFsc2UsXG4gIH0pLFxufVxuPC9zY3JpcHQ+XG4iOwpleHBvcnQgdmFyIGNvZGVGb3JtID0gIlxuPHRlbXBsYXRlPlxuICA8ZGl2PlxuICAgIDxiLWZvcm1cbiAgICAgIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIlxuICAgICAgQHN1Ym1pdC5wcmV2ZW50PVwib25TdWJtaXRcIlxuICAgID5cbiAgICAgIDxiLWZvcm0tZ3JvdXBcbiAgICAgICAgbGFiZWw9XCJOYW1lXCJcbiAgICAgICAgbGFiZWwtZm9yPVwiZm9ybS1uYW1lXCJcbiAgICAgICAgbGFiZWwtY29scy1sZz1cIjJcIlxuICAgICAgPlxuICAgICAgICA8Yi1pbnB1dC1ncm91cD5cbiAgICAgICAgICA8Yi1pbnB1dC1ncm91cC1wcmVwZW5kIGlzLXRleHQ+XG4gICAgICAgICAgICA8Yi1pY29uIGljb249XCJwZXJzb24tZmlsbFwiIC8+XG4gICAgICAgICAgPC9iLWlucHV0LWdyb3VwLXByZXBlbmQ+XG4gICAgICAgICAgPGItZm9ybS1pbnB1dFxuICAgICAgICAgICAgaWQ9XCJmb3JtLW5hbWVcIlxuICAgICAgICAgICAgOmRpc2FibGVkPVwiYnVzeVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9iLWlucHV0LWdyb3VwPlxuICAgICAgPC9iLWZvcm0tZ3JvdXA+XG4gICAgICA8Yi1mb3JtLWdyb3VwXG4gICAgICAgIGxhYmVsPVwiRW1haWxcIlxuICAgICAgICBsYWJlbC1mb3I9XCJmb3JtLW1haWxcIlxuICAgICAgICBsYWJlbC1jb2xzLWxnPVwiMlwiXG4gICAgICA+XG4gICAgICAgIDxiLWlucHV0LWdyb3VwPlxuICAgICAgICAgIDxiLWlucHV0LWdyb3VwLXByZXBlbmQgaXMtdGV4dD5cbiAgICAgICAgICAgIDxiLWljb24gaWNvbj1cImVudmVsb3BlLWZpbGxcIiAvPlxuICAgICAgICAgIDwvYi1pbnB1dC1ncm91cC1wcmVwZW5kPlxuICAgICAgICAgIDxiLWZvcm0taW5wdXRcbiAgICAgICAgICAgIGlkPVwiZm9ybS1lbWFpbFwiXG4gICAgICAgICAgICB0eXBlPVwiZW1haWxcIlxuICAgICAgICAgICAgOmRpc2FibGVkPVwiYnVzeVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9iLWlucHV0LWdyb3VwPlxuICAgICAgPC9iLWZvcm0tZ3JvdXA+XG4gICAgICA8Yi1mb3JtLWdyb3VwXG4gICAgICAgIGxhYmVsPVwiSW1hZ2VcIlxuICAgICAgICBsYWJlbC1mb3I9XCJmb3JtLWltYWdlXCJcbiAgICAgICAgbGFiZWwtY29scy1sZz1cIjJcIlxuICAgICAgPlxuICAgICAgICA8Yi1pbnB1dC1ncm91cD5cbiAgICAgICAgICA8Yi1pbnB1dC1ncm91cC1wcmVwZW5kIGlzLXRleHQ+XG4gICAgICAgICAgICA8Yi1pY29uIGljb249XCJpbWFnZS1maWxsXCIgLz5cbiAgICAgICAgICA8L2ItaW5wdXQtZ3JvdXAtcHJlcGVuZD5cbiAgICAgICAgICA8Yi1mb3JtLWZpbGVcbiAgICAgICAgICAgIGlkPVwiZm9ybS1pbWFnZVwiXG4gICAgICAgICAgICA6ZGlzYWJsZWQ9XCJidXN5XCJcbiAgICAgICAgICAgIGFjY2VwdD1cImltYWdlLypcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvYi1pbnB1dC1ncm91cD5cbiAgICAgIDwvYi1mb3JtLWdyb3VwPlxuICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyXCI+XG4gICAgICAgIDxiLWJ1dHRvblxuICAgICAgICAgIHYtcmlwcGxlLjQwMD1cIidyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpJ1wiXG4gICAgICAgICAgcmVmPVwic3VibWl0XCJcbiAgICAgICAgICB0eXBlPVwic3VibWl0XCJcbiAgICAgICAgICA6ZGlzYWJsZWQ9XCJidXN5XCJcbiAgICAgICAgPlxuICAgICAgICAgIFN1Ym1pdFxuICAgICAgICA8L2ItYnV0dG9uPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxiLW92ZXJsYXlcbiAgICAgICAgOnNob3c9XCJidXN5XCJcbiAgICAgICAgbm8td3JhcFxuICAgICAgICBAc2hvd249XCJvblNob3duXCJcbiAgICAgICAgQGhpZGRlbj1cIm9uSGlkZGVuXCJcbiAgICAgID5cbiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDpvdmVybGF5PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIHYtaWY9XCJwcm9jZXNzaW5nXCJcbiAgICAgICAgICAgIGNsYXNzPVwidGV4dC1jZW50ZXIgcC00IGJnLXByaW1hcnkgdGV4dC1saWdodCByb3VuZGVkXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8Yi1pY29uXG4gICAgICAgICAgICAgIGljb249XCJjbG91ZC11cGxvYWRcIlxuICAgICAgICAgICAgICBmb250LXNjYWxlPVwiNFwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1iLTNcIj5cbiAgICAgICAgICAgICAgUHJvY2Vzc2luZy4uLlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8Yi1wcm9ncmVzc1xuICAgICAgICAgICAgICBtaW49XCIxXCJcbiAgICAgICAgICAgICAgbWF4PVwiMjBcIlxuICAgICAgICAgICAgICA6dmFsdWU9XCJjb3VudGVyXCJcbiAgICAgICAgICAgICAgdmFyaWFudD1cInN1Y2Nlc3NcIlxuICAgICAgICAgICAgICBoZWlnaHQ9XCIzcHhcIlxuICAgICAgICAgICAgICBjbGFzcz1cIm14LW40IHJvdW5kZWQtMFwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIHYtZWxzZVxuICAgICAgICAgICAgcmVmPVwiZGlhbG9nXCJcbiAgICAgICAgICAgIHRhYmluZGV4PVwiLTFcIlxuICAgICAgICAgICAgcm9sZT1cImRpYWxvZ1wiXG4gICAgICAgICAgICBhcmlhLW1vZGFsPVwiZmFsc2VcIlxuICAgICAgICAgICAgYXJpYS1sYWJlbGxlZGJ5PVwiZm9ybS1jb25maXJtLWxhYmVsXCJcbiAgICAgICAgICAgIGNsYXNzPVwidGV4dC1jZW50ZXIgcC0zXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8cD48c3Ryb25nIGlkPVwiZm9ybS1jb25maXJtLWxhYmVsXCI+QXJlIHlvdSBzdXJlPzwvc3Ryb25nPjwvcD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXhcIj5cbiAgICAgICAgICAgICAgPGItYnV0dG9uXG4gICAgICAgICAgICAgICAgdi1yaXBwbGUuNDAwPVwiJ3JnYmEoMjM0LCA4NCwgODUsIDAuMTUpJ1wiXG4gICAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmUtZGFuZ2VyXCJcbiAgICAgICAgICAgICAgICBjbGFzcz1cIm1yLTNcIlxuICAgICAgICAgICAgICAgIEBjbGljaz1cIm9uQ2FuY2VsXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIENhbmNlbFxuICAgICAgICAgICAgICA8L2ItYnV0dG9uPlxuICAgICAgICAgICAgICA8Yi1idXR0b25cbiAgICAgICAgICAgICAgICB2LXJpcHBsZS40MDA9XCIncmdiYSg0MCwgMTk5LCAxMTEsIDAuMTUpJ1wiXG4gICAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmUtc3VjY2Vzc1wiXG4gICAgICAgICAgICAgICAgQGNsaWNrPVwib25PS1wiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICBPS1xuICAgICAgICAgICAgICA8L2ItYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICA8L2Itb3ZlcmxheT5cbiAgICA8L2ItZm9ybT5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHtcbiAgQkJ1dHRvbixcbiAgQk92ZXJsYXksXG4gIEJGb3JtLFxuICBCUHJvZ3Jlc3MsXG4gIEJJY29uLFxuICBCRm9ybUdyb3VwLFxuICBCSW5wdXRHcm91cCxcbiAgQklucHV0R3JvdXBQcmVwZW5kLFxuICBCRm9ybUlucHV0LFxuICBCRm9ybUZpbGUsXG59IGZyb20gJ2Jvb3RzdHJhcC12dWUnXG5pbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICBCQnV0dG9uLFxuICAgIEJPdmVybGF5LFxuICAgIEJGb3JtLFxuICAgIEJQcm9ncmVzcyxcbiAgICBCSWNvbixcbiAgICBCRm9ybUdyb3VwLFxuICAgIEJJbnB1dEdyb3VwLFxuICAgIEJJbnB1dEdyb3VwUHJlcGVuZCxcbiAgICBCRm9ybUlucHV0LFxuICAgIEJGb3JtRmlsZSxcbiAgfSxcbiAgZGlyZWN0aXZlczoge1xuICAgIFJpcHBsZSxcbiAgfSxcbiAgZGF0YTogKCkgPT4gKHtcbiAgICBidXN5OiBmYWxzZSxcbiAgICBwcm9jZXNzaW5nOiBmYWxzZSxcbiAgICBjb3VudGVyOiAxLFxuICAgIGludGVydmFsOiBudWxsLFxuICB9KSxcbiAgYmVmb3JlRGVzdHJveSgpIHtcbiAgICB0aGlzLmNsZWFySW50ZXJ2YWwoKVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgY2xlYXJJbnRlcnZhbCgpIHtcbiAgICAgIGlmICh0aGlzLmludGVydmFsKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbClcbiAgICAgICAgdGhpcy5pbnRlcnZhbCA9IG51bGxcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uU2hvd24oKSB7XG4gICAgICAvLyBGb2N1cyB0aGUgZGlhbG9nIHByb21wdFxuICAgICAgdGhpcy4kcmVmcy5kaWFsb2cuZm9jdXMoKVxuICAgIH0sXG4gICAgb25IaWRkZW4oKSB7XG4gICAgICAvLyBJbiB0aGlzIGNhc2UsIHdlIHJldHVybiBmb2N1cyB0byB0aGUgc3VibWl0IGJ1dHRvblxuICAgICAgLy8gWW91IG1heSBuZWVkIHRvIGFsdGVyIHRoaXMgYmFzZWQgb24geW91ciBhcHBsaWNhdGlvbiByZXF1aXJlbWVudHNcbiAgICAgIHRoaXMuJHJlZnMuc3VibWl0LmZvY3VzKClcbiAgICB9LFxuICAgIG9uU3VibWl0KCkge1xuICAgICAgdGhpcy5wcm9jZXNzaW5nID0gZmFsc2VcbiAgICAgIHRoaXMuYnVzeSA9IHRydWVcbiAgICB9LFxuICAgIG9uQ2FuY2VsKCkge1xuICAgICAgdGhpcy5idXN5ID0gZmFsc2VcbiAgICB9LFxuICAgIG9uT0soKSB7XG4gICAgICB0aGlzLmNvdW50ZXIgPSAxXG4gICAgICB0aGlzLnByb2Nlc3NpbmcgPSB0cnVlXG4gICAgICAvLyBTaW11bGF0ZSBhbiBhc3luYyByZXF1ZXN0XG4gICAgICB0aGlzLmNsZWFySW50ZXJ2YWwoKVxuICAgICAgdGhpcy5pbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuY291bnRlciA8IDIwKSB7XG4gICAgICAgICAgdGhpcy5jb3VudGVyICs9IDFcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmNsZWFySW50ZXJ2YWwoKVxuICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICAgICAgdGhpcy5idXN5ID0gdGhpcy5wcm9jZXNzaW5nID0gZmFsc2VcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9LCAzNTApXG4gICAgfSxcbiAgfSxcbn1cbjwvc2NyaXB0PlxuICI7CmV4cG9ydCB2YXIgY29kZUJ1c3lTdGF0ZSA9ICJcbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8Yi1vdmVybGF5XG4gICAgICA6c2hvdz1cImJ1c3lcIlxuICAgICAgcm91bmRlZD1cImxnXCJcbiAgICAgIG9wYWNpdHk9XCIwLjZcIlxuICAgICAgQGhpZGRlbj1cIm9uSGlkZGVuXCJcbiAgICA+XG4gICAgICA8dGVtcGxhdGUgdi1zbG90Om92ZXJsYXk+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgPGItc3Bpbm5lclxuICAgICAgICAgICAgc21hbGxcbiAgICAgICAgICAgIHR5cGU9XCJncm93XCJcbiAgICAgICAgICAgIHZhcmlhbnQ9XCJzZWNvbmRhcnlcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGItc3Bpbm5lclxuICAgICAgICAgICAgdHlwZT1cImdyb3dcIlxuICAgICAgICAgICAgdmFyaWFudD1cImRhcmtcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGItc3Bpbm5lclxuICAgICAgICAgICAgc21hbGxcbiAgICAgICAgICAgIHR5cGU9XCJncm93XCJcbiAgICAgICAgICAgIHZhcmlhbnQ9XCJzZWNvbmRhcnlcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPCEtLSBXZSBhZGQgYW4gU1Igb25seSB0ZXh0IGZvciBzY3JlZW4gcmVhZGVycyAtLT5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cInNyLW9ubHlcIj5QbGVhc2Ugd2FpdC4uLjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L3RlbXBsYXRlPlxuICAgICAgPGItaW5wdXQtZ3JvdXBcbiAgICAgICAgc2l6ZT1cImxnXCJcbiAgICAgICAgOmFyaWEtaGlkZGVuPVwiYnVzeSA/ICd0cnVlJyA6IG51bGxcIlxuICAgICAgPlxuICAgICAgICA8Yi1mb3JtLWlucHV0XG4gICAgICAgICAgdi1tb2RlbD1cInZhbHVlXCJcbiAgICAgICAgICA6ZGlzYWJsZWQ9XCJidXN5XCJcbiAgICAgICAgLz5cbiAgICAgICAgPGItaW5wdXQtZ3JvdXAtYXBwZW5kPlxuICAgICAgICAgIDxiLWJ1dHRvblxuICAgICAgICAgICB2LXJpcHBsZS40MDA9XCIncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KSdcIlxuICAgICAgICAgICAgcmVmPVwiYnV0dG9uXCJcbiAgICAgICAgICAgIDpkaXNhYmxlZD1cImJ1c3lcIlxuICAgICAgICAgICAgdmFyaWFudD1cInByaW1hcnlcIlxuICAgICAgICAgICAgQGNsaWNrPVwib25DbGlja1wiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgRG8gc29tZXRoaW5nXG4gICAgICAgICAgPC9iLWJ1dHRvbj5cbiAgICAgICAgPC9iLWlucHV0LWdyb3VwLWFwcGVuZD5cbiAgICAgIDwvYi1pbnB1dC1ncm91cD5cbiAgICA8L2Itb3ZlcmxheT5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHsgQk92ZXJsYXksIEJJbnB1dEdyb3VwLCBCRm9ybUlucHV0LCBCSW5wdXRHcm91cEFwcGVuZCwgQkJ1dHRvbiwgQlNwaW5uZXJ9IGZyb20gJ2Jvb3RzdHJhcC12dWUnXG5pbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHtcbiAgICBCT3ZlcmxheSxcbiAgICBCSW5wdXRHcm91cCxcbiAgICBCRm9ybUlucHV0LFxuICAgIEJJbnB1dEdyb3VwQXBwZW5kLFxuICAgIEJCdXR0b24sXG4gICAgQlNwaW5uZXIsXG4gIH0sXG4gICAgZGlyZWN0aXZlczoge1xuICAgIFJpcHBsZSxcbiAgfSxcbiAgZGF0YTogKCkgPT4gKHtcbiAgICB2YWx1ZTogJ1NvbWUgdmFsdWUnLFxuICAgIGJ1c3k6IGZhbHNlLFxuICAgIHRpbWVvdXQ6IG51bGwsXG4gIH0pLFxuICBiZWZvcmVEZXN0cm95KCkge1xuICAgIHRoaXMuY2xlYXJUaW1lb3V0KClcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGNsZWFyVGltZW91dCgpIHtcbiAgICAgIGlmICh0aGlzLnRpbWVvdXQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dClcbiAgICAgICAgdGhpcy50aW1lb3V0ID0gbnVsbFxuICAgICAgfVxuICAgIH0sXG4gICAgc2V0VGltZW91dChjYWxsYmFjaykge1xuICAgICAgdGhpcy5jbGVhclRpbWVvdXQoKVxuICAgICAgdGhpcy50aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuY2xlYXJUaW1lb3V0KClcbiAgICAgICAgY2FsbGJhY2soKVxuICAgICAgfSwgNTAwMClcbiAgICB9LFxuICAgIG9uSGlkZGVuKCkge1xuICAgICAgLy8gUmV0dXJuIGZvY3VzIHRvIHRoZSBidXR0b25cbiAgICAgIHRoaXMuJHJlZnMuYnV0dG9uLmZvY3VzKClcbiAgICB9LFxuICAgIG9uQ2xpY2soKSB7XG4gICAgICB0aGlzLmJ1c3kgPSB0cnVlXG4gICAgICAvLyBTaW11bGF0ZSBhbiBhc3luYyByZXF1ZXN0XG4gICAgICB0aGlzLnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmJ1c3kgPSBmYWxzZVxuICAgICAgfSlcbiAgICB9LFxuICB9LFxufVxuPC9zY3JpcHQ+XG4iOw=="},{"version":3,"sources":["/home/lucas/Desktop/test/src/views/components/overlay/code.js"],"names":["codeBasic","codeBackdrop","codeFade","codeSpinner","codeCornerRounded","codeCustomContent","codeNoWrapMode","codeForm","codeBusyState"],"mappings":"AAAA,OAAO,IAAMA,SAAS,ozCAAf;AA4DP,OAAO,IAAMC,YAAY,skGAAlB;AAoIP,OAAO,IAAMC,QAAQ,i1CAAd;AA6DP,OAAO,IAAMC,WAAW,+gCAAjB;AAgDP,OAAO,IAAMC,iBAAiB,qhDAAvB;AAwEP,OAAO,IAAMC,iBAAiB,ohDAAvB;AA6DP,OAAO,IAAMC,cAAc,49CAApB;AA8DP,OAAO,IAAMC,QAAQ,8+JAAd;AAmNP,OAAO,IAAMC,aAAa,8zEAAnB","sourcesContent":["export const codeBasic = `\n<template>\n  <div>\n    <b-overlay\n      :show=\"show\"\n      rounded=\"sm\"\n    >\n      <div>\n        <b-card-text>\n          <span>BootstrapVue's custom </span>\n          <code>b-overlay</code>\n          <span>\n            component is used to visually obscure a particular element or component and its content. It signals to the\n            user of a state change within the element or component and can be used for creating loaders,\n            warnings/alerts, prompts, and more.\n          </span>\n        </b-card-text>\n\n        <b-button\n          v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n          :disabled=\"show\"\n          variant=\"outline-primary\"\n          @click=\"show = true\"\n        >\n          Show overlay\n        </b-button>\n      </div>\n    </b-overlay>\n\n    <b-button\n      v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n      variant=\"primary\"\n      class=\"mt-1\"\n      @click=\"show = !show\"\n    >\n      Toggle overlay\n    </b-button>\n  </div>\n</template>\n\n<script>\nimport { BOverlay, BButton, BCardText } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\n\nexport default {\n  components: {\n    BOverlay,\n    BButton,\n    BCardText,\n  },\n  directives: {\n    Ripple,\n  },\n  data: () => ({\n    show: false,\n  }),\n}\n</script>\n`\n\nexport const codeBackdrop = `\n<template>\n  <b-row>\n    <b-col\n      lg=\"6\"\n      aria-controls=\"overlay-background\"\n    >\n      <b-form-group\n        label=\"Variant\"\n        label-for=\"bg-variant\"\n        label-cols-sm=\"4\"\n        label-cols-lg=\"12\"\n      >\n        <b-form-select\n          id=\"bg-variant\"\n          v-model=\"variant\"\n          :options=\"variants\"\n        />\n      </b-form-group>\n      <b-form-group\n        label=\"Opacity\"\n        label-for=\"bg-opacity\"\n        label-cols-sm=\"4\"\n        label-cols-lg=\"12\"\n      >\n        <b-input-group>\n          <b-form-input\n            id=\"bg-opacity\"\n            v-model=\"opacity\"\n            type=\"range\"\n            number\n            min=\"0\"\n            max=\"1\"\n            step=\"0.01\"\n          />\n          <b-input-group-append\n            is-text\n            class=\"text-monospace\"\n          >\n            {{ opacity.toFixed(2) }}\n          </b-input-group-append>\n        </b-input-group>\n      </b-form-group>\n      <b-form-group\n        label=\"Blur\"\n        label-for=\"bg-blur\"\n        label-cols-sm=\"4\"\n        label-cols-lg=\"12\"\n        class=\"mb-2 mb-lg-0\"\n      >\n        <b-form-select\n          id=\"bg-blur\"\n          v-model=\"blur\"\n          :options=\"blurs\"\n        />\n      </b-form-group>\n    </b-col>\n    <b-col lg=\"6\">\n      <b-overlay\n        id=\"overlay-background\"\n        show\n        :variant=\"variant\"\n        :opacity=\"opacity\"\n        :blur=\"blur\"\n        rounded=\"sm\"\n      >\n        <b-card\n          title=\"Card with overlay\"\n          aria-hidden=\"true\"\n          class=\"mb-0\"\n        >\n          <b-card-text>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\n            ex ea commodo consequat.\n          </b-card-text>\n          <b-button\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            disabled\n            variant=\"primary\"\n          >\n            Button\n          </b-button>\n        </b-card>\n      </b-overlay>\n    </b-col>\n  </b-row>\n</template>\n\n<script>\n  import {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormSelect,\n    BFormInput,\n    BInputGroupAppend,\n    BCard,\n    BOverlay,\n    BButton,\n    BInputGroup,\n  } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\n\n  export default {\n    components: {\n      BRow,\n      BCol,\n      BFormGroup,\n      BFormSelect,\n      BFormInput,\n      BInputGroupAppend,\n      BCard,\n      BOverlay,\n      BButton,\n      BCardText,\n      BInputGroup,\n    },\n    directives: {\n    Ripple,\n  },\n    data: () => ({\n      variant: 'light',\n      opacity: 0.85,\n      blur: '2px',\n      variants: ['transparent', 'white', 'light', 'dark', 'primary', 'secondary', 'success', 'danger', 'warning', 'info'],\n      blurs: [{ text: 'None', value: '' }, '1px', '2px', '5px', '0.5em', '1rem'],\n    }),\n  }\n</script>\n`\n\nexport const codeFade = `\n<template>\n  <div>\n    <b-overlay\n      :show=\"show\"\n      rounded=\"sm\"\n      no-fade\n    >\n      <div\n        title=\"Card with overlay\"\n        :aria-hidden=\"show ? 'true' : null\"\n      >\n        <b-card-text>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Distinctio voluptatibus doloremque dolor nesciunt\n          est nobis consequuntur maxime ea ipsam? Doloribus quidem doloremque ad laudantium ullam eos, consequuntur\n          velit quas vero.\n        </b-card-text>\n\n        <b-button\n          v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n          :disabled=\"show\"\n          variant=\"outline-primary\"\n          @click=\"show = true\"\n        >\n          Show overlay\n        </b-button>\n      </div>\n    </b-overlay>\n\n    <!-- trigger button -->\n    <b-button\n      v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n      variant=\"primary\"\n      class=\"mt-1\"\n      @click=\"show = !show\"\n    >\n      Toggle overlay\n    </b-button>\n  </div>\n</template>\n\n<script>\nimport { BOverlay, BButton, BCardText } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\n\n  export default {\n    components: {\n      BOverlay,\n      BButton,\n      BCardText,\n    },\n    directives: {\n    Ripple,\n  },\n    data: () => ({\n      show: false,\n    }),\n  }\n</script>\n`\n\nexport const codeSpinner = `\n<template>\n  <b-overlay\n    show\n    spinner-variant=\"primary\"\n    spinner-type=\"grow\"\n    spinner-small\n    rounded=\"sm\"\n  >\n    <b-card\n      title=\"Card with spinner style\"\n      aria-hidden=\"true\"\n      class=\"mb-0\"\n    >\n      <b-card-text>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n        dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\n        ea commodo consequat.\n      </b-card-text>\n      <b-button\n        v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n        disabled\n        variant=\"primary\"\n      >\n        Button\n      </b-button>\n    </b-card>\n  </b-overlay>\n</template>\n\n<script>\nimport { BOverlay, BButton, BCard, BCardText} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\n\nexport default {\n  components: {\n    BOverlay,\n    BButton,\n    BCard,\n    BCardText,\n  },\n  directives: {\n    Ripple,\n  },\n}\n</script>\n`\n\nexport const codeCornerRounded = `\n<template>\n  <div>\n    <b-button\n      v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n      variant=\"primary\"\n      @click=\"show = !show\"\n    >\n      Toggle overlay\n    </b-button>\n\n    <b-row class=\"text-center mt-2\">\n      <b-col md=\"6\">\n        <b-card-text>With rounding</b-card-text>\n        <b-overlay\n          :show=\"show\"\n          class=\"d-inline-block\"\n          rounded=\"circle\"\n        >\n          <b-img\n            rounded=\"circle\"\n            height=\"300\"\n            :src=\"require('@/assets/images/banner/banner-27.jpg')\"\n            alt=\"Image 1\"\n          />\n        </b-overlay>\n      </b-col>\n      <b-col\n        md=\"6\"\n        class=\"mt-1 mt-md-0\"\n      >\n        <b-card-text>Without rounding</b-card-text>\n        <b-overlay\n          :show=\"show\"\n          class=\"d-inline-block\"\n        >\n          <b-img\n            rounded=\"circle\"\n            height=\"300\"\n            :src=\"require('@/assets/images/banner/banner-27.jpg')\"\n            alt=\"Image 1\"\n          />\n        </b-overlay>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport {BOverlay, BButton, BImg, BRow, BCol, BCardText} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\n\nexport default {\n  components: {\n    BOverlay,\n    BButton,\n    BCardText,\n    // eslint-disable-next-line vue/no-unused-components\n    BImg,\n    BRow,\n    BCol,\n  },\n  directives: {\n    Ripple,\n  },\n  data: () => ({\n    show: false,\n  }),\n}\n</script>\n`\n\nexport const codeCustomContent = `\n<template>\n  <div>\n    <b-overlay :show=\"show\" rounded=\"sm\" @shown=\"onShown\" @hidden=\"onHidden\">\n    <div>\n      <h6>Card with custom overlay content</h6>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n      <p>Click the button to toggle the overlay:</p>\n      <b-button v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\" ref=\"show\" :disabled=\"show\" variant=\"primary\" @click=\"show = true\">\n        Show overlay\n      </b-button>\n    </div>\n    <template #overlay>\n      <div class=\"text-center\">\n        <b-icon icon=\"stopwatch\" font-scale=\"3\" animation=\"cylon\" />\n        <p id=\"cancel-label\">\n          Please wait...\n        </p>\n      <b-button\n          ref=\"cancel\"\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          variant=\"outline-danger\"\n          size=\"sm\"\n          aria-describedby=\"cancel-label\"\n          @click=\"show = false\"\n        >\n          Cancel\n      </b-button>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { BOverlay, BButton } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\n\nexport default {\n  components: {\n    BOverlay,\n    BButton,\n  },\n  directives: {\n    Ripple,\n  },\n  data: () => ({\n    show: false,\n  }),\n  methods: {\n    onShown() {\n      // Focus the cancel button when the overlay is showing\n      this.$refs.cancel.focus()\n    },\n    onHidden() {\n      // Focus the show button when the overlay is removed\n      this.$refs.show.focus()\n    },\n  },\n}\n</script>\n`\n\nexport const codeNoWrapMode = `\n<template>\n <div>\n    <div class=\"position-relative p-2 bg-info\">\n      <b-card-text class=\"text-white font-weight-bold\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n      </b-card-text>\n      <b-card\n        title=\"Card with parent overlay\"\n        class=\"mb-1\"\n      >\n        <b-card-text>Laborum consequat non elit enim exercitation cillum.</b-card-text>\n        <b-card-text>Click the button to toggle the overlay:</b-card-text>\n        <b-button\n          v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n          :disabled=\"show\"\n          variant=\"outline-primary\"\n          @click=\"show = true\"\n        >\n          Show overlay\n        </b-button>\n      </b-card>\n      <b-card-text class=\"text-white font-weight-bold mb-0\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n      </b-card-text>\n      <b-overlay\n        :show=\"show\"\n        no-wrap\n      />\n    </div>\n    <b-button\n      v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n      class=\"mt-3\"\n      variant=\"primary\"\n      @click=\"show = !show\"\n    >\n      Toggle overlay\n    </b-button>\n  </div>\n</template>\n\n<script>\nimport { BOverlay, BButton, BCard, BCardText } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\n\nexport default {\n  components: {\n    BOverlay,\n    BButton,\n    BCard,\n    BCardText,\n  },\n   directives: {\n    Ripple,\n  },\n  data: () => ({\n    show: false,\n  }),\n}\n</script>\n`\n\nexport const codeForm = `\n<template>\n  <div>\n    <b-form\n      class=\"position-relative\"\n      @submit.prevent=\"onSubmit\"\n    >\n      <b-form-group\n        label=\"Name\"\n        label-for=\"form-name\"\n        label-cols-lg=\"2\"\n      >\n        <b-input-group>\n          <b-input-group-prepend is-text>\n            <b-icon icon=\"person-fill\" />\n          </b-input-group-prepend>\n          <b-form-input\n            id=\"form-name\"\n            :disabled=\"busy\"\n          />\n        </b-input-group>\n      </b-form-group>\n      <b-form-group\n        label=\"Email\"\n        label-for=\"form-mail\"\n        label-cols-lg=\"2\"\n      >\n        <b-input-group>\n          <b-input-group-prepend is-text>\n            <b-icon icon=\"envelope-fill\" />\n          </b-input-group-prepend>\n          <b-form-input\n            id=\"form-email\"\n            type=\"email\"\n            :disabled=\"busy\"\n          />\n        </b-input-group>\n      </b-form-group>\n      <b-form-group\n        label=\"Image\"\n        label-for=\"form-image\"\n        label-cols-lg=\"2\"\n      >\n        <b-input-group>\n          <b-input-group-prepend is-text>\n            <b-icon icon=\"image-fill\" />\n          </b-input-group-prepend>\n          <b-form-file\n            id=\"form-image\"\n            :disabled=\"busy\"\n            accept=\"image/*\"\n          />\n        </b-input-group>\n      </b-form-group>\n      <div class=\"d-flex justify-content-center\">\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          ref=\"submit\"\n          type=\"submit\"\n          :disabled=\"busy\"\n        >\n          Submit\n        </b-button>\n      </div>\n\n      <b-overlay\n        :show=\"busy\"\n        no-wrap\n        @shown=\"onShown\"\n        @hidden=\"onHidden\"\n      >\n        <template v-slot:overlay>\n          <div\n            v-if=\"processing\"\n            class=\"text-center p-4 bg-primary text-light rounded\"\n          >\n            <b-icon\n              icon=\"cloud-upload\"\n              font-scale=\"4\"\n            />\n            <div class=\"mb-3\">\n              Processing...\n            </div>\n            <b-progress\n              min=\"1\"\n              max=\"20\"\n              :value=\"counter\"\n              variant=\"success\"\n              height=\"3px\"\n              class=\"mx-n4 rounded-0\"\n            />\n          </div>\n          <div\n            v-else\n            ref=\"dialog\"\n            tabindex=\"-1\"\n            role=\"dialog\"\n            aria-modal=\"false\"\n            aria-labelledby=\"form-confirm-label\"\n            class=\"text-center p-3\"\n          >\n            <p><strong id=\"form-confirm-label\">Are you sure?</strong></p>\n            <div class=\"d-flex\">\n              <b-button\n                v-ripple.400=\"'rgba(234, 84, 85, 0.15)'\"\n                variant=\"outline-danger\"\n                class=\"mr-3\"\n                @click=\"onCancel\"\n              >\n                Cancel\n              </b-button>\n              <b-button\n                v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n                variant=\"outline-success\"\n                @click=\"onOK\"\n              >\n                OK\n              </b-button>\n            </div>\n          </div>\n        </template>\n      </b-overlay>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport {\n  BButton,\n  BOverlay,\n  BForm,\n  BProgress,\n  BIcon,\n  BFormGroup,\n  BInputGroup,\n  BInputGroupPrepend,\n  BFormInput,\n  BFormFile,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\n\nexport default {\n  components: {\n    BButton,\n    BOverlay,\n    BForm,\n    BProgress,\n    BIcon,\n    BFormGroup,\n    BInputGroup,\n    BInputGroupPrepend,\n    BFormInput,\n    BFormFile,\n  },\n  directives: {\n    Ripple,\n  },\n  data: () => ({\n    busy: false,\n    processing: false,\n    counter: 1,\n    interval: null,\n  }),\n  beforeDestroy() {\n    this.clearInterval()\n  },\n  methods: {\n    clearInterval() {\n      if (this.interval) {\n        clearInterval(this.interval)\n        this.interval = null\n      }\n    },\n    onShown() {\n      // Focus the dialog prompt\n      this.$refs.dialog.focus()\n    },\n    onHidden() {\n      // In this case, we return focus to the submit button\n      // You may need to alter this based on your application requirements\n      this.$refs.submit.focus()\n    },\n    onSubmit() {\n      this.processing = false\n      this.busy = true\n    },\n    onCancel() {\n      this.busy = false\n    },\n    onOK() {\n      this.counter = 1\n      this.processing = true\n      // Simulate an async request\n      this.clearInterval()\n      this.interval = setInterval(() => {\n        if (this.counter < 20) {\n          this.counter += 1\n        } else {\n          this.clearInterval()\n          this.$nextTick(() => {\n            // eslint-disable-next-line\n            this.busy = this.processing = false\n          })\n        }\n      }, 350)\n    },\n  },\n}\n</script>\n `\n\nexport const codeBusyState = `\n<template>\n  <div>\n    <b-overlay\n      :show=\"busy\"\n      rounded=\"lg\"\n      opacity=\"0.6\"\n      @hidden=\"onHidden\"\n    >\n      <template v-slot:overlay>\n        <div class=\"d-flex align-items-center\">\n          <b-spinner\n            small\n            type=\"grow\"\n            variant=\"secondary\"\n          />\n          <b-spinner\n            type=\"grow\"\n            variant=\"dark\"\n          />\n          <b-spinner\n            small\n            type=\"grow\"\n            variant=\"secondary\"\n          />\n          <!-- We add an SR only text for screen readers -->\n          <span class=\"sr-only\">Please wait...</span>\n        </div>\n      </template>\n      <b-input-group\n        size=\"lg\"\n        :aria-hidden=\"busy ? 'true' : null\"\n      >\n        <b-form-input\n          v-model=\"value\"\n          :disabled=\"busy\"\n        />\n        <b-input-group-append>\n          <b-button\n           v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            ref=\"button\"\n            :disabled=\"busy\"\n            variant=\"primary\"\n            @click=\"onClick\"\n          >\n            Do something\n          </b-button>\n        </b-input-group-append>\n      </b-input-group>\n    </b-overlay>\n  </div>\n</template>\n\n<script>\nimport { BOverlay, BInputGroup, BFormInput, BInputGroupAppend, BButton, BSpinner} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\n\nexport default {\n  components: {\n    BOverlay,\n    BInputGroup,\n    BFormInput,\n    BInputGroupAppend,\n    BButton,\n    BSpinner,\n  },\n    directives: {\n    Ripple,\n  },\n  data: () => ({\n    value: 'Some value',\n    busy: false,\n    timeout: null,\n  }),\n  beforeDestroy() {\n    this.clearTimeout()\n  },\n  methods: {\n    clearTimeout() {\n      if (this.timeout) {\n        clearTimeout(this.timeout)\n        this.timeout = null\n      }\n    },\n    setTimeout(callback) {\n      this.clearTimeout()\n      this.timeout = setTimeout(() => {\n        this.clearTimeout()\n        callback()\n      }, 5000)\n    },\n    onHidden() {\n      // Return focus to the button\n      this.$refs.button.focus()\n    },\n    onClick() {\n      this.busy = true\n      // Simulate an async request\n      this.setTimeout(() => {\n        this.busy = false\n      })\n    },\n  },\n}\n</script>\n`\n"]}]}