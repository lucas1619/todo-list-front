{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/src/@fake-db/data/pages/account-setting.js","dependencies":[{"path":"/home/lucas/Desktop/test/src/@fake-db/data/pages/account-setting.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IG1vY2sgZnJvbSAnQC9AZmFrZS1kYi9tb2NrJzsKLyogZXNsaW50LWRpc2FibGUgZ2xvYmFsLXJlcXVpcmUgKi8KCnZhciBkYXRhID0gewogIGFjY291bnRTZXR0aW5nOiB7CiAgICBnZW5lcmFsOiB7CiAgICAgIGF2YXRhcjogcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL3BvcnRyYWl0L3NtYWxsL2F2YXRhci1zLTExLmpwZycpLAogICAgICB1c2VybmFtZTogJ2pvaG5kb2UnLAogICAgICBmdWxsTmFtZTogJ0pvaG4gRG9lJywKICAgICAgZW1haWw6ICdncmFuZ2VyMDA3QGhvZ3dhcmQuY29tJywKICAgICAgY29tcGFueTogJ0NyeXN0YWwgVGVjaG5vbG9naWVzJwogICAgfSwKICAgIGluZm86IHsKICAgICAgYmlvOiAnJywKICAgICAgZG9iOiBudWxsLAogICAgICBjb3VudHJ5OiAnVVNBJywKICAgICAgd2Vic2l0ZTogJycsCiAgICAgIHBob25lOiA2NTYyNTQyNTY4CiAgICB9LAogICAgc29jaWFsOiB7CiAgICAgIHNvY2lhbExpbmtzOiB7CiAgICAgICAgdHdpdHRlcjogJ2h0dHBzOi8vd3d3LnR3aXR0ZXIuY29tJywKICAgICAgICBmYWNlYm9vazogJycsCiAgICAgICAgZ29vZ2xlOiAnJywKICAgICAgICBsaW5rZWRJbjogJ2h0dHBzOi8vd3d3LmxpbmtlZGluLmNvbScsCiAgICAgICAgaW5zdGFncmFtOiAnJywKICAgICAgICBxdW9yYTogJycKICAgICAgfSwKICAgICAgY29ubmVjdGlvbnM6IHsKICAgICAgICB0d2l0dGVyOiB7CiAgICAgICAgICBwcm9maWxlSW1nOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvYXZhdGFycy8xMS1zbWFsbC5wbmcnKSwKICAgICAgICAgIGlkOiAnam9obmRvZScKICAgICAgICB9LAogICAgICAgIGdvb2dsZTogewogICAgICAgICAgcHJvZmlsZUltZzogcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL2F2YXRhcnMvMy1zbWFsbC5wbmcnKSwKICAgICAgICAgIGlkOiAnbHVyYXdlYmVyJwogICAgICAgIH0sCiAgICAgICAgZmFjZWJvb2s6IHt9LAogICAgICAgIGdpdGh1Yjoge30KICAgICAgfQogICAgfSwKICAgIG5vdGlmaWNhdGlvbjogewogICAgICBjb21tZW50T25BcnRpY2xlOiB0cnVlLAogICAgICBBbnN3ZXJPbkZvcm06IHRydWUsCiAgICAgIGZvbGxvd01lOiBmYWxzZSwKICAgICAgbmV3QW5ub3VuY2VtZW50czogdHJ1ZSwKICAgICAgcHJvZHVjdFVwZGF0ZXM6IHRydWUsCiAgICAgIGJsb2dEaWdlc3Q6IGZhbHNlCiAgICB9CiAgfQp9OwovKiBlc2xpbnQtZGlzYWJsZSBnbG9iYWwtcmVxdWlyZSAqLwoKbW9jay5vbkdldCgnL2FjY291bnQtc2V0dGluZy9kYXRhJykucmVwbHkoZnVuY3Rpb24gKCkgewogIHJldHVybiBbMjAwLCBkYXRhLmFjY291bnRTZXR0aW5nXTsKfSk7"},{"version":3,"sources":["/home/lucas/Desktop/test/src/@fake-db/data/pages/account-setting.js"],"names":["mock","data","accountSetting","general","avatar","require","username","fullName","email","company","info","bio","dob","country","website","phone","social","socialLinks","twitter","facebook","google","linkedIn","instagram","quora","connections","profileImg","id","github","notification","commentOnArticle","AnswerOnForm","followMe","newAnnouncements","productUpdates","blogDigest","onGet","reply"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,iBAAjB;AACA;;AACA,IAAMC,IAAI,GAAG;AACXC,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAEC,OAAO,CAAC,gDAAD,CADR;AAEPC,MAAAA,QAAQ,EAAE,SAFH;AAGPC,MAAAA,QAAQ,EAAE,UAHH;AAIPC,MAAAA,KAAK,EAAE,wBAJA;AAKPC,MAAAA,OAAO,EAAE;AALF,KADK;AAQdC,IAAAA,IAAI,EAAE;AACJC,MAAAA,GAAG,EAAE,EADD;AAEJC,MAAAA,GAAG,EAAE,IAFD;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAIJC,MAAAA,OAAO,EAAE,EAJL;AAKJC,MAAAA,KAAK,EAAE;AALH,KARQ;AAedC,IAAAA,MAAM,EAAE;AACNC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAE,yBADE;AAEXC,QAAAA,QAAQ,EAAE,EAFC;AAGXC,QAAAA,MAAM,EAAE,EAHG;AAIXC,QAAAA,QAAQ,EAAE,0BAJC;AAKXC,QAAAA,SAAS,EAAE,EALA;AAMXC,QAAAA,KAAK,EAAE;AANI,OADP;AASNC,MAAAA,WAAW,EAAE;AACXN,QAAAA,OAAO,EAAE;AACPO,UAAAA,UAAU,EAAEpB,OAAO,CAAC,sCAAD,CADZ;AAEPqB,UAAAA,EAAE,EAAE;AAFG,SADE;AAKXN,QAAAA,MAAM,EAAE;AACNK,UAAAA,UAAU,EAAEpB,OAAO,CAAC,qCAAD,CADb;AAENqB,UAAAA,EAAE,EAAE;AAFE,SALG;AASXP,QAAAA,QAAQ,EAAE,EATC;AAUXQ,QAAAA,MAAM,EAAE;AAVG;AATP,KAfM;AAqCdC,IAAAA,YAAY,EAAE;AACZC,MAAAA,gBAAgB,EAAE,IADN;AAEZC,MAAAA,YAAY,EAAE,IAFF;AAGZC,MAAAA,QAAQ,EAAE,KAHE;AAIZC,MAAAA,gBAAgB,EAAE,IAJN;AAKZC,MAAAA,cAAc,EAAE,IALJ;AAMZC,MAAAA,UAAU,EAAE;AANA;AArCA;AADL,CAAb;AAgDA;;AACAlC,IAAI,CAACmC,KAAL,CAAW,uBAAX,EAAoCC,KAApC,CAA0C;AAAA,SAAM,CAAC,GAAD,EAAMnC,IAAI,CAACC,cAAX,CAAN;AAAA,CAA1C","sourcesContent":["import mock from '@/@fake-db/mock'\n/* eslint-disable global-require */\nconst data = {\n  accountSetting: {\n    general: {\n      avatar: require('@/assets/images/portrait/small/avatar-s-11.jpg'),\n      username: 'johndoe',\n      fullName: 'John Doe',\n      email: 'granger007@hogward.com',\n      company: 'Crystal Technologies',\n    },\n    info: {\n      bio: '',\n      dob: null,\n      country: 'USA',\n      website: '',\n      phone: 6562542568,\n    },\n    social: {\n      socialLinks: {\n        twitter: 'https://www.twitter.com',\n        facebook: '',\n        google: '',\n        linkedIn: 'https://www.linkedin.com',\n        instagram: '',\n        quora: '',\n      },\n      connections: {\n        twitter: {\n          profileImg: require('@/assets/images/avatars/11-small.png'),\n          id: 'johndoe',\n        },\n        google: {\n          profileImg: require('@/assets/images/avatars/3-small.png'),\n          id: 'luraweber',\n        },\n        facebook: {},\n        github: {},\n      },\n    },\n    notification: {\n      commentOnArticle: true,\n      AnswerOnForm: true,\n      followMe: false,\n      newAnnouncements: true,\n      productUpdates: true,\n      blogDigest: false,\n    },\n  },\n}\n/* eslint-disable global-require */\nmock.onGet('/account-setting/data').reply(() => [200, data.accountSetting])\n"]}]}