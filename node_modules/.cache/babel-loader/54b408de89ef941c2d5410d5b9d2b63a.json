{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/src/@core/auth/jwt/jwtService.js","dependencies":[{"path":"/home/lucas/Desktop/test/src/@core/auth/jwt/jwtService.js","mtime":1613397918000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvbHVjYXMvRGVza3RvcC90ZXN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9sdWNhcy9EZXNrdG9wL3Rlc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9sdWNhcy9EZXNrdG9wL3Rlc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9sdWNhcy9EZXNrdG9wL3Rlc3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCBqd3REZWZhdWx0Q29uZmlnIGZyb20gJy4vand0RGVmYXVsdENvbmZpZyc7Cgp2YXIgSnd0U2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgLy8gV2lsbCBiZSB1c2VkIGJ5IHRoaXMgc2VydmljZSBmb3IgbWFraW5nIEFQSSBjYWxscwogIC8vIGp3dENvbmZpZyA8PSBXaWxsIGJlIHVzZWQgYnkgdGhpcyBzZXJ2aWNlCiAgLy8gRm9yIFJlZnJlc2hpbmcgVG9rZW4KICAvLyBGb3IgUmVmcmVzaGluZyBUb2tlbgogIGZ1bmN0aW9uIEp3dFNlcnZpY2UoYXhpb3NJbnMsIGp3dE92ZXJyaWRlQ29uZmlnKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBKd3RTZXJ2aWNlKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImF4aW9zSW5zIiwgbnVsbCk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJqd3RDb25maWciLCBfb2JqZWN0U3ByZWFkKHt9LCBqd3REZWZhdWx0Q29uZmlnKSk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJpc0FscmVhZHlGZXRjaGluZ0FjY2Vzc1Rva2VuIiwgZmFsc2UpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAic3Vic2NyaWJlcnMiLCBbXSk7CgogICAgdGhpcy5heGlvc0lucyA9IGF4aW9zSW5zOwogICAgdGhpcy5qd3RDb25maWcgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMuand0Q29uZmlnKSwgand0T3ZlcnJpZGVDb25maWcpOyAvLyBSZXF1ZXN0IEludGVyY2VwdG9yCgogICAgdGhpcy5heGlvc0lucy5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogICAgICAvLyBHZXQgdG9rZW4gZnJvbSBsb2NhbFN0b3JhZ2UKICAgICAgdmFyIGFjY2Vzc1Rva2VuID0gX3RoaXMuZ2V0VG9rZW4oKTsgLy8gSWYgdG9rZW4gaXMgcHJlc2VudCBhZGQgaXQgdG8gcmVxdWVzdCdzIEF1dGhvcml6YXRpb24gSGVhZGVyCgoKICAgICAgaWYgKGFjY2Vzc1Rva2VuKSB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduCiAgICAgICAgY29uZmlnLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICIiLmNvbmNhdChfdGhpcy5qd3RDb25maWcudG9rZW5UeXBlLCAiICIpLmNvbmNhdChhY2Nlc3NUb2tlbik7CiAgICAgIH0KCiAgICAgIHJldHVybiBjb25maWc7CiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgIH0pOyAvLyBBZGQgcmVxdWVzdC9yZXNwb25zZSBpbnRlcmNlcHRvcgoKICAgIHRoaXMuYXhpb3NJbnMuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIC8vIGNvbnN0IHsgY29uZmlnLCByZXNwb25zZTogeyBzdGF0dXMgfSB9ID0gZXJyb3IKICAgICAgdmFyIGNvbmZpZyA9IGVycm9yLmNvbmZpZywKICAgICAgICAgIHJlc3BvbnNlID0gZXJyb3IucmVzcG9uc2U7CiAgICAgIHZhciBvcmlnaW5hbFJlcXVlc3QgPSBjb25maWc7IC8vIGlmIChzdGF0dXMgPT09IDQwMSkgewoKICAgICAgaWYgKHJlc3BvbnNlICYmIHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7CiAgICAgICAgaWYgKCFfdGhpcy5pc0FscmVhZHlGZXRjaGluZ0FjY2Vzc1Rva2VuKSB7CiAgICAgICAgICBfdGhpcy5pc0FscmVhZHlGZXRjaGluZ0FjY2Vzc1Rva2VuID0gdHJ1ZTsKCiAgICAgICAgICBfdGhpcy5yZWZyZXNoVG9rZW4oKS50aGVuKGZ1bmN0aW9uIChyKSB7CiAgICAgICAgICAgIF90aGlzLmlzQWxyZWFkeUZldGNoaW5nQWNjZXNzVG9rZW4gPSBmYWxzZTsgLy8gVXBkYXRlIGFjY2Vzc1Rva2VuIGluIGxvY2FsU3RvcmFnZQoKICAgICAgICAgICAgX3RoaXMuc2V0VG9rZW4oci5kYXRhLmFjY2Vzc1Rva2VuKTsKCiAgICAgICAgICAgIF90aGlzLnNldFJlZnJlc2hUb2tlbihyLmRhdGEucmVmcmVzaFRva2VuKTsKCiAgICAgICAgICAgIF90aGlzLm9uQWNjZXNzVG9rZW5GZXRjaGVkKHIuZGF0YS5hY2Nlc3NUb2tlbik7CiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIHZhciByZXRyeU9yaWdpbmFsUmVxdWVzdCA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICBfdGhpcy5hZGRTdWJzY3JpYmVyKGZ1bmN0aW9uIChhY2Nlc3NUb2tlbikgewogICAgICAgICAgICAvLyBNYWtlIHN1cmUgdG8gYXNzaWduIGFjY2Vzc1Rva2VuIGFjY29yZGluZyB0byB5b3VyIHJlc3BvbnNlLgogICAgICAgICAgICAvLyBDaGVjazogaHR0cHM6Ly9waXhpbnZlbnQudGlja3N5LmNvbS90aWNrZXQvMjQxMzg3MAogICAgICAgICAgICAvLyBDaGFuZ2UgQXV0aG9yaXphdGlvbiBoZWFkZXIKICAgICAgICAgICAgb3JpZ2luYWxSZXF1ZXN0LmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICIiLmNvbmNhdChfdGhpcy5qd3RDb25maWcudG9rZW5UeXBlLCAiICIpLmNvbmNhdChhY2Nlc3NUb2tlbik7CiAgICAgICAgICAgIHJlc29sdmUoX3RoaXMuYXhpb3NJbnMob3JpZ2luYWxSZXF1ZXN0KSk7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gcmV0cnlPcmlnaW5hbFJlcXVlc3Q7CiAgICAgIH0KCiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7CiAgICB9KTsKICB9CgogIF9jcmVhdGVDbGFzcyhKd3RTZXJ2aWNlLCBbewogICAga2V5OiAib25BY2Nlc3NUb2tlbkZldGNoZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uQWNjZXNzVG9rZW5GZXRjaGVkKGFjY2Vzc1Rva2VuKSB7CiAgICAgIHRoaXMuc3Vic2NyaWJlcnMgPSB0aGlzLnN1YnNjcmliZXJzLmZpbHRlcihmdW5jdGlvbiAoY2FsbGJhY2spIHsKICAgICAgICByZXR1cm4gY2FsbGJhY2soYWNjZXNzVG9rZW4pOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJhZGRTdWJzY3JpYmVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRTdWJzY3JpYmVyKGNhbGxiYWNrKSB7CiAgICAgIHRoaXMuc3Vic2NyaWJlcnMucHVzaChjYWxsYmFjayk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0VG9rZW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFRva2VuKCkgewogICAgICByZXR1cm4gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5qd3RDb25maWcuc3RvcmFnZVRva2VuS2V5TmFtZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0UmVmcmVzaFRva2VuIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSZWZyZXNoVG9rZW4oKSB7CiAgICAgIHJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmp3dENvbmZpZy5zdG9yYWdlUmVmcmVzaFRva2VuS2V5TmFtZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0VG9rZW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldFRva2VuKHZhbHVlKSB7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuand0Q29uZmlnLnN0b3JhZ2VUb2tlbktleU5hbWUsIHZhbHVlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRSZWZyZXNoVG9rZW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldFJlZnJlc2hUb2tlbih2YWx1ZSkgewogICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLmp3dENvbmZpZy5zdG9yYWdlUmVmcmVzaFRva2VuS2V5TmFtZSwgdmFsdWUpOwogICAgfQogIH0sIHsKICAgIGtleTogImxvZ2luIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsb2dpbigpIHsKICAgICAgdmFyIF90aGlzJGF4aW9zSW5zOwoKICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTsKICAgICAgfQoKICAgICAgcmV0dXJuIChfdGhpcyRheGlvc0lucyA9IHRoaXMuYXhpb3NJbnMpLnBvc3QuYXBwbHkoX3RoaXMkYXhpb3NJbnMsIFt0aGlzLmp3dENvbmZpZy5sb2dpbkVuZHBvaW50XS5jb25jYXQoYXJncykpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlZ2lzdGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWdpc3RlcigpIHsKICAgICAgdmFyIF90aGlzJGF4aW9zSW5zMjsKCiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykgewogICAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTsKICAgICAgfQoKICAgICAgcmV0dXJuIChfdGhpcyRheGlvc0luczIgPSB0aGlzLmF4aW9zSW5zKS5wb3N0LmFwcGx5KF90aGlzJGF4aW9zSW5zMiwgW3RoaXMuand0Q29uZmlnLnJlZ2lzdGVyRW5kcG9pbnRdLmNvbmNhdChhcmdzKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVmcmVzaFRva2VuIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWZyZXNoVG9rZW4oKSB7CiAgICAgIHJldHVybiB0aGlzLmF4aW9zSW5zLnBvc3QodGhpcy5qd3RDb25maWcucmVmcmVzaEVuZHBvaW50LCB7CiAgICAgICAgcmVmcmVzaFRva2VuOiB0aGlzLmdldFJlZnJlc2hUb2tlbigpCiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEp3dFNlcnZpY2U7Cn0oKTsKCmV4cG9ydCB7IEp3dFNlcnZpY2UgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/home/lucas/Desktop/test/src/@core/auth/jwt/jwtService.js"],"names":["jwtDefaultConfig","JwtService","axiosIns","jwtOverrideConfig","jwtConfig","interceptors","request","use","config","accessToken","getToken","headers","Authorization","tokenType","error","Promise","reject","response","originalRequest","status","isAlreadyFetchingAccessToken","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","retryOriginalRequest","resolve","addSubscriber","subscribers","filter","callback","push","localStorage","getItem","storageTokenKeyName","storageRefreshTokenKeyName","value","setItem","args","post","loginEndpoint","registerEndpoint","refreshEndpoint","getRefreshToken"],"mappings":"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","sourcesContent":["import jwtDefaultConfig from './jwtDefaultConfig'\n\nexport default class JwtService {\n  // Will be used by this service for making API calls\n  axiosIns = null\n\n  // jwtConfig <= Will be used by this service\n  jwtConfig = { ...jwtDefaultConfig }\n\n  // For Refreshing Token\n  isAlreadyFetchingAccessToken = false\n\n  // For Refreshing Token\n  subscribers = []\n\n  constructor(axiosIns, jwtOverrideConfig) {\n    this.axiosIns = axiosIns\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\n\n    // Request Interceptor\n    this.axiosIns.interceptors.request.use(\n      config => {\n        // Get token from localStorage\n        const accessToken = this.getToken()\n\n        // If token is present add it to request's Authorization Header\n        if (accessToken) {\n          // eslint-disable-next-line no-param-reassign\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n        }\n        return config\n      },\n      error => Promise.reject(error),\n    )\n\n    // Add request/response interceptor\n    this.axiosIns.interceptors.response.use(\n      response => response,\n      error => {\n        // const { config, response: { status } } = error\n        const { config, response } = error\n        const originalRequest = config\n\n        // if (status === 401) {\n        if (response && response.status === 401) {\n          if (!this.isAlreadyFetchingAccessToken) {\n            this.isAlreadyFetchingAccessToken = true\n            this.refreshToken().then(r => {\n              this.isAlreadyFetchingAccessToken = false\n\n              // Update accessToken in localStorage\n              this.setToken(r.data.accessToken)\n              this.setRefreshToken(r.data.refreshToken)\n\n              this.onAccessTokenFetched(r.data.accessToken)\n            })\n          }\n          const retryOriginalRequest = new Promise(resolve => {\n            this.addSubscriber(accessToken => {\n              // Make sure to assign accessToken according to your response.\n              // Check: https://pixinvent.ticksy.com/ticket/2413870\n              // Change Authorization header\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n              resolve(this.axiosIns(originalRequest))\n            })\n          })\n          return retryOriginalRequest\n        }\n        return Promise.reject(error)\n      },\n    )\n  }\n\n  onAccessTokenFetched(accessToken) {\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\n  }\n\n  addSubscriber(callback) {\n    this.subscribers.push(callback)\n  }\n\n  getToken() {\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\n  }\n\n  setToken(value) {\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\n  }\n\n  setRefreshToken(value) {\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\n  }\n\n  login(...args) {\n    return this.axiosIns.post(this.jwtConfig.loginEndpoint, ...args)\n  }\n\n  register(...args) {\n    return this.axiosIns.post(this.jwtConfig.registerEndpoint, ...args)\n  }\n\n  refreshToken() {\n    return this.axiosIns.post(this.jwtConfig.refreshEndpoint, {\n      refreshToken: this.getRefreshToken(),\n    })\n  }\n}\n"]}]}