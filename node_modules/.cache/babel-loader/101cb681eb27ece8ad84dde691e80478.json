{"remainingRequest":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js!/home/lucas/Desktop/test/src/@core/mixins/ui/transition.js","dependencies":[{"path":"/home/lucas/Desktop/test/src/@core/mixins/ui/transition.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/babel.config.js","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKZXhwb3J0IHZhciBoZWlnaHRUcmFuc2l0aW9uID0gewogIC8qCiAgICAgSG93VG86CiAgICAgIDEuIEFkZCBkeW5hbWljIHN0eWxlIHRvIGVsZW1lbnQgYW5kIHNldCBzdHlsZSBhcyBgdHJIZWlnaHRgCiAgICAgIDIuIFNldCB0cmFuc2l0aW9uIHNwZWVkIHVzaW5nIGB0cmFuc2l0aW9uOiAwLjM1cyBoZWlnaHQ7YCA8PSB5b3UgY2FuIHVzZSBhcHByb3ByaWF0ZSB2YWx1ZTsKICAgICAgMy4gT3B0aW9uYWxseSB5b3UgY2FuIHNldCBgb3ZlcmZsb3c6IGhpZGRlbjtgIHRvIGhpZGUgZWxlbWVudCBvdmVyZmxvdyB3aGlsZSBoZWlnaHQgaXMgYW5pbWF0ZWQuCiAgICAgIDQuIFNldCBpbml0aWFsIGhlaWdodCB1c2luZyBgdHJTZXRIZWlnaHRgIGJlZm9yZSBhbnkgb3BlcmF0aW9uLiBbbW91bnRlZCBob29rIGlzIHJlY29tbWVuZGVkIC0gWW91IGNhbiB1c2UgYHJlZmAgZm9yIGR5bmFtaWMgY29udGVudHNdCiAgICAgIDUuIFRvZ2dsZSBoZWlnaHQgdXNpbmcgaGVpZ2h0IG9wZXJhdGlvbnMg8J+NuwogICAgICA2LiBUb2dnbGUgdXNhZ2Ugb2YgJG5leHRUaWNrIGZvciBoZWlnaHQgb3BlcmF0aW9ucyBpcyBhbnkgaXNzdWUgb2NjdXIgW2V4cGVyaW1lbnRhbF0g8J+UrAogICAqLwogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0ckhlaWdodDogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRyQWRkSGVpZ2h0OiBmdW5jdGlvbiB0ckFkZEhlaWdodCh2YWwpIHsKICAgICAgLy8gQWRkIGhlaWdodCB0byBleGlzdGluZyBoZWlnaHQKICAgICAgLy8gVXNhZ2U6IFdoZXJlIG5ldyBlbGVtZW50IGlzIGFwcGVuZCBvciBtb3JlIGhlaWdodCBpcyBhZGRlZCAoZS5nLiBsaXN0IGFwcGVuZCkKCiAgICAgIC8qIEFzc3VtZXM6CiAgICAgICAtIEhlaWdodCBpcyBhc3NpZ25lZCBhbmQgaXMgYFN0cmluZ2AKICAgICAgIC0gSW5jb21pbmcgdmFsdWUgaXMgdmFsaWQgbnVtYmVyIGluIGBOdW1iZXJgIG9yIGBTdHJpbmdgCiAgICAgICovCiAgICAgIHZhciBoZWlnaHRWYWx1ZSA9IE51bWJlcih0aGlzLnRySGVpZ2h0LnN1YnN0cmluZygwLCB0aGlzLnRySGVpZ2h0Lmxlbmd0aCAtIDIpKTsKICAgICAgdGhpcy50ckhlaWdodCA9ICIiLmNvbmNhdChoZWlnaHRWYWx1ZSArIE51bWJlcih2YWwpLCAicHgiKTsKICAgIH0sCiAgICB0clRyaW1IZWlnaHQ6IGZ1bmN0aW9uIHRyVHJpbUhlaWdodCh2YWwpIHsKICAgICAgLy8gUmVtb3ZlIGhlaWdodCBmcm9tIGV4aXN0aW5nIGhlaWdodAogICAgICAvLyBVc2FnZTogV2hlcmUgbmV3IGVsZW1lbnQgaXMgcmVtb3ZlZCBvciBoZWlnaHQgaXMgcmVtb3ZlIChlLmcuIGxpc3QgcG9wL2VsZSByZW1vdmUpCgogICAgICAvKiBBc3N1bWVzOgogICAgICAgLSBIZWlnaHQgaXMgYXNzaWduZWQgYW5kIGlzIGBTdHJpbmdgCiAgICAgICAtIEluY29taW5nIHZhbHVlIGlzIHZhbGlkIG51bWJlciBpbiBgTnVtYmVyYCBvciBgU3RyaW5nYAogICAgICAqLwogICAgICB2YXIgaGVpZ2h0VmFsdWUgPSBOdW1iZXIodGhpcy50ckhlaWdodC5zdWJzdHJpbmcoMCwgdGhpcy50ckhlaWdodC5sZW5ndGggLSAyKSk7CiAgICAgIHRoaXMudHJIZWlnaHQgPSAiIi5jb25jYXQoaGVpZ2h0VmFsdWUgLSBOdW1iZXIodmFsKSwgInB4Iik7CiAgICB9LAogICAgdHJTZXRIZWlnaHQ6IGZ1bmN0aW9uIHRyU2V0SGVpZ2h0KHZhbCkgewogICAgICAvLyBTZXQgaGVpZ2h0CiAgICAgIC8vIFVzYWdlOiBNb3N0bHkgZm9yIGFzc2lnbmluZyBpbml0aWFsIHZhbHVlIGZyb20gbW91bnRlZCBob29rCgogICAgICAvKiBBc3N1bWVzOgogICAgICAgLSBIZWlnaHQgaXMgbm90IGFzc2lnbmVkIGFuZCB3aGF0IHRvIGFzc2lnbiBmb3IgYWRkL3JlbW92ZSBvcGVyYXRpb24KICAgICAgIC0gV2hhdCB0byBzZXQgaGVpZ2h0IGF0IHNvbWV0aGluZyBmb3Igb2RkIHVzYWdlCiAgICAgICAtIEluY29taW5nIHZhbHVlIGlzIHZhbGlkIG51bWJlciBpbiBgTnVtYmVyYCBvciBgU3RyaW5nYAogICAgICAqLwogICAgICBpZiAodmFsID09PSBudWxsKSB0aGlzLnRySGVpZ2h0ID0gJ2F1dG8nO2Vsc2UgdGhpcy50ckhlaWdodCA9ICIiLmNvbmNhdChOdW1iZXIodmFsKSwgInB4Iik7CiAgICB9CiAgfQp9OyAvLyBJZ25vcmUgYmVsb3cgZm9yIG5vdy4gV2Ugd2lsbCByZW1vdmUgaXQgd2hlbiB3ZSBhZGQgbW9yZSB0cmFuc2l0aW9uIGluIGZ1dHVyZS4KCmV4cG9ydCB2YXIgXyA9IG51bGw7"},{"version":3,"sources":["/home/lucas/Desktop/test/src/@core/mixins/ui/transition.js"],"names":["heightTransition","data","trHeight","methods","trAddHeight","val","heightValue","Number","substring","length","trTrimHeight","trSetHeight","_"],"mappings":";AAAA,OAAO,IAAMA,gBAAgB,GAAG;AAC9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIEC,EAAAA,IAb8B,kBAavB;AACL,WAAO;AACLC,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD,GAjB6B;AAkB9BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,uBACKC,GADL,EACU;AACf;AACA;;AAEA;AACN;AACA;AACA;AACM,UAAMC,WAAW,GAAGC,MAAM,CAAC,KAAKL,QAAL,CAAcM,SAAd,CAAwB,CAAxB,EAA2B,KAAKN,QAAL,CAAcO,MAAd,GAAuB,CAAlD,CAAD,CAA1B;AACA,WAAKP,QAAL,aAAmBI,WAAW,GAAGC,MAAM,CAACF,GAAD,CAAvC;AACD,KAXM;AAYPK,IAAAA,YAZO,wBAYML,GAZN,EAYW;AAChB;AACA;;AAEA;AACN;AACA;AACA;AACM,UAAMC,WAAW,GAAGC,MAAM,CAAC,KAAKL,QAAL,CAAcM,SAAd,CAAwB,CAAxB,EAA2B,KAAKN,QAAL,CAAcO,MAAd,GAAuB,CAAlD,CAAD,CAA1B;AACA,WAAKP,QAAL,aAAmBI,WAAW,GAAGC,MAAM,CAACF,GAAD,CAAvC;AACD,KAtBM;AAuBPM,IAAAA,WAvBO,uBAuBKN,GAvBL,EAuBU;AACf;AACA;;AAEA;AACN;AACA;AACA;AACA;AACM,UAAIA,GAAG,KAAK,IAAZ,EAAkB,KAAKH,QAAL,GAAgB,MAAhB,CAAlB,KACK,KAAKA,QAAL,aAAmBK,MAAM,CAACF,GAAD,CAAzB;AACN;AAlCM;AAlBqB,CAAzB,C,CAwDP;;AACA,OAAO,IAAMO,CAAC,GAAG,IAAV","sourcesContent":["export const heightTransition = {\n  /*\n\n    HowTo:\n      1. Add dynamic style to element and set style as `trHeight`\n      2. Set transition speed using `transition: 0.35s height;` <= you can use appropriate value;\n      3. Optionally you can set `overflow: hidden;` to hide element overflow while height is animated.\n      4. Set initial height using `trSetHeight` before any operation. [mounted hook is recommended - You can use `ref` for dynamic contents]\n      5. Toggle height using height operations 🍻\n      6. Toggle usage of $nextTick for height operations is any issue occur [experimental] 🔬\n\n  */\n\n  data() {\n    return {\n      trHeight: null,\n    }\n  },\n  methods: {\n    trAddHeight(val) {\n      // Add height to existing height\n      // Usage: Where new element is append or more height is added (e.g. list append)\n\n      /* Assumes:\n       - Height is assigned and is `String`\n       - Incoming value is valid number in `Number` or `String`\n      */\n      const heightValue = Number(this.trHeight.substring(0, this.trHeight.length - 2))\n      this.trHeight = `${heightValue + Number(val)}px`\n    },\n    trTrimHeight(val) {\n      // Remove height from existing height\n      // Usage: Where new element is removed or height is remove (e.g. list pop/ele remove)\n\n      /* Assumes:\n       - Height is assigned and is `String`\n       - Incoming value is valid number in `Number` or `String`\n      */\n      const heightValue = Number(this.trHeight.substring(0, this.trHeight.length - 2))\n      this.trHeight = `${heightValue - Number(val)}px`\n    },\n    trSetHeight(val) {\n      // Set height\n      // Usage: Mostly for assigning initial value from mounted hook\n\n      /* Assumes:\n       - Height is not assigned and what to assign for add/remove operation\n       - What to set height at something for odd usage\n       - Incoming value is valid number in `Number` or `String`\n      */\n      if (val === null) this.trHeight = 'auto'\n      else this.trHeight = `${Number(val)}px`\n    },\n  },\n}\n\n// Ignore below for now. We will remove it when we add more transition in future.\nexport const _ = null\n"]}]}