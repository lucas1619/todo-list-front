{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/apps/user/users-list/UserListAddNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/apps/user/users-list/UserListAddNew.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgQlNpZGViYXIsIEJGb3JtLCBCRm9ybUdyb3VwLCBCRm9ybUlucHV0LCBCRm9ybUludmFsaWRGZWVkYmFjaywgQkJ1dHRvbiwKfSBmcm9tICdib290c3RyYXAtdnVlJwppbXBvcnQgeyBWYWxpZGF0aW9uUHJvdmlkZXIsIFZhbGlkYXRpb25PYnNlcnZlciB9IGZyb20gJ3ZlZS12YWxpZGF0ZScKaW1wb3J0IHsgcmVmIH0gZnJvbSAnQHZ1ZS9jb21wb3NpdGlvbi1hcGknCmltcG9ydCB7IHJlcXVpcmVkLCBhbHBoYU51bSwgZW1haWwgfSBmcm9tICdAdmFsaWRhdGlvbnMnCmltcG9ydCBmb3JtVmFsaWRhdGlvbiBmcm9tICdAY29yZS9jb21wLWZ1bmN0aW9ucy9mb3Jtcy9mb3JtLXZhbGlkYXRpb24nCmltcG9ydCBSaXBwbGUgZnJvbSAndnVlLXJpcHBsZS1kaXJlY3RpdmUnCmltcG9ydCB2U2VsZWN0IGZyb20gJ3Z1ZS1zZWxlY3QnCmltcG9ydCBjb3VudHJpZXMgZnJvbSAnQC9AZmFrZS1kYi9kYXRhL290aGVyL2NvdW50cmllcycKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQlNpZGViYXIsCiAgICBCRm9ybSwKICAgIEJGb3JtR3JvdXAsCiAgICBCRm9ybUlucHV0LAogICAgQkZvcm1JbnZhbGlkRmVlZGJhY2ssCiAgICBCQnV0dG9uLAogICAgdlNlbGVjdCwKCiAgICAvLyBGb3JtIFZhbGlkYXRpb24KICAgIFZhbGlkYXRpb25Qcm92aWRlciwKICAgIFZhbGlkYXRpb25PYnNlcnZlciwKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIFJpcHBsZSwKICB9LAogIG1vZGVsOiB7CiAgICBwcm9wOiAnaXNBZGROZXdVc2VyU2lkZWJhckFjdGl2ZScsCiAgICBldmVudDogJ3VwZGF0ZTppcy1hZGQtbmV3LXVzZXItc2lkZWJhci1hY3RpdmUnLAogIH0sCiAgcHJvcHM6IHsKICAgIGlzQWRkTmV3VXNlclNpZGViYXJBY3RpdmU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgcm9sZU9wdGlvbnM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICAgIHBsYW5PcHRpb25zOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVxdWlyZWQsCiAgICAgIGFscGhhTnVtLAogICAgICBlbWFpbCwKICAgICAgY291bnRyaWVzLAogICAgfQogIH0sCiAgc2V0dXAocHJvcHMsIHsgZW1pdCB9KSB7CiAgICBjb25zdCBibGFua1VzZXJEYXRhID0gewogICAgICBmdWxsTmFtZTogJycsCiAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgZW1haWw6ICcnLAogICAgICByb2xlOiBudWxsLAogICAgICBjdXJyZW50UGxhbjogbnVsbCwKICAgICAgY29tcGFueTogJycsCiAgICAgIGNvdW50cnk6ICcnLAogICAgICBjb250YWN0OiAnJywKICAgIH0KCiAgICBjb25zdCB1c2VyRGF0YSA9IHJlZihKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGJsYW5rVXNlckRhdGEpKSkKICAgIGNvbnN0IHJlc2V0dXNlckRhdGEgPSAoKSA9PiB7CiAgICAgIHVzZXJEYXRhLnZhbHVlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShibGFua1VzZXJEYXRhKSkKICAgIH0KCiAgICBjb25zdCBvblN1Ym1pdCA9ICgpID0+IHsKICAgICAgc3RvcmUuZGlzcGF0Y2goJ2FwcC11c2VyL2FkZFVzZXInLCB1c2VyRGF0YS52YWx1ZSkKICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICBlbWl0KCdyZWZldGNoLWRhdGEnKQogICAgICAgICAgZW1pdCgndXBkYXRlOmlzLWFkZC1uZXctdXNlci1zaWRlYmFyLWFjdGl2ZScsIGZhbHNlKQogICAgICAgIH0pCiAgICB9CgogICAgY29uc3QgewogICAgICByZWZGb3JtT2JzZXJ2ZXIsCiAgICAgIGdldFZhbGlkYXRpb25TdGF0ZSwKICAgICAgcmVzZXRGb3JtLAogICAgfSA9IGZvcm1WYWxpZGF0aW9uKHJlc2V0dXNlckRhdGEpCgogICAgcmV0dXJuIHsKICAgICAgdXNlckRhdGEsCiAgICAgIG9uU3VibWl0LAoKICAgICAgcmVmRm9ybU9ic2VydmVyLAogICAgICBnZXRWYWxpZGF0aW9uU3RhdGUsCiAgICAgIHJlc2V0Rm9ybSwKICAgIH0KICB9LAp9Cg=="},{"version":3,"sources":["UserListAddNew.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"UserListAddNew.vue","sourceRoot":"src/views/apps/user/users-list","sourcesContent":["<template>\n  <b-sidebar\n    id=\"add-new-user-sidebar\"\n    :visible=\"isAddNewUserSidebarActive\"\n    bg-variant=\"white\"\n    sidebar-class=\"sidebar-lg\"\n    shadow\n    backdrop\n    no-header\n    right\n    @hidden=\"resetForm\"\n    @change=\"(val) => $emit('update:is-add-new-user-sidebar-active', val)\"\n  >\n    <template #default=\"{ hide }\">\n      <!-- Header -->\n      <div class=\"d-flex justify-content-between align-items-center content-sidebar-header px-2 py-1\">\n        <h5 class=\"mb-0\">\n          Add New User\n        </h5>\n\n        <feather-icon\n          class=\"ml-1 cursor-pointer\"\n          icon=\"XIcon\"\n          size=\"16\"\n          @click=\"hide\"\n        />\n\n      </div>\n\n      <!-- BODY -->\n      <validation-observer\n        #default=\"{ handleSubmit }\"\n        ref=\"refFormObserver\"\n      >\n        <!-- Form -->\n        <b-form\n          class=\"p-2\"\n          @submit.prevent=\"handleSubmit(onSubmit)\"\n          @reset.prevent=\"resetForm\"\n        >\n\n          <!-- Full Name -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Full Name\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Full Name\"\n              label-for=\"full-name\"\n            >\n              <b-form-input\n                id=\"full-name\"\n                v-model=\"userData.fullName\"\n                autofocus\n                :state=\"getValidationState(validationContext)\"\n                trim\n                placeholder=\"John Doe\"\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Username -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Username\"\n            rules=\"required|alpha-num\"\n          >\n            <b-form-group\n              label=\"Username\"\n              label-for=\"username\"\n            >\n              <b-form-input\n                id=\"username\"\n                v-model=\"userData.username\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Email -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Email\"\n            rules=\"required|email\"\n          >\n            <b-form-group\n              label=\"Email\"\n              label-for=\"email\"\n            >\n              <b-form-input\n                id=\"email\"\n                v-model=\"userData.email\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Company -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Contact\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Contact\"\n              label-for=\"contact\"\n            >\n              <b-form-input\n                id=\"contact\"\n                v-model=\"userData.contact\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Company -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Company\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Company\"\n              label-for=\"company\"\n            >\n              <b-form-input\n                id=\"company\"\n                v-model=\"userData.company\"\n                :state=\"getValidationState(validationContext)\"\n                trim\n              />\n\n              <b-form-invalid-feedback>\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Country -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Country\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Country\"\n              label-for=\"country\"\n              :state=\"getValidationState(validationContext)\"\n            >\n              <v-select\n                v-model=\"userData.country\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"countries\"\n                :clearable=\"false\"\n                input-id=\"country\"\n              />\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- User Role -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"User Role\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"User Role\"\n              label-for=\"user-role\"\n              :state=\"getValidationState(validationContext)\"\n            >\n              <v-select\n                v-model=\"userData.role\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"roleOptions\"\n                :reduce=\"val => val.value\"\n                :clearable=\"false\"\n                input-id=\"user-role\"\n              />\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Plan -->\n          <validation-provider\n            #default=\"validationContext\"\n            name=\"Plan\"\n            rules=\"required\"\n          >\n            <b-form-group\n              label=\"Plan\"\n              label-for=\"plan\"\n              :state=\"getValidationState(validationContext)\"\n            >\n              <v-select\n                v-model=\"userData.currentPlan\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"planOptions\"\n                :reduce=\"val => val.value\"\n                :clearable=\"false\"\n                input-id=\"plan\"\n              />\n              <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                {{ validationContext.errors[0] }}\n              </b-form-invalid-feedback>\n            </b-form-group>\n          </validation-provider>\n\n          <!-- Form Actions -->\n          <div class=\"d-flex mt-2\">\n            <b-button\n              v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n              variant=\"primary\"\n              class=\"mr-2\"\n              type=\"submit\"\n            >\n              Add\n            </b-button>\n            <b-button\n              v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n              type=\"button\"\n              variant=\"outline-secondary\"\n              @click=\"hide\"\n            >\n              Cancel\n            </b-button>\n          </div>\n\n        </b-form>\n      </validation-observer>\n    </template>\n  </b-sidebar>\n</template>\n\n<script>\nimport {\n  BSidebar, BForm, BFormGroup, BFormInput, BFormInvalidFeedback, BButton,\n} from 'bootstrap-vue'\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport { ref } from '@vue/composition-api'\nimport { required, alphaNum, email } from '@validations'\nimport formValidation from '@core/comp-functions/forms/form-validation'\nimport Ripple from 'vue-ripple-directive'\nimport vSelect from 'vue-select'\nimport countries from '@/@fake-db/data/other/countries'\nimport store from '@/store'\n\nexport default {\n  components: {\n    BSidebar,\n    BForm,\n    BFormGroup,\n    BFormInput,\n    BFormInvalidFeedback,\n    BButton,\n    vSelect,\n\n    // Form Validation\n    ValidationProvider,\n    ValidationObserver,\n  },\n  directives: {\n    Ripple,\n  },\n  model: {\n    prop: 'isAddNewUserSidebarActive',\n    event: 'update:is-add-new-user-sidebar-active',\n  },\n  props: {\n    isAddNewUserSidebarActive: {\n      type: Boolean,\n      required: true,\n    },\n    roleOptions: {\n      type: Array,\n      required: true,\n    },\n    planOptions: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      required,\n      alphaNum,\n      email,\n      countries,\n    }\n  },\n  setup(props, { emit }) {\n    const blankUserData = {\n      fullName: '',\n      username: '',\n      email: '',\n      role: null,\n      currentPlan: null,\n      company: '',\n      country: '',\n      contact: '',\n    }\n\n    const userData = ref(JSON.parse(JSON.stringify(blankUserData)))\n    const resetuserData = () => {\n      userData.value = JSON.parse(JSON.stringify(blankUserData))\n    }\n\n    const onSubmit = () => {\n      store.dispatch('app-user/addUser', userData.value)\n        .then(() => {\n          emit('refetch-data')\n          emit('update:is-add-new-user-sidebar-active', false)\n        })\n    }\n\n    const {\n      refFormObserver,\n      getValidationState,\n      resetForm,\n    } = formValidation(resetuserData)\n\n    return {\n      userData,\n      onSubmit,\n\n      refFormObserver,\n      getValidationState,\n      resetForm,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-select.scss';\n\n#add-new-user-sidebar {\n  .vs__dropdown-menu {\n    max-height: 200px !important;\n  }\n}\n</style>\n"]}]}