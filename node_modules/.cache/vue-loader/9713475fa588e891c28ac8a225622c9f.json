{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/@core/components/app-collapse/AppCollapseItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/@core/components/app-collapse/AppCollapseItem.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgQkNhcmQsIEJDYXJkSGVhZGVyLCBCQ2FyZEJvZHksIEJDb2xsYXBzZSwKfSBmcm9tICdib290c3RyYXAtdnVlJwppbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkLAogICAgQkNhcmRIZWFkZXIsCiAgICBCQ2FyZEJvZHksCiAgICBCQ29sbGFwc2UsCiAgfSwKICBwcm9wczogewogICAgaXNWaXNpYmxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgfSwKICAgIHRpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICBjb2xsYXBzZUl0ZW1JRDogJycsCiAgICAgIG9wZW5PbkhvdmVyOiB0aGlzLiRwYXJlbnQuaG92ZXIsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgYWNjb3JkaW9uKCkgewogICAgICByZXR1cm4gdGhpcy4kcGFyZW50LmFjY29yZGlvbiA/IGBhY2NvcmRpb24tJHt0aGlzLiRwYXJlbnQuY29sbGFwc2VJRH1gIDogbnVsbAogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmNvbGxhcHNlSXRlbUlEID0gdXVpZHY0KCkKICAgIHRoaXMudmlzaWJsZSA9IHRoaXMuaXNWaXNpYmxlCiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVWaXNpYmxlKHZhbCA9IHRydWUpIHsKICAgICAgdGhpcy52aXNpYmxlID0gdmFsCiAgICAgIHRoaXMuJGVtaXQoJ3Zpc2libGUnLCB2YWwpCiAgICB9LAogICAgY29sbGFwc2VPcGVuKCkgewogICAgICBpZiAodGhpcy5vcGVuT25Ib3ZlcikgdGhpcy51cGRhdGVWaXNpYmxlKHRydWUpCiAgICB9LAogICAgY29sbGFwc2VDbG9zZSgpIHsKICAgICAgaWYgKHRoaXMub3Blbk9uSG92ZXIpIHRoaXMudXBkYXRlVmlzaWJsZShmYWxzZSkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["AppCollapseItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppCollapseItem.vue","sourceRoot":"src/@core/components/app-collapse","sourcesContent":["<template>\n  <b-card\n    no-body\n    :class=\"{'open': visible}\"\n    @mouseenter=\"collapseOpen\"\n    @mouseleave=\"collapseClose\"\n  >\n    <b-card-header\n\n      :class=\"{'collapsed': !visible}\"\n      :aria-expanded=\"visible ? 'true' : 'false'\"\n      :aria-controls=\"collapseItemID\"\n      role=\"tab\"\n      data-toggle=\"collapse\"\n      @click=\"updateVisible(!visible)\"\n    >\n      <slot name=\"header\">\n        <span class=\"lead collapse-title\">{{ title }}</span>\n      </slot>\n    </b-card-header>\n\n    <b-collapse\n      :id=\"collapseItemID\"\n      v-model=\"visible\"\n      :accordion=\"accordion\"\n      role=\"tabpanel\"\n    >\n      <b-card-body>\n        <slot />\n      </b-card-body>\n    </b-collapse>\n  </b-card>\n</template>\n\n<script>\nimport {\n  BCard, BCardHeader, BCardBody, BCollapse,\n} from 'bootstrap-vue'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default {\n  components: {\n    BCard,\n    BCardHeader,\n    BCardBody,\n    BCollapse,\n  },\n  props: {\n    isVisible: {\n      type: Boolean,\n      default: false,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      visible: false,\n      collapseItemID: '',\n      openOnHover: this.$parent.hover,\n    }\n  },\n  computed: {\n    accordion() {\n      return this.$parent.accordion ? `accordion-${this.$parent.collapseID}` : null\n    },\n  },\n  created() {\n    this.collapseItemID = uuidv4()\n    this.visible = this.isVisible\n  },\n  methods: {\n    updateVisible(val = true) {\n      this.visible = val\n      this.$emit('visible', val)\n    },\n    collapseOpen() {\n      if (this.openOnHover) this.updateVisible(true)\n    },\n    collapseClose() {\n      if (this.openOnHover) this.updateVisible(false)\n    },\n  },\n}\n</script>\n"]}]}