{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/forms/form-validation/FormValidationSimple.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/forms/form-validation/FormValidationSimple.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZScKaW1wb3J0IHsgVmFsaWRhdGlvblByb3ZpZGVyLCBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICd2ZWUtdmFsaWRhdGUnCmltcG9ydCB7CiAgQkZvcm1JbnB1dCwgQkZvcm1Hcm91cCwgQkZvcm0sIEJSb3csIEJDb2wsIEJCdXR0b24sIEJDYXJkVGV4dCwKfSBmcm9tICdib290c3RyYXAtdnVlJwppbXBvcnQgeyByZXF1aXJlZCwgZW1haWwgfSBmcm9tICdAdmFsaWRhdGlvbnMnCmltcG9ydCB7IGNvZGVTaW1wbGUgfSBmcm9tICcuL2NvZGUnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkNhcmRDb2RlLAogICAgVmFsaWRhdGlvblByb3ZpZGVyLAogICAgVmFsaWRhdGlvbk9ic2VydmVyLAogICAgQkNhcmRUZXh0LAogICAgQkZvcm1JbnB1dCwKICAgIEJGb3JtR3JvdXAsCiAgICBCRm9ybSwKICAgIEJSb3csCiAgICBCQ29sLAogICAgQkJ1dHRvbiwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlbWFpbFZhbHVlOiAnJywKICAgICAgbmFtZTogJycsCiAgICAgIGNvZGVTaW1wbGUsCiAgICAgIHJlcXVpcmVkLAogICAgICBlbWFpbCwKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHZhbGlkYXRpb25Gb3JtKCkgewogICAgICB0aGlzLiRyZWZzLnNpbXBsZVJ1bGVzLnZhbGlkYXRlKCkudGhlbihzdWNjZXNzID0+IHsKICAgICAgICBpZiAoc3VjY2VzcykgewogICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgICAgICAgICBhbGVydCgnZm9ybSBzdWJtaXR0ZWQhJykKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["FormValidationSimple.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormValidationSimple.vue","sourceRoot":"src/views/forms/form-validation","sourcesContent":["<template>\n  <b-card-code\n    title=\"Simple Form Validation\"\n  >\n    <b-card-text>\n      <span>To add validation to any input filed just wrap that field in </span>\n      <code>ValidationProvider</code>\n      <span> component. Next, add your validation using </span>\n      <code>rules</code>\n      <span> prop.</span>\n    </b-card-text>\n\n    <b-card-text>\n      <span>You can get errors of this field using </span>\n      <code>slot.</code>\n    </b-card-text>\n\n    <!-- form -->\n    <validation-observer ref=\"simpleRules\">\n      <b-form>\n        <b-row>\n          <b-col md=\"6\">\n            <b-form-group>\n              <validation-provider\n                #default=\"{ errors }\"\n                name=\"First Name\"\n                rules=\"required\"\n              >\n                <b-form-input\n                  v-model=\"name\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"First Name\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n          <b-col md=\"6\">\n            <b-form-group>\n              <validation-provider\n                #default=\"{ errors }\"\n                name=\"Email\"\n                rules=\"required|email\"\n              >\n                <b-form-input\n                  v-model=\"emailValue\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n          <b-col cols=\"12\">\n            <b-button\n              variant=\"primary\"\n              type=\"submit\"\n              @click.prevent=\"validationForm\"\n            >\n              Submit\n            </b-button>\n          </b-col>\n        </b-row>\n      </b-form>\n    </validation-observer>\n\n    <template #code>\n      {{ codeSimple }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport {\n  BFormInput, BFormGroup, BForm, BRow, BCol, BButton, BCardText,\n} from 'bootstrap-vue'\nimport { required, email } from '@validations'\nimport { codeSimple } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    ValidationProvider,\n    ValidationObserver,\n    BCardText,\n    BFormInput,\n    BFormGroup,\n    BForm,\n    BRow,\n    BCol,\n    BButton,\n  },\n  data() {\n    return {\n      emailValue: '',\n      name: '',\n      codeSimple,\n      required,\n      email,\n    }\n  },\n  methods: {\n    validationForm() {\n      this.$refs.simpleRules.validate().then(success => {\n        if (success) {\n          // eslint-disable-next-line\n          alert('form submitted!')\n        }\n      })\n    },\n  },\n}\n</script>\n"]}]}