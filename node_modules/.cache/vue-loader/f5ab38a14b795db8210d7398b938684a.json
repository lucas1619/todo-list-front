{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/components/toasts/ToastsVariants.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/toasts/ToastsVariants.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZScKaW1wb3J0IHsgQkJ1dHRvbiwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZScKaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZScKaW1wb3J0IHsgY29kZVZhcmlhbnQgfSBmcm9tICcuL2NvZGUnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkNhcmRDb2RlLAogICAgQkJ1dHRvbiwKICAgIEJDYXJkVGV4dCwKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIFJpcHBsZSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlVmFyaWFudCwKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG1ha2VUb2FzdCh2YXJpYW50ID0gbnVsbCkgewogICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KCdUb2FzdCBib2R5IGNvbnRlbnQnLCB7CiAgICAgICAgdGl0bGU6IGBWYXJpYW50ICR7dmFyaWFudCB8fCAnZGVmYXVsdCd9YCwKICAgICAgICB2YXJpYW50LAogICAgICAgIHNvbGlkOiBmYWxzZSwKICAgICAgfSkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["ToastsVariants.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToastsVariants.vue","sourceRoot":"src/views/components/toasts","sourcesContent":["<template>\n  <b-card-code title=\"Variants\">\n    <b-card-text class=\"mb-0\">\n      BootstrapVue toasts provide custom CSS to define color variants. Variants follow the standard Bootstrap v4 variant\n      names. If you have custom SCSS defined Bootstrap color theme variants, the toast custom SCSS will automatically\n      create toast variants for you (refer to the Theming reference section).\n    </b-card-text>\n\n    <div class=\"demo-inline-spacing\">\n\n      <!-- default -->\n      <b-button\n        variant=\"gradient-primary\"\n        @click=\"makeToast()\"\n      >\n        Default\n      </b-button>\n\n      <!-- primary -->\n      <b-button\n        v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n        variant=\"outline-primary\"\n        @click=\"makeToast('primary')\"\n      >\n        Primary\n      </b-button>\n\n      <!-- secondary -->\n      <b-button\n        v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n        variant=\"outline-secondary\"\n        @click=\"makeToast('secondary')\"\n      >\n        Secondary\n      </b-button>\n\n      <!-- warning -->\n      <b-button\n        v-ripple.400=\"'rgba(255, 159, 67, 0.15)'\"\n        variant=\"outline-warning\"\n        @click=\"makeToast('warning')\"\n      >\n        Warning\n      </b-button>\n\n      <!-- danger -->\n      <b-button\n        v-ripple.400=\"'rgba(255, 159, 67, 0.15)'\"\n        variant=\"outline-danger\"\n        @click=\"makeToast('danger')\"\n      >\n        Danger\n      </b-button>\n\n      <!-- success -->\n      <b-button\n        v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n        variant=\"outline-success\"\n        @click=\"makeToast('success')\"\n      >\n        Success\n      </b-button>\n\n      <!-- info -->\n      <b-button\n        v-ripple.400=\"'rgba(0, 207, 232, 0.15)'\"\n        variant=\"outline-info\"\n        @click=\"makeToast('info')\"\n      >\n        Info\n      </b-button>\n    </div>\n\n    <template #code>\n      {{ codeVariant }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport { BButton, BCardText } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeVariant } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BButton,\n    BCardText,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      codeVariant,\n    }\n  },\n  methods: {\n    makeToast(variant = null) {\n      this.$bvToast.toast('Toast body content', {\n        title: `Variant ${variant || 'default'}`,\n        variant,\n        solid: false,\n      })\n    },\n  },\n}\n</script>\n"]}]}