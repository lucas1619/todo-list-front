{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/forms/form-validation/FormValidationTypes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/forms/form-validation/FormValidationTypes.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZScKaW1wb3J0IHsgVmFsaWRhdGlvblByb3ZpZGVyLCBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICd2ZWUtdmFsaWRhdGUnCmltcG9ydCB7CiAgQkZvcm1JbnB1dCwgQkZvcm1Hcm91cCwgQkZvcm0sIEJSb3csIEJDb2wsIEJCdXR0b24sCn0gZnJvbSAnYm9vdHN0cmFwLXZ1ZScKaW1wb3J0IHsKICByZXF1aXJlZCwgZW1haWwsIGNvbmZpcm1lZCwgdXJsLCBiZXR3ZWVuLCBhbHBoYSwgaW50ZWdlciwgcGFzc3dvcmQsIG1pbiwgZGlnaXRzLCBhbHBoYURhc2gsIGxlbmd0aCwKfSBmcm9tICdAdmFsaWRhdGlvbnMnCmltcG9ydCB7IGNvZGVUeXBlIH0gZnJvbSAnLi9jb2RlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkQ29kZSwKICAgIFZhbGlkYXRpb25Qcm92aWRlciwKICAgIFZhbGlkYXRpb25PYnNlcnZlciwKICAgIEJGb3JtSW5wdXQsCiAgICBCRm9ybUdyb3VwLAogICAgQkZvcm0sCiAgICBCUm93LAogICAgQkNvbCwKICAgIEJCdXR0b24sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogJycsCiAgICAgIHBhc3N3b3JkVmFsdWU6ICcnLAogICAgICBwYXNzd29yZENvbjogJycsCiAgICAgIGVtYWlsVmFsdWU6ICcnLAogICAgICBudW1iZXI6ICcnLAogICAgICBudW1iZXJSYW5nZTogJycsCiAgICAgIG51bWJlclJlZ3g6ICcnLAogICAgICBVUkw6ICcnLAogICAgICBBbHBoYWJldGljOiAnJywKICAgICAgZGlnaXRWYWx1ZTogJycsCiAgICAgIGRpZ2l0VmFsdWUyOiAnJywKICAgICAgY2hhcmFjdGVyOiAnJywKICAgICAgcmVxdWlyZWQsCiAgICAgIGNvbmZpcm1lZCwKICAgICAgcGFzc3dvcmQsCiAgICAgIGVtYWlsLAogICAgICBtaW4sCiAgICAgIGludGVnZXIsCiAgICAgIHVybCwKICAgICAgYWxwaGEsCiAgICAgIGJldHdlZW4sCiAgICAgIGRpZ2l0cywKICAgICAgbGVuZ3RoLAogICAgICBhbHBoYURhc2gsCiAgICAgIGNvZGVUeXBlLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdmFsaWRhdGlvbkZvcm0oKSB7CiAgICAgIHRoaXMuJHJlZnMuc2ltcGxlUnVsZXMudmFsaWRhdGUoKS50aGVuKHN1Y2Nlc3MgPT4gewogICAgICAgIGlmIChzdWNjZXNzKSB7CiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgIGFsZXJ0KCdmb3JtIHN1Ym1pdHRlZCEnKQogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["FormValidationTypes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormValidationTypes.vue","sourceRoot":"src/views/forms/form-validation","sourcesContent":["<template>\n  <b-card-code title=\"Validation types\">\n    <validation-observer ref=\"simpleRules\">\n      <b-form>\n        <b-row>\n\n          <!--  This field is required-->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>This field is required</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                rules=\"required\"\n                name=\"First Name\"\n              >\n                <b-form-input\n                  v-model=\"name\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Fist Name\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!--Enter Number between 10 & 20 -->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>Enter Number between 10 & 20</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                rules=\"required|between:10,20\"\n                name=\"Number between\"\n              >\n                <b-form-input\n                  v-model=\"numberRange\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Enter Number between 10 & 20\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!-- Must only consist of numbers-->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>Must only consist of numbers</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                rules=\"required|integer\"\n                name=\"Number\"\n              >\n                <b-form-input\n                  v-model=\"number\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Enter Number Only\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!-- Must match the specified regular expression : ^([0-9]+)$ - numbers only -->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>Must match the specified regular expression : ^([0-9]+)$ - numbers only</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                rules=\"required|regex:^([0-9]+)$\"\n                name=\"Regex\"\n              >\n                <b-form-input\n                  v-model=\"numberRegx\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Enter Specified regular expression\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!--  Only alphabetic characters-->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>Only alphabetic characters</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                rules=\"required|alpha\"\n                name=\"Alpha\"\n              >\n                <b-form-input\n                  v-model=\"Alphabetic\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Enter Character Only\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!-- Length should not be less than the specified length : 3 -->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>Length should not be less than the specified length : 3</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                rules=\"required|min:3\"\n                name=\"Min Character\"\n              >\n                <b-form-input\n                  v-model=\"digitValue\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Enter minimum 3 Characters\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!--Password Input Field -->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>Password Input Field</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                rules=\"required|password\"\n                name=\"password\"\n                vid=\"password\"\n              >\n                <b-form-input\n                  v-model=\"passwordValue\"\n                  type=\"password\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Password\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!-- The digits field must be numeric and exactly contain 3 digits -->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>The digits field must be numeric and exactly contain 3 digits</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                rules=\"required|digits:3\"\n                name=\"Numeric\"\n              >\n                <b-form-input\n                  v-model=\"digitValue2\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Enter Exactyly 3 digit\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!--Repeat password must match  -->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>Repeat password must match</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                rules=\"required|confirmed:password\"\n                name=\"Confirm Password\"\n              >\n                <b-form-input\n                  v-model=\"passwordCon\"\n                  type=\"password\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Repeat Password\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!--Only alphabetic characters, numbers, dashes or underscores -->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>Only alphabetic characters, numbers, dashes or underscores</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                rules=\"required|alpha-dash\"\n                name=\"All Character\"\n              >\n                <b-form-input\n                  v-model=\"character\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Enter Character, Numbers, Dash, Underscores\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!-- Must be a valid email -->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>Must be a valid email</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                name=\"Email\"\n                rules=\"required|email\"\n              >\n                <b-form-input\n                  v-model=\"emailValue\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Email\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!--Must be a valid url  -->\n          <b-col md=\"6\">\n            <b-form-group>\n              <label>Must be a valid url</label>\n              <validation-provider\n                #default=\"{ errors }\"\n                name=\"URL\"\n                rules=\"required|url\"\n              >\n                <b-form-input\n                  v-model=\"URL\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  placeholder=\"Enter Valid URL\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!-- submit button -->\n          <b-col cols=\"12\">\n            <b-button\n              variant=\"primary\"\n              type=\"submit\"\n              @click.prevent=\"validationForm\"\n            >\n              Submit\n            </b-button>\n          </b-col>\n        </b-row>\n      </b-form>\n    </validation-observer>\n\n    <template #code>\n      {{ codeType }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport {\n  BFormInput, BFormGroup, BForm, BRow, BCol, BButton,\n} from 'bootstrap-vue'\nimport {\n  required, email, confirmed, url, between, alpha, integer, password, min, digits, alphaDash, length,\n} from '@validations'\nimport { codeType } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    ValidationProvider,\n    ValidationObserver,\n    BFormInput,\n    BFormGroup,\n    BForm,\n    BRow,\n    BCol,\n    BButton,\n  },\n  data() {\n    return {\n      name: '',\n      passwordValue: '',\n      passwordCon: '',\n      emailValue: '',\n      number: '',\n      numberRange: '',\n      numberRegx: '',\n      URL: '',\n      Alphabetic: '',\n      digitValue: '',\n      digitValue2: '',\n      character: '',\n      required,\n      confirmed,\n      password,\n      email,\n      min,\n      integer,\n      url,\n      alpha,\n      between,\n      digits,\n      length,\n      alphaDash,\n      codeType,\n    }\n  },\n  methods: {\n    validationForm() {\n      this.$refs.simpleRules.validate().then(success => {\n        if (success) {\n          // eslint-disable-next-line\n          alert('form submitted!')\n        }\n      })\n    },\n  },\n}\n</script>\n"]}]}