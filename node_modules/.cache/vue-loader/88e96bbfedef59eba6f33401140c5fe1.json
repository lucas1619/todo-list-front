{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/card/card-advance/CardAdvanceEmployeeTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/card/card-advance/CardAdvanceEmployeeTask.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgQkNhcmQsIEJDYXJkVGl0bGUsIEJDYXJkSGVhZGVyLCBCQ2FyZEJvZHksIEJNZWRpYSwgQk1lZGlhQXNpZGUsIEJBdmF0YXIsIEJNZWRpYUJvZHksCn0gZnJvbSAnYm9vdHN0cmFwLXZ1ZScKaW1wb3J0IFZ1ZUFwZXhDaGFydHMgZnJvbSAndnVlLWFwZXhjaGFydHMnCmltcG9ydCB7ICR0aGVtZUNvbG9ycyB9IGZyb20gJ0B0aGVtZUNvbmZpZycKLyogZXNsaW50LWRpc2FibGUgZ2xvYmFsLXJlcXVpcmUgKi8KY29uc3QgJHRyYWNrQmdDb2xvciA9ICcjZTllY2VmJwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkNhcmQsCiAgICBCQ2FyZFRpdGxlLAogICAgQkNhcmRIZWFkZXIsCiAgICBCQ2FyZEJvZHksCiAgICBCTWVkaWEsCiAgICBCTWVkaWFBc2lkZSwKICAgIEJNZWRpYUJvZHksCiAgICBCQXZhdGFyLAogICAgVnVlQXBleENoYXJ0cywKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydERhdGE6IFtdLAogICAgICBjaGFydENvbG9yOiBbJHRoZW1lQ29sb3JzLnByaW1hcnksICR0aGVtZUNvbG9ycy5kYW5nZXIsICR0aGVtZUNvbG9ycy5zdWNjZXNzLCAkdGhlbWVDb2xvcnMuc2Vjb25kYXJ5LCAkdGhlbWVDb2xvcnMud2FybmluZywgJHRoZW1lQ29sb3JzLnByaW1hcnldLAogICAgICBjaGFydFNlcmllczogWzQ1LCA2NSwgNjAsIDM1LCA2NSwgODBdLAogICAgICBlbXBsb3llZURhdGE6IFsKICAgICAgICB7CiAgICAgICAgICBhdmF0YXI6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltYWdlcy9wb3J0cmFpdC9zbWFsbC9hdmF0YXItcy05LmpwZycpLAogICAgICAgICAgdXNlckZ1bGxOYW1lOiAnUnlhbiBIYXJyaW5ndG9uJywKICAgICAgICAgIGRlc2lnbmF0aW9uOiAnaU9TIERldmVsb3BlcicsCiAgICAgICAgICBkdXJhdGlvbjogJzlociAyMG0nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgYXZhdGFyOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvcG9ydHJhaXQvc21hbGwvYXZhdGFyLXMtMjAuanBnJyksCiAgICAgICAgICB1c2VyRnVsbE5hbWU6ICdMb3Vpc2EgTm9ydG9uJywKICAgICAgICAgIGRlc2lnbmF0aW9uOiAnVUkgRGVzaWduZXInLAogICAgICAgICAgZHVyYXRpb246ICc0aHIgMTdtJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGF2YXRhcjogcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL3BvcnRyYWl0L3NtYWxsL2F2YXRhci1zLTEuanBnJyksCiAgICAgICAgICB1c2VyRnVsbE5hbWU6ICdKYXlkZW4gRHVuY2FuJywKICAgICAgICAgIGRlc2lnbmF0aW9uOiAnSmF2YSBEZXZlbG9wZXInLAogICAgICAgICAgZHVyYXRpb246ICcxMmhyIDhtJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGF2YXRhcjogcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL3BvcnRyYWl0L3NtYWxsL2F2YXRhci1zLTIwLmpwZycpLAogICAgICAgICAgdXNlckZ1bGxOYW1lOiAnQ3ludGhpYSBIb3dlbGwnLAogICAgICAgICAgZGVzaWduYXRpb246ICdBbmd1bGVyIERldmVsb3BlcicsCiAgICAgICAgICBkdXJhdGlvbjogJzNociAxOW0nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgYXZhdGFyOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvcG9ydHJhaXQvc21hbGwvYXZhdGFyLXMtMTYuanBnJyksCiAgICAgICAgICB1c2VyRnVsbE5hbWU6ICdIZWxlbmEgUGF5bmUnLAogICAgICAgICAgZGVzaWduYXRpb246ICdNYXJrZXRpbmcnLAogICAgICAgICAgZHVyYXRpb246ICc5aHIgNTBtJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGF2YXRhcjogcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL3BvcnRyYWl0L3NtYWxsL2F2YXRhci1zLTEzLmpwZycpLAogICAgICAgICAgdXNlckZ1bGxOYW1lOiAnVHJveSBKZW5zZW4nLAogICAgICAgICAgZGVzaWduYXRpb246ICdpT1MgRGV2ZWxvcGVyJywKICAgICAgICAgIGR1cmF0aW9uOiAnNGhyIDQ4bScsCiAgICAgICAgfSwKICAgICAgXSwKICAgICAgY2hhcnQ6IHsKICAgICAgICBzZXJpZXM6IFs2NV0sCiAgICAgICAgb3B0aW9uczogewogICAgICAgICAgZ3JpZDogewogICAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgICAgcGFkZGluZzogewogICAgICAgICAgICAgIGxlZnQ6IC0xNSwKICAgICAgICAgICAgICByaWdodDogLTE1LAogICAgICAgICAgICAgIHRvcDogLTEyLAogICAgICAgICAgICAgIGJvdHRvbTogLTE1LAogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIGNvbG9yczogWyR0aGVtZUNvbG9ycy5wcmltYXJ5XSwKICAgICAgICAgIHBsb3RPcHRpb25zOiB7CiAgICAgICAgICAgIHJhZGlhbEJhcjogewogICAgICAgICAgICAgIGhvbGxvdzogewogICAgICAgICAgICAgICAgc2l6ZTogJzIyJScsCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB0cmFjazogewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHRyYWNrQmdDb2xvciwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGRhdGFMYWJlbHM6IHsKICAgICAgICAgICAgICAgIHNob3dPbjogJ2Fsd2F5cycsCiAgICAgICAgICAgICAgICBuYW1lOiB7CiAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHZhbHVlOiB7CiAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIHN0cm9rZTogewogICAgICAgICAgICBsaW5lQ2FwOiAncm91bmQnLAogICAgICAgICAgfSwKICAgICAgICB9LAogICAgICB9LAogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5lbXBsb3llZURhdGEubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgY29uc3QgY2hhcnRDbG9uZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5jaGFydCkpCiAgICAgIGNoYXJ0Q2xvbmUub3B0aW9ucy5jb2xvcnNbMF0gPSB0aGlzLmNoYXJ0Q29sb3JbaV0KICAgICAgY2hhcnRDbG9uZS5zZXJpZXNbMF0gPSB0aGlzLmNoYXJ0U2VyaWVzW2ldCiAgICAgIHRoaXMuY2hhcnREYXRhLnB1c2goY2hhcnRDbG9uZSkKICAgIH0KICB9LAp9Ci8qIGVzbGludC1kaXNhYmxlIGdsb2JhbC1yZXF1aXJlICovCg=="},{"version":3,"sources":["CardAdvanceEmployeeTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"CardAdvanceEmployeeTask.vue","sourceRoot":"src/views/card/card-advance","sourcesContent":["<template>\n  <b-card\n    no-body\n    class=\"card-employee-task\"\n  >\n    <b-card-header>\n      <b-card-title>Employee Task</b-card-title>\n      <feather-icon\n        icon=\"MoreVerticalIcon\"\n        size=\"18\"\n        class=\"cursor-pointer\"\n      />\n    </b-card-header>\n\n    <!-- body -->\n    <b-card-body>\n      <div\n        v-for=\"(employee,index) in employeeData\"\n        :key=\"employee.userFullName\"\n        class=\"employee-task d-flex justify-content-between align-items-center\"\n      >\n        <b-media no-body>\n          <b-media-aside class=\"mr-75\">\n            <b-avatar\n              rounded\n              size=\"42\"\n              :src=\"employee.avatar\"\n            />\n          </b-media-aside>\n          <b-media-body class=\"my-auto\">\n            <h6 class=\"mb-0\">\n              {{ employee.userFullName }}\n            </h6>\n            <small>{{ employee.designation }}</small>\n          </b-media-body>\n        </b-media>\n        <div class=\"d-flex align-items-center\">\n          <small class=\"text-muted mr-75\">{{ employee.duration }}</small>\n\n          <!-- chart -->\n          <vue-apex-charts\n            type=\"radialBar\"\n            height=\"30\"\n            width=\"30\"\n            :options=\"chartData[index].options\"\n            :series=\"chartData[index].series\"\n          />\n        </div>\n      </div>\n    </b-card-body>\n  </b-card>\n</template>\n\n<script>\nimport {\n  BCard, BCardTitle, BCardHeader, BCardBody, BMedia, BMediaAside, BAvatar, BMediaBody,\n} from 'bootstrap-vue'\nimport VueApexCharts from 'vue-apexcharts'\nimport { $themeColors } from '@themeConfig'\n/* eslint-disable global-require */\nconst $trackBgColor = '#e9ecef'\nexport default {\n  components: {\n    BCard,\n    BCardTitle,\n    BCardHeader,\n    BCardBody,\n    BMedia,\n    BMediaAside,\n    BMediaBody,\n    BAvatar,\n    VueApexCharts,\n  },\n  data() {\n    return {\n      chartData: [],\n      chartColor: [$themeColors.primary, $themeColors.danger, $themeColors.success, $themeColors.secondary, $themeColors.warning, $themeColors.primary],\n      chartSeries: [45, 65, 60, 35, 65, 80],\n      employeeData: [\n        {\n          avatar: require('@/assets/images/portrait/small/avatar-s-9.jpg'),\n          userFullName: 'Ryan Harrington',\n          designation: 'iOS Developer',\n          duration: '9hr 20m',\n        },\n        {\n          avatar: require('@/assets/images/portrait/small/avatar-s-20.jpg'),\n          userFullName: 'Louisa Norton',\n          designation: 'UI Designer',\n          duration: '4hr 17m',\n        },\n        {\n          avatar: require('@/assets/images/portrait/small/avatar-s-1.jpg'),\n          userFullName: 'Jayden Duncan',\n          designation: 'Java Developer',\n          duration: '12hr 8m',\n        },\n        {\n          avatar: require('@/assets/images/portrait/small/avatar-s-20.jpg'),\n          userFullName: 'Cynthia Howell',\n          designation: 'Anguler Developer',\n          duration: '3hr 19m',\n        },\n        {\n          avatar: require('@/assets/images/portrait/small/avatar-s-16.jpg'),\n          userFullName: 'Helena Payne',\n          designation: 'Marketing',\n          duration: '9hr 50m',\n        },\n        {\n          avatar: require('@/assets/images/portrait/small/avatar-s-13.jpg'),\n          userFullName: 'Troy Jensen',\n          designation: 'iOS Developer',\n          duration: '4hr 48m',\n        },\n      ],\n      chart: {\n        series: [65],\n        options: {\n          grid: {\n            show: false,\n            padding: {\n              left: -15,\n              right: -15,\n              top: -12,\n              bottom: -15,\n            },\n          },\n          colors: [$themeColors.primary],\n          plotOptions: {\n            radialBar: {\n              hollow: {\n                size: '22%',\n              },\n              track: {\n                background: $trackBgColor,\n              },\n              dataLabels: {\n                showOn: 'always',\n                name: {\n                  show: false,\n                },\n                value: {\n                  show: false,\n                },\n              },\n            },\n          },\n          stroke: {\n            lineCap: 'round',\n          },\n        },\n      },\n    }\n  },\n  created() {\n    for (let i = 0; i < this.employeeData.length; i += 1) {\n      const chartClone = JSON.parse(JSON.stringify(this.chart))\n      chartClone.options.colors[0] = this.chartColor[i]\n      chartClone.series[0] = this.chartSeries[i]\n      this.chartData.push(chartClone)\n    }\n  },\n}\n/* eslint-disable global-require */\n</script>\n"]}]}