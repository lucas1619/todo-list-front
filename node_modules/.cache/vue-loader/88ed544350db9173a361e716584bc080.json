{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/components/overlay/OverlayForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/overlay/OverlayForm.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZScKaW1wb3J0IHsKICBCQnV0dG9uLAogIEJPdmVybGF5LAogIEJGb3JtLAogIEJQcm9ncmVzcywKICBCRm9ybUdyb3VwLAogIEJJbnB1dEdyb3VwLAogIEJJbnB1dEdyb3VwUHJlcGVuZCwKICBCRm9ybUlucHV0LAogIEJGb3JtRmlsZSwKICBCQ2FyZFRleHQsCn0gZnJvbSAnYm9vdHN0cmFwLXZ1ZScKaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZScKaW1wb3J0IHsgY29kZUZvcm0gfSBmcm9tICcuL2NvZGUnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkJ1dHRvbiwKICAgIEJPdmVybGF5LAogICAgQkZvcm0sCiAgICBCUHJvZ3Jlc3MsCiAgICBCRm9ybUdyb3VwLAogICAgQklucHV0R3JvdXAsCiAgICBCQ2FyZENvZGUsCiAgICBCSW5wdXRHcm91cFByZXBlbmQsCiAgICBCRm9ybUlucHV0LAogICAgQkZvcm1GaWxlLAogICAgQkNhcmRUZXh0LAogIH0sCiAgZGlyZWN0aXZlczogewogICAgUmlwcGxlLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGJ1c3k6IGZhbHNlLAogICAgICBwcm9jZXNzaW5nOiBmYWxzZSwKICAgICAgY291bnRlcjogMSwKICAgICAgaW50ZXJ2YWw6IG51bGwsCiAgICAgIGNvZGVGb3JtLAogICAgfQogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMuY2xlYXJJbnRlcnZhbCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICBjbGVhckludGVydmFsKCkgewogICAgICBpZiAodGhpcy5pbnRlcnZhbCkgewogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCkKICAgICAgICB0aGlzLmludGVydmFsID0gbnVsbAogICAgICB9CiAgICB9LAogICAgb25TaG93bigpIHsKICAgICAgLy8gRm9jdXMgdGhlIGRpYWxvZyBwcm9tcHQKICAgICAgdGhpcy4kcmVmcy5kaWFsb2cuZm9jdXMoKQogICAgfSwKICAgIG9uSGlkZGVuKCkgewogICAgICAvLyBJbiB0aGlzIGNhc2UsIHdlIHJldHVybiBmb2N1cyB0byB0aGUgc3VibWl0IGJ1dHRvbgogICAgICAvLyBZb3UgbWF5IG5lZWQgdG8gYWx0ZXIgdGhpcyBiYXNlZCBvbiB5b3VyIGFwcGxpY2F0aW9uIHJlcXVpcmVtZW50cwogICAgICB0aGlzLiRyZWZzLnN1Ym1pdC5mb2N1cygpCiAgICB9LAogICAgb25TdWJtaXQoKSB7CiAgICAgIHRoaXMucHJvY2Vzc2luZyA9IGZhbHNlCiAgICAgIHRoaXMuYnVzeSA9IHRydWUKICAgIH0sCiAgICBvbkNhbmNlbCgpIHsKICAgICAgdGhpcy5idXN5ID0gZmFsc2UKICAgIH0sCiAgICBvbk9LKCkgewogICAgICB0aGlzLmNvdW50ZXIgPSAxCiAgICAgIHRoaXMucHJvY2Vzc2luZyA9IHRydWUKICAgICAgLy8gU2ltdWxhdGUgYW4gYXN5bmMgcmVxdWVzdAogICAgICB0aGlzLmNsZWFySW50ZXJ2YWwoKQogICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgIGlmICh0aGlzLmNvdW50ZXIgPCAyMCkgewogICAgICAgICAgdGhpcy5jb3VudGVyICs9IDEKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5jbGVhckludGVydmFsKCkKICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgICAgICAgICAgIHRoaXMuYnVzeSA9IHRoaXMucHJvY2Vzc2luZyA9IGZhbHNlCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgfSwgMzUwKQogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["OverlayForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OverlayForm.vue","sourceRoot":"src/views/components/overlay","sourcesContent":["<template>\n  <b-card-code title=\"Form confirmation prompt and upload status\">\n    <b-card-text>\n      <span>This example is a bit more complex, but shows the use of </span>\n      <code>no-wrap</code>\n      <span> , and using the </span>\n      <code>overlay</code>\n      <span> slot to present the user with a prompt dialog, and once confirmed it shows a uploading status indicator. This\n        example also demonstrates additional accessibility markup.\n      </span>\n    </b-card-text>\n\n    <div>\n      <b-form\n        class=\"position-relative\"\n        @submit.prevent=\"onSubmit\"\n      >\n        <b-form-group\n          label=\"Name\"\n          label-for=\"form-name\"\n          label-cols-lg=\"2\"\n        >\n          <b-input-group>\n            <b-input-group-prepend is-text>\n              <feather-icon\n                icon=\"UserIcon\"\n              />\n            </b-input-group-prepend>\n            <b-form-input\n              id=\"form-name\"\n              :disabled=\"busy\"\n            />\n          </b-input-group>\n        </b-form-group>\n        <b-form-group\n          label=\"Email\"\n          label-for=\"form-mail\"\n          label-cols-lg=\"2\"\n        >\n          <b-input-group>\n            <b-input-group-prepend is-text>\n              <feather-icon icon=\"MailIcon\" />\n            </b-input-group-prepend>\n            <b-form-input\n              id=\"form-email\"\n              type=\"email\"\n              :disabled=\"busy\"\n            />\n          </b-input-group>\n        </b-form-group>\n        <b-form-group\n          label=\"Image\"\n          label-for=\"form-image\"\n          label-cols-lg=\"2\"\n        >\n          <b-input-group>\n            <b-input-group-prepend is-text>\n              <feather-icon icon=\"ImageIcon\" />\n            </b-input-group-prepend>\n            <b-form-file\n              id=\"form-image\"\n              :disabled=\"busy\"\n              accept=\"image/*\"\n            />\n          </b-input-group>\n        </b-form-group>\n        <div class=\"d-flex justify-content-center\">\n          <b-button\n            ref=\"submit\"\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            variant=\"primary\"\n            type=\"submit\"\n            :disabled=\"busy\"\n          >\n            Submit\n          </b-button>\n        </div>\n\n        <b-overlay\n          :show=\"busy\"\n          no-wrap\n          @shown=\"onShown\"\n          @hidden=\"onHidden\"\n        >\n          <template #overlay>\n            <div\n              v-if=\"processing\"\n              class=\"text-center p-3 bg-primary text-light rounded\"\n            >\n              <feather-icon\n                icon=\"UploadCloudIcon\"\n                size=\"20\"\n              />\n              <div class=\"mb-2\">\n                Processing...\n              </div>\n              <b-progress\n                min=\"1\"\n                max=\"20\"\n                :value=\"counter\"\n                variant=\"success\"\n                height=\"6px\"\n                class=\"mx-n3\"\n              />\n            </div>\n            <div\n              v-else\n              ref=\"dialog\"\n              tabindex=\"-1\"\n              role=\"dialog\"\n              aria-modal=\"false\"\n              aria-labelledby=\"form-confirm-label\"\n              class=\"text-center p-3\"\n            >\n              <b-card-text class=\"font-weight-bolder\">\n                Are you sure?\n              </b-card-text>\n              <div class=\"d-flex\">\n                <b-button\n                  v-ripple.400=\"'rgba(234, 84, 85, 0.15)'\"\n                  variant=\"outline-danger\"\n                  class=\"mr-3\"\n                  @click=\"onCancel\"\n                >\n                  Cancel\n                </b-button>\n                <b-button\n                  v-ripple.400=\"'rgba(40, 199, 111, 0.15)'\"\n                  variant=\"outline-success\"\n                  @click=\"onOK\"\n                >\n                  OK\n                </b-button>\n              </div>\n            </div>\n          </template>\n        </b-overlay>\n      </b-form>\n    </div>\n\n    <template #code>\n      {{ codeForm }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport {\n  BButton,\n  BOverlay,\n  BForm,\n  BProgress,\n  BFormGroup,\n  BInputGroup,\n  BInputGroupPrepend,\n  BFormInput,\n  BFormFile,\n  BCardText,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeForm } from './code'\n\nexport default {\n  components: {\n    BButton,\n    BOverlay,\n    BForm,\n    BProgress,\n    BFormGroup,\n    BInputGroup,\n    BCardCode,\n    BInputGroupPrepend,\n    BFormInput,\n    BFormFile,\n    BCardText,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      busy: false,\n      processing: false,\n      counter: 1,\n      interval: null,\n      codeForm,\n    }\n  },\n  beforeDestroy() {\n    this.clearInterval()\n  },\n  methods: {\n    clearInterval() {\n      if (this.interval) {\n        clearInterval(this.interval)\n        this.interval = null\n      }\n    },\n    onShown() {\n      // Focus the dialog prompt\n      this.$refs.dialog.focus()\n    },\n    onHidden() {\n      // In this case, we return focus to the submit button\n      // You may need to alter this based on your application requirements\n      this.$refs.submit.focus()\n    },\n    onSubmit() {\n      this.processing = false\n      this.busy = true\n    },\n    onCancel() {\n      this.busy = false\n    },\n    onOK() {\n      this.counter = 1\n      this.processing = true\n      // Simulate an async request\n      this.clearInterval()\n      this.interval = setInterval(() => {\n        if (this.counter < 20) {\n          this.counter += 1\n        } else {\n          this.clearInterval()\n          this.$nextTick(() => {\n            // eslint-disable-next-line\n            this.busy = this.processing = false\n          })\n        }\n      }, 350)\n    },\n  },\n}\n</script>\n"]}]}