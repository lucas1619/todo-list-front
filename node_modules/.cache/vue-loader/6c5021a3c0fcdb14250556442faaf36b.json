{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/components/toasts/ToastsAdvance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/toasts/ToastsAdvance.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZScKLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCmltcG9ydCB7IEJCdXR0b24sIEJTcGlubmVyLEJDYXJkVGV4dCB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnCmltcG9ydCBSaXBwbGUgZnJvbSAndnVlLXJpcHBsZS1kaXJlY3RpdmUnCmltcG9ydCB7IGNvZGVBZHZhbmNlIH0gZnJvbSAnLi9jb2RlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkQ29kZSwKICAgIEJCdXR0b24sCiAgICBCQ2FyZFRleHQsCiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgIEJTcGlubmVyLAogIH0sCiAgZGlyZWN0aXZlczogewogICAgUmlwcGxlLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvdW50OiAwLAogICAgICBjb2RlQWR2YW5jZSwKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHBvcFRvYXN0KCkgewogICAgICAvLyBVc2UgYSBzaG9ydGVyIG5hbWUgZm9yIHRoaXMuJGNyZWF0ZUVsZW1lbnQKICAgICAgY29uc3QgaCA9IHRoaXMuJGNyZWF0ZUVsZW1lbnQKICAgICAgLy8gSW5jcmVtZW50IHRoZSB0b2FzdCBjb3VudAogICAgICB0aGlzLmNvdW50ICs9IDEKICAgICAgLy8gQ3JlYXRlIHRoZSBtZXNzYWdlCiAgICAgIGNvbnN0IHZOb2Rlc01zZyA9IGgoJ3AnLCB7IGNsYXNzOiBbJ3RleHQtY2VudGVyJywgJ21iLTAnXSB9LCBbCiAgICAgICAgaCgnYi1zcGlubmVyJywgeyBwcm9wczogeyB0eXBlOiAnZ3JvdycsIHNtYWxsOiB0cnVlIH0gfSksCiAgICAgICAgJyBGbGFzaHkgJywKICAgICAgICBoKCdzdHJvbmcnLCAndG9hc3QnKSwKICAgICAgICBgIG1lc3NhZ2UgIyR7dGhpcy5jb3VudH0gYCwKICAgICAgICBoKCdiLXNwaW5uZXInLCB7IHByb3BzOiB7IHR5cGU6ICdncm93Jywgc21hbGw6IHRydWUgfSB9KSwKICAgICAgXSkKICAgICAgLy8gQ3JlYXRlIHRoZSB0aXRsZQogICAgICBjb25zdCB2Tm9kZXNUaXRsZSA9IGgoJ2RpdicsIHsgY2xhc3M6IFsnZC1mbGV4JywgJ2ZsZXgtZ3Jvdy0xJywgJ2FsaWduLWl0ZW1zLWJhc2VsaW5lJywgJ21yLTInXSB9LCBbCiAgICAgICAgaCgnc3Ryb25nJywgeyBjbGFzczogJ21yLTInIH0sICdUaGUgVGl0bGUnKSwKICAgICAgICBoKCdzbWFsbCcsIHsgY2xhc3M6ICdtbC1hdXRvIGZvbnQtaXRhbGljcycgfSwgJzUgbWludXRlcyBhZ28nKSwKICAgICAgXSkKICAgICAgLy8gUGFzcyB0aGUgVk5vZGVzIGFzIGFuIGFycmF5IGZvciBtZXNzYWdlIGFuZCB0aXRsZQogICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KFt2Tm9kZXNNc2ddLCB7CiAgICAgICAgdGl0bGU6IFt2Tm9kZXNUaXRsZV0sCiAgICAgICAgc29saWQ6IGZhbHNlLAogICAgICAgIHZhcmlhbnQ6ICdpbmZvJywKICAgICAgfSkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["ToastsAdvance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToastsAdvance.vue","sourceRoot":"src/views/components/toasts","sourcesContent":["<template>\n  <b-card-code title=\"Advanced usage\">\n    <b-card-text>\n      <span>When using the </span>\n      <code>this.$bvToast.toast(...)</code>\n      <span>\n        method for generating toasts, you may want the toast content to be more than just a string message. As mentioned\n        in the Toasts on demand section above, you can pass arrays of\n      </span>\n      <code>VNodes</code>\n      <span> as the message and title for more complex content.</span>\n    </b-card-text>\n\n    <b-button\n      v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n      variant=\"outline-primary\"\n      @click=\"popToast\"\n    >\n      Show Toast with custom content\n    </b-button>\n\n    <template #code>\n      {{ codeAdvance }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\n// eslint-disable-next-line\nimport { BButton, BSpinner,BCardText } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeAdvance } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BButton,\n    BCardText,\n    // eslint-disable-next-line\n    BSpinner,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      count: 0,\n      codeAdvance,\n    }\n  },\n  methods: {\n    popToast() {\n      // Use a shorter name for this.$createElement\n      const h = this.$createElement\n      // Increment the toast count\n      this.count += 1\n      // Create the message\n      const vNodesMsg = h('p', { class: ['text-center', 'mb-0'] }, [\n        h('b-spinner', { props: { type: 'grow', small: true } }),\n        ' Flashy ',\n        h('strong', 'toast'),\n        ` message #${this.count} `,\n        h('b-spinner', { props: { type: 'grow', small: true } }),\n      ])\n      // Create the title\n      const vNodesTitle = h('div', { class: ['d-flex', 'flex-grow-1', 'align-items-baseline', 'mr-2'] }, [\n        h('strong', { class: 'mr-2' }, 'The Title'),\n        h('small', { class: 'ml-auto font-italics' }, '5 minutes ago'),\n      ])\n      // Pass the VNodes as an array for message and title\n      this.$bvToast.toast([vNodesMsg], {\n        title: [vNodesTitle],\n        solid: false,\n        variant: 'info',\n      })\n    },\n  },\n}\n</script>\n"]}]}