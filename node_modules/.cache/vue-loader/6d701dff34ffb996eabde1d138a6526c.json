{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/forms/form-element/autosuggest/AutoSuggestAjax.vue?vue&type=style&index=0&id=4dbc858e&lang=scss&scoped=true&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/forms/form-element/autosuggest/AutoSuggestAjax.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/css-loader/dist/cjs.js","mtime":1646760975182},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1646760975954},{"path":"/home/lucas/Desktop/test/node_modules/postcss-loader/src/index.js","mtime":1646760975438},{"path":"/home/lucas/Desktop/test/node_modules/sass-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpwcmV7CiAgbWluLWhlaWdodDogMjk1cHg7CiAgcGFkZGluZzogMS41cmVtOwogIG1hcmdpbi1ib3R0b206IDA7CiAgYm9yZGVyLXJhZGl1czogLjVyZW07Cn0K"},{"version":3,"sources":["AutoSuggestAjax.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA;AACA;AACA;AACA","file":"AutoSuggestAjax.vue","sourceRoot":"src/views/forms/form-element/autosuggest","sourcesContent":["<template>\n  <b-card-code title=\"Ajax\">\n    <vue-autosuggest\n      ref=\"autocomplete\"\n      v-model=\"query\"\n      :suggestions=\"suggestions\"\n      :input-props=\"inputProps\"\n      :section-configs=\"sectionConfigs\"\n      :render-suggestion=\"renderSuggestion\"\n      :get-suggestion-value=\"getSuggestionValue\"\n      @input=\"fetchResults\"\n    />\n\n    <b-card-text class=\"mt-1\">\n      Selected element (object):\n    </b-card-text>\n    <b-card\n      class=\"border\"\n      no-body\n    >\n      <pre>{{ JSON.stringify(selected, null, 4) }}</pre>\n    </b-card>\n\n    <template #code>\n      {{ codeAjax }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\n/* eslint-disable vue/no-unused-components */\n/* eslint no-unused-expressions: [\"error\", { \"allowShortCircuit\": true }] */\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport { BCard, BCardText, BAvatar } from 'bootstrap-vue'\nimport { VueAutosuggest } from 'vue-autosuggest'\nimport axios from 'axios'\nimport { codeAjax } from './code'\n\nexport default {\n  components: {\n    VueAutosuggest,\n    BCardCode,\n    BCard,\n    BCardText,\n    BAvatar,\n  },\n  data() {\n    return {\n      codeAjax,\n      query: '',\n      results: [],\n      timeout: null,\n      selected: null,\n      debounceMilliseconds: 250,\n      usersUrl: 'https://jsonplaceholder.typicode.com/users',\n      photosUrl: 'https://jsonplaceholder.typicode.com/photos',\n      inputProps: {\n        id: 'autosuggest__input_ajax',\n        placeholder: 'Do you feel lucky, punk?',\n        class: 'form-control',\n        name: 'ajax',\n      },\n      suggestions: [],\n      sectionConfigs: {\n        destinations: {\n          limit: 6,\n          label: 'Destination',\n          onSelected: selected => {\n            this.selected = selected.item\n          },\n        },\n        hotels: {\n          limit: 6,\n          label: 'Hotels',\n          onSelected: selected => {\n            this.selected = selected.item\n          },\n        },\n      },\n    }\n  },\n  methods: {\n    fetchResults() {\n      const { query } = this\n\n      clearTimeout(this.timeout)\n      this.timeout = setTimeout(() => {\n        const photosPromise = axios.get(this.photosUrl)\n        const usersPromise = axios.get(this.usersUrl)\n\n        Promise.all([photosPromise, usersPromise]).then(values => {\n          this.suggestions = []\n          this.selected = null\n\n          const photos = this.filterResults(values[0].data, query, 'title')\n          const users = this.filterResults(values[1].data, query, 'name')\n          users.length && this.suggestions.push({ name: 'destinations', data: users })\n          photos.length && this.suggestions.push({ name: 'hotels', data: photos })\n        })\n      }, this.debounceMilliseconds)\n    },\n    filterResults(data, text, field) {\n      return data.filter(item => {\n        if (item[field].toLowerCase().indexOf(text.toLowerCase()) > -1) {\n          return item[field]\n        }\n        return false\n      }).sort()\n    },\n    renderSuggestion(suggestion) {\n      if (suggestion.name === 'hotels') {\n        const image = suggestion.item\n        return (\n          <div class=\"d-flex\">\n            <div>\n              <b-avatar src={image.thumbnailUrl} class=\"mr-50\"></b-avatar>\n            </div>\n            <div>\n              <span>{image.title}</span>\n            </div>\n          </div>\n        )\n      }\n      return suggestion.item.name\n    },\n    getSuggestionValue(suggestion) {\n      const { name, item } = suggestion\n      return name === 'hotels' ? item.title : item.name\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\npre{\n  min-height: 295px;\n  padding: 1.5rem;\n  margin-bottom: 0;\n  border-radius: .5rem;\n}\n</style>\n"]}]}