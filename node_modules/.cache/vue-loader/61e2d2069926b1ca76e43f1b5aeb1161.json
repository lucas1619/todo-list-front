{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/components/modal/ModalPrevent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/modal/ModalPrevent.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgQkJ1dHRvbiwgQkZvcm1Hcm91cCwgQkZvcm1JbnB1dCwgQk1vZGFsLCBWQk1vZGFsLCBCQ2FyZFRleHQsIEJMaXN0R3JvdXAsIEJMaXN0R3JvdXBJdGVtLAp9IGZyb20gJ2Jvb3RzdHJhcC12dWUnCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZScKaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZScKaW1wb3J0IHsgY29kZVByZXZlbnQgfSBmcm9tICcuL2NvZGUnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkNhcmRDb2RlLAogICAgQkJ1dHRvbiwKICAgIEJGb3JtR3JvdXAsCiAgICBCQ2FyZFRleHQsCiAgICBCRm9ybUlucHV0LAogICAgQkxpc3RHcm91cCwKICAgIEJMaXN0R3JvdXBJdGVtLAogICAgQk1vZGFsLAogIH0sCiAgZGlyZWN0aXZlczogewogICAgJ2ItbW9kYWwnOiBWQk1vZGFsLAogICAgUmlwcGxlLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvZGVQcmV2ZW50LAogICAgICBuYW1lOiAnJywKICAgICAgbmFtZVN0YXRlOiBudWxsLAogICAgICBzdWJtaXR0ZWROYW1lczogW10sCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGVja0Zvcm1WYWxpZGl0eSgpIHsKICAgICAgY29uc3QgdmFsaWQgPSB0aGlzLiRyZWZzLmZvcm0uY2hlY2tWYWxpZGl0eSgpCiAgICAgIHRoaXMubmFtZVN0YXRlID0gdmFsaWQKICAgICAgcmV0dXJuIHZhbGlkCiAgICB9LAogICAgcmVzZXRNb2RhbCgpIHsKICAgICAgdGhpcy5uYW1lID0gJycKICAgICAgdGhpcy5uYW1lU3RhdGUgPSBudWxsCiAgICB9LAogICAgaGFuZGxlT2soYnZNb2RhbEV2dCkgewogICAgICAvLyBQcmV2ZW50IG1vZGFsIGZyb20gY2xvc2luZwogICAgICBidk1vZGFsRXZ0LnByZXZlbnREZWZhdWx0KCkKICAgICAgLy8gVHJpZ2dlciBzdWJtaXQgaGFuZGxlcgogICAgICB0aGlzLmhhbmRsZVN1Ym1pdCgpCiAgICB9LAogICAgaGFuZGxlU3VibWl0KCkgewogICAgICAvLyBFeGl0IHdoZW4gdGhlIGZvcm0gaXNuJ3QgdmFsaWQKICAgICAgaWYgKCF0aGlzLmNoZWNrRm9ybVZhbGlkaXR5KCkpIHsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICAvLyBQdXNoIHRoZSBuYW1lIHRvIHN1Ym1pdHRlZCBuYW1lcwogICAgICB0aGlzLnN1Ym1pdHRlZE5hbWVzLnB1c2godGhpcy5uYW1lKQogICAgICAvLyBIaWRlIHRoZSBtb2RhbCBtYW51YWxseQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy4kcmVmc1snbXktbW9kYWwnXS50b2dnbGUoJyN0b2dnbGUtYnRuJykKICAgICAgfSkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["ModalPrevent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModalPrevent.vue","sourceRoot":"src/views/components/modal","sourcesContent":["<template>\n  <b-card-code title=\"Prevent closing\">\n    <b-card-text>\n      <span>To prevent </span>\n      <code>&lt;b-modal&gt;</code>\n      <span> from closing (for example when validation fails). you can call the </span>\n      <code>.preventDefault()</code>\n      <span> method of the event object passed to your </span>\n      <code>ok</code>\n      <span> (OK button), </span>\n      <code>cancel</code>\n      <span> (Cancel button), </span>\n      <code>close</code>\n      <span> (modal header close button) and </span>\n      <code>hide</code>\n      <span> event handlers.</span>\n    </b-card-text>\n\n    <!-- button -->\n    <b-button\n      id=\"toggle-btn\"\n      v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n      v-b-modal.modal-prevent-closing\n      variant=\"outline-primary\"\n    >\n      Open Modal\n    </b-button>\n\n    <!-- modal data -->\n    <div class=\"mt-2\">\n      <p>Submitted Names:</p>\n      <div v-if=\"submittedNames.length === 0\">\n        --\n      </div>\n      <b-list-group\n        v-else\n      >\n        <b-list-group-item\n          v-for=\"(data,index) in submittedNames\"\n          :key=\"index\"\n        >\n          {{ data }}\n        </b-list-group-item>\n      </b-list-group>\n    </div>\n\n    <!-- modal -->\n    <b-modal\n      id=\"modal-prevent-closing\"\n      ref=\"my-modal\"\n      title=\"Submit Your Name\"\n      ok-title=\"Submit\"\n      cancel-variant=\"outline-secondary\"\n      @show=\"resetModal\"\n      @hidden=\"resetModal\"\n      @ok=\"handleOk\"\n    >\n      <form\n        ref=\"form\"\n        @submit.stop.prevent=\"handleSubmit\"\n      >\n        <b-form-group\n          :state=\"nameState\"\n          label=\"Name\"\n          label-for=\"name-input\"\n          invalid-feedback=\"Name is required\"\n        >\n          <b-form-input\n            id=\"name-input\"\n            v-model=\"name\"\n            :state=\"nameState\"\n            required\n          />\n        </b-form-group>\n      </form>\n    </b-modal>\n\n    <template #code>\n      {{ codePrevent }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport {\n  BButton, BFormGroup, BFormInput, BModal, VBModal, BCardText, BListGroup, BListGroupItem,\n} from 'bootstrap-vue'\nimport BCardCode from '@core/components/b-card-code'\nimport Ripple from 'vue-ripple-directive'\nimport { codePrevent } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BButton,\n    BFormGroup,\n    BCardText,\n    BFormInput,\n    BListGroup,\n    BListGroupItem,\n    BModal,\n  },\n  directives: {\n    'b-modal': VBModal,\n    Ripple,\n  },\n  data() {\n    return {\n      codePrevent,\n      name: '',\n      nameState: null,\n      submittedNames: [],\n    }\n  },\n  methods: {\n    checkFormValidity() {\n      const valid = this.$refs.form.checkValidity()\n      this.nameState = valid\n      return valid\n    },\n    resetModal() {\n      this.name = ''\n      this.nameState = null\n    },\n    handleOk(bvModalEvt) {\n      // Prevent modal from closing\n      bvModalEvt.preventDefault()\n      // Trigger submit handler\n      this.handleSubmit()\n    },\n    handleSubmit() {\n      // Exit when the form isn't valid\n      if (!this.checkFormValidity()) {\n        return\n      }\n      // Push the name to submitted names\n      this.submittedNames.push(this.name)\n      // Hide the modal manually\n      this.$nextTick(() => {\n        this.$refs['my-modal'].toggle('#toggle-btn')\n      })\n    },\n  },\n}\n</script>\n"]}]}