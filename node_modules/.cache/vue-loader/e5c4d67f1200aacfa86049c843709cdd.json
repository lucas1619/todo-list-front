{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/extensions/slider/SliderBehavior.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/extensions/slider/SliderBehavior.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IEJDYXJkVGV4dCB9IGZyb20gJ2Jvb3RzdHJhcC12dWUnCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZS9CQ2FyZENvZGUudnVlJwppbXBvcnQgVnVlU2xpZGVyIGZyb20gJ3Z1ZS1zbGlkZXItY29tcG9uZW50JwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZS9pbmRleCcKaW1wb3J0IHsgY29kZWJlaGF2aW9yIH0gZnJvbSAnLi9jb2RlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZVNsaWRlciwKICAgIEJDYXJkVGV4dCwKICAgIEJDYXJkQ29kZSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlYmVoYXZpb3IsCiAgICAgIHZhbHVlOiAxMCwKICAgICAgdmFsdWUxOiAzMCwKICAgICAgdmFsdWUyOiA1MCwKICAgICAgdmFsdWUzOiBbMTAsIDQwXSwKICAgICAgdmFsdWU0OiBbMTAsIDUwXSwKICAgICAgZGlyOiAnbHRyJywKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBkaXJlY3Rpb24oKSB7CiAgICAgIGlmIChzdG9yZS5zdGF0ZS5hcHBDb25maWcuaXNSVEwpIHsKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgdnVlL25vLXNpZGUtZWZmZWN0cy1pbi1jb21wdXRlZC1wcm9wZXJ0aWVzCiAgICAgICAgdGhpcy5kaXIgPSAncnRsJwogICAgICAgIHJldHVybiB0aGlzLmRpcgogICAgICB9CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB2dWUvbm8tc2lkZS1lZmZlY3RzLWluLWNvbXB1dGVkLXByb3BlcnRpZXMKICAgICAgdGhpcy5kaXIgPSAnbHRyJwogICAgICByZXR1cm4gdGhpcy5kaXIKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["SliderBehavior.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SliderBehavior.vue","sourceRoot":"src/views/extensions/slider","sourcesContent":["<template>\n  <b-card-code title=\"Slider behavior\">\n\n    <!-- default slider -->\n    <h6>Default</h6>\n    <b-card-text>It is the default behavior of slider.</b-card-text>\n\n    <!-- slider -->\n    <vue-slider\n      v-model=\"value\"\n      :direction=\"direction\"\n    />\n\n    <!-- drang and click slider -->\n    <h6 class=\"mt-2\">\n      Drag on Click\n    </h6>\n    <b-card-text>\n      <span>When </span>\n      <code>drag-on-click</code>\n      <span> is set to </span>\n      <code>true</code>\n      <span>, can drag the slider directly when pressing the process.</span>\n    </b-card-text>\n\n    <!-- slider -->\n    <vue-slider\n      v-model=\"value1\"\n      :direction=\"direction\"\n      :drag-on-click=\"true\"\n    />\n\n    <!-- process not filled slider -->\n    <h6 class=\"mt-2\">\n      Process not filled\n    </h6>\n    <b-card-text>\n      <span>User </span>\n      <code>process</code>\n      <span> prop false for unfill the processbar.</span>\n    </b-card-text>\n\n    <!-- slider -->\n    <vue-slider\n      v-model=\"value2\"\n      :direction=\"direction\"\n      :process=\"false\"\n    />\n\n    <!-- min and max slider -->\n    <h6 class=\"mt-2\">\n      Min & Max\n    </h6>\n    <b-card-text>\n      <span>Use </span>\n      <code>min-range</code>\n      <span> and </span>\n      <code>max-range</code>\n      <span> prop to limit the slider.</span>\n    </b-card-text>\n\n    <!-- slider -->\n    <vue-slider\n      v-model=\"value3\"\n      :min-range=\"10\"\n      :direction=\"direction\"\n      :max-range=\"50\"\n    />\n\n    <!-- fixed slider  -->\n    <h6 class=\"mt-2\">\n      Fixed\n    </h6>\n    <b-card-text>\n      <span>Use </span>]\n      <code>fixed</code>\n      <span> prop to fixed the slider.</span>\n    </b-card-text>\n\n    <!-- slider -->\n    <vue-slider\n      v-model=\"value4\"\n      :direction=\"direction\"\n      :fixed=\"true\"\n    />\n\n    <template #code>\n      {{ codebehavior }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport { BCardText } from 'bootstrap-vue'\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport VueSlider from 'vue-slider-component'\nimport store from '@/store/index'\nimport { codebehavior } from './code'\n\nexport default {\n  components: {\n    VueSlider,\n    BCardText,\n    BCardCode,\n  },\n  data() {\n    return {\n      codebehavior,\n      value: 10,\n      value1: 30,\n      value2: 50,\n      value3: [10, 40],\n      value4: [10, 50],\n      dir: 'ltr',\n    }\n  },\n  computed: {\n    direction() {\n      if (store.state.appConfig.isRTL) {\n        // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n        this.dir = 'rtl'\n        return this.dir\n      }\n      // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n      this.dir = 'ltr'\n      return this.dir\n    },\n  },\n}\n</script>\n"]}]}