{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/forms/form-element/form-input-mask/FormInputMask.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/forms/form-element/form-input-mask/FormInputMask.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZS9CQ2FyZENvZGUudnVlJwppbXBvcnQgewogIEJSb3csIEJDb2wsIEJGb3JtR3JvdXAsIEJJbnB1dEdyb3VwUHJlcGVuZCwgQklucHV0R3JvdXAsCn0gZnJvbSAnYm9vdHN0cmFwLXZ1ZScKaW1wb3J0IENsZWF2ZSBmcm9tICd2dWUtY2xlYXZlLWNvbXBvbmVudCcKLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1leHRyYW5lb3VzLWRlcGVuZGVuY2llcwppbXBvcnQgJ2NsZWF2ZS5qcy9kaXN0L2FkZG9ucy9jbGVhdmUtcGhvbmUudXMnCmltcG9ydCB7IGNvZGVNYXNrIH0gZnJvbSAnLi9jb2RlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkQ29kZSwKICAgIEJGb3JtR3JvdXAsCiAgICBCSW5wdXRHcm91cFByZXBlbmQsCiAgICBCSW5wdXRHcm91cCwKICAgIENsZWF2ZSwKICAgIEJSb3csCiAgICBCQ29sLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHsKICAgICAgICBjYXJkTnVtYmVyOiBudWxsLAogICAgICAgIGRhdGU6IG51bGwsCiAgICAgICAgcGhvbmU6IG51bGwsCiAgICAgIH0sCiAgICAgIG9wdGlvbnM6IHsKICAgICAgICBjcmVkaXRDYXJkOiB7CiAgICAgICAgICBjcmVkaXRDYXJkOiB0cnVlLAogICAgICAgIH0sCiAgICAgICAgZGF0ZTogewogICAgICAgICAgZGF0ZTogdHJ1ZSwKICAgICAgICAgIGRlbGltaXRlcjogJy0nLAogICAgICAgICAgZGF0ZVBhdHRlcm46IFsnWScsICdtJywgJ2QnXSwKICAgICAgICB9LAogICAgICAgIHBob25lOiB7CiAgICAgICAgICBwaG9uZTogdHJ1ZSwKICAgICAgICAgIHBob25lUmVnaW9uQ29kZTogJ1VTJywKICAgICAgICB9LAogICAgICAgIHRpbWU6IHsKICAgICAgICAgIHRpbWU6IHRydWUsCiAgICAgICAgICB0aW1lUGF0dGVybjogWydoJywgJ20nLCAncyddLAogICAgICAgIH0sCiAgICAgICAgbnVtYmVyOiB7CiAgICAgICAgICBudW1lcmFsOiB0cnVlLAogICAgICAgICAgbnVtZXJhbFRob3VzYW5kc0dyb3VwU3R5bGU6ICd0aG91c2FuZCcsCiAgICAgICAgfSwKICAgICAgICBibG9jazogewogICAgICAgICAgYmxvY2tzOiBbNCwgMywgM10sCiAgICAgICAgICB1cHBlcmNhc2U6IHRydWUsCiAgICAgICAgfSwKICAgICAgICBkZWxpbWl0ZXI6IHsKICAgICAgICAgIGRlbGltaXRlcjogJ8K3JywKICAgICAgICAgIGJsb2NrczogWzMsIDMsIDNdLAogICAgICAgICAgdXBwZXJjYXNlOiB0cnVlLAogICAgICAgIH0sCiAgICAgICAgY3VzdG9tRGVsaW1pdGVyOiB7CiAgICAgICAgICBkZWxpbWl0ZXJzOiBbJy4nLCAnLicsICctJ10sCiAgICAgICAgICBibG9ja3M6IFszLCAzLCAzLCAyXSwKICAgICAgICAgIHVwcGVyY2FzZTogdHJ1ZSwKICAgICAgICB9LAogICAgICAgIHByZWZpeDogewogICAgICAgICAgcHJlZml4OiAnKzYzJywKICAgICAgICAgIGJsb2NrczogWzMsIDMsIDMsIDRdLAogICAgICAgICAgdXBwZXJjYXNlOiB0cnVlLAogICAgICAgIH0sCiAgICAgIH0sCiAgICAgIGNvZGVNYXNrLAogICAgfQogIH0sCn0K"},{"version":3,"sources":["FormInputMask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormInputMask.vue","sourceRoot":"src/views/forms/form-element/form-input-mask","sourcesContent":["<template>\n  <b-card-code title=\"Input Mask\">\n    <b-row>\n\n      <!-- credit card -->\n      <b-col\n        md=\"6\"\n        xl=\"4\"\n      >\n        <b-form-group\n          label=\"Credit Card\"\n          label-for=\"cardNumber\"\n        >\n          <cleave\n            id=\"cardNumber\"\n            v-model=\"form.cardNumber\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.creditCard\"\n            placeholder=\"0000 0000 0000 0000\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <!-- phone number -->\n      <b-col\n        md=\"6\"\n        xl=\"4\"\n      >\n        <b-form-group\n          label=\"Phone Number\"\n          label-for=\"phone\"\n        >\n          <b-input-group>\n            <b-input-group-prepend is-text>\n              US (+1)\n            </b-input-group-prepend>\n            <cleave\n              id=\"phone\"\n              v-model=\"form.phone\"\n              class=\"form-control\"\n              :raw=\"false\"\n              :options=\"options.phone\"\n              placeholder=\"1234 567 8900\"\n            />\n          </b-input-group>\n\n        </b-form-group>\n      </b-col>\n\n      <!-- date -->\n      <b-col\n        md=\"6\"\n        xl=\"4\"\n      >\n        <b-form-group\n          label=\"Date\"\n          label-for=\"date\"\n        >\n          <cleave\n            id=\"date\"\n            v-model=\"form.date\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.date\"\n            placeholder=\"YYYY-MM-DD\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <!-- time -->\n      <b-col\n        md=\"6\"\n        xl=\"4\"\n      >\n        <b-form-group\n          label=\"Time\"\n          label-for=\"time\"\n        >\n          <cleave\n            id=\"time\"\n            v-model=\"form.time\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.time\"\n            placeholder=\"hh:mm:ss\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <!-- Numeral Formatting -->\n      <b-col\n        md=\"6\"\n        xl=\"4\"\n      >\n        <b-form-group\n          label=\"Numeral Formatting\"\n          label-for=\"number\"\n        >\n          <cleave\n            id=\"number\"\n            v-model=\"form.number\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.number\"\n            placeholder=\"10,000\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <!-- block -->\n      <b-col\n        md=\"6\"\n        xl=\"4\"\n      >\n        <b-form-group\n          label=\"Blocks\"\n          label-for=\"block\"\n        >\n          <cleave\n            id=\"block\"\n            v-model=\"form.block\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.block\"\n            placeholder=\"Block [4,3,3]\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <!-- delimiters -->\n      <b-col\n        md=\"6\"\n        xl=\"4\"\n      >\n        <b-form-group\n          label=\"Delimiters\"\n          label-for=\"delimiter\"\n        >\n          <cleave\n            id=\"delimiter\"\n            v-model=\"form.delimiter\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.delimiter\"\n            placeholder=\"Delimiter: '.'\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <!-- Custom Delimiters -->\n      <b-col\n        md=\"6\"\n        xl=\"4\"\n      >\n        <b-form-group\n          label=\"Custom Delimiters\"\n          label-for=\"customDelimiter\"\n        >\n          <cleave\n            id=\"customDelimiter\"\n            v-model=\"form.customDelimiter\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.customDelimiter\"\n            placeholder=\"Delimiter: ['.', '.', '-']\"\n          />\n        </b-form-group>\n      </b-col>\n\n      <!-- prefix -->\n      <b-col\n        md=\"6\"\n        xl=\"4\"\n      >\n        <b-form-group\n          label=\"Prefix\"\n          label-for=\"prefix\"\n        >\n          <cleave\n            id=\"prefix\"\n            v-model=\"form.prefix\"\n            class=\"form-control\"\n            :raw=\"false\"\n            :options=\"options.prefix\"\n          />\n        </b-form-group>\n      </b-col>\n    </b-row>\n\n    <template #code>\n      {{ codeMask }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport {\n  BRow, BCol, BFormGroup, BInputGroupPrepend, BInputGroup,\n} from 'bootstrap-vue'\nimport Cleave from 'vue-cleave-component'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'cleave.js/dist/addons/cleave-phone.us'\nimport { codeMask } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BFormGroup,\n    BInputGroupPrepend,\n    BInputGroup,\n    Cleave,\n    BRow,\n    BCol,\n  },\n  data() {\n    return {\n      form: {\n        cardNumber: null,\n        date: null,\n        phone: null,\n      },\n      options: {\n        creditCard: {\n          creditCard: true,\n        },\n        date: {\n          date: true,\n          delimiter: '-',\n          datePattern: ['Y', 'm', 'd'],\n        },\n        phone: {\n          phone: true,\n          phoneRegionCode: 'US',\n        },\n        time: {\n          time: true,\n          timePattern: ['h', 'm', 's'],\n        },\n        number: {\n          numeral: true,\n          numeralThousandsGroupStyle: 'thousand',\n        },\n        block: {\n          blocks: [4, 3, 3],\n          uppercase: true,\n        },\n        delimiter: {\n          delimiter: '·',\n          blocks: [3, 3, 3],\n          uppercase: true,\n        },\n        customDelimiter: {\n          delimiters: ['.', '.', '-'],\n          blocks: [3, 3, 3, 2],\n          uppercase: true,\n        },\n        prefix: {\n          prefix: '+63',\n          blocks: [3, 3, 3, 4],\n          uppercase: true,\n        },\n      },\n      codeMask,\n    }\n  },\n}\n</script>\n"]}]}