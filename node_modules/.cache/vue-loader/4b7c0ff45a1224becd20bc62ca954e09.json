{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/forms/form-validation/FormValidationPlaceholderArguments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/forms/form-validation/FormValidationPlaceholderArguments.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZScKaW1wb3J0IHsgVmFsaWRhdGlvblByb3ZpZGVyLCBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICd2ZWUtdmFsaWRhdGUnCmltcG9ydCB7CiAgQkZvcm1JbnB1dCwgQkZvcm1Hcm91cCwgQkZvcm0sIEJSb3csIEJDb2wsIEJCdXR0b24sIEJDYXJkVGV4dCwKfSBmcm9tICdib290c3RyYXAtdnVlJwppbXBvcnQgewogIHJlcXVpcmVkLCBtaW4sIGNvbmZpcm1lZCwKfSBmcm9tICdAdmFsaWRhdGlvbnMnCmltcG9ydCB7IGNvZGVQbGFjZWhvbGRlckFyZ3VtZW50IH0gZnJvbSAnLi9jb2RlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkQ29kZSwKICAgIFZhbGlkYXRpb25Qcm92aWRlciwKICAgIFZhbGlkYXRpb25PYnNlcnZlciwKICAgIEJDYXJkVGV4dCwKICAgIEJGb3JtSW5wdXQsCiAgICBCRm9ybUdyb3VwLAogICAgQkZvcm0sCiAgICBCUm93LAogICAgQkNvbCwKICAgIEJCdXR0b24sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGFzc1ZhbHVlOiAnJywKICAgICAgdXNlcm5hbWU6ICcnLAogICAgICByZXF1aXJlZCwKICAgICAgbWluLAogICAgICBjb25maXJtZWQsCiAgICAgIGNvZGVQbGFjZWhvbGRlckFyZ3VtZW50LAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdmFsaWRhdGlvbkZvcm0oKSB7CiAgICAgIHRoaXMuJHJlZnMuc2ltcGxlUnVsZXMudmFsaWRhdGUoKS50aGVuKHN1Y2Nlc3MgPT4gewogICAgICAgIGlmIChzdWNjZXNzKSB7CiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgIGFsZXJ0KCdwYXNzd29yZCByZXNldCEnKQogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["FormValidationPlaceholderArguments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormValidationPlaceholderArguments.vue","sourceRoot":"src/views/forms/form-validation","sourcesContent":["<template>\n  <b-card-code title=\"Arguments Placeholders\">\n    <b-card-text>vee-validate interpolation can parse placeholders that match the rule parameters, so to define such a message for the min rule you can use a {length} placeholder in the error message like this:</b-card-text>\n\n    <!-- form -->\n    <validation-observer ref=\"simpleRules\">\n      <b-form>\n        <b-row>\n\n          <!-- password -->\n          <b-col cols=\"12\">\n            <b-form-group\n              label=\"Password\"\n              label-for=\"a-password\"\n            >\n              <validation-provider\n                #default=\"{ errors }\"\n                name=\"Password\"\n                vid=\"Password\"\n                rules=\"required|min:8|password\"\n              >\n                <b-form-input\n                  id=\"a-password\"\n                  v-model=\"username\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!-- confirm password -->\n          <b-col cols=\"12\">\n            <b-form-group\n              label=\"Confirm Password\"\n              label-for=\"ac-password\"\n            >\n              <validation-provider\n                #default=\"{ errors }\"\n                name=\"Confirm Password\"\n                rules=\"required|confirmed:Password\"\n              >\n\n                <b-form-input\n                  id=\"ac-password\"\n                  v-model=\"passValue\"\n                  :state=\"errors.length > 0 ? false:null\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                />\n                <small class=\"text-danger\">{{ errors[0] }}</small>\n              </validation-provider>\n            </b-form-group>\n          </b-col>\n\n          <!-- reset button -->\n          <b-col cols=\"12\">\n            <b-button\n              variant=\"primary\"\n              type=\"submit\"\n              @click.prevent=\"validationForm\"\n            >\n              Reset\n            </b-button>\n          </b-col>\n        </b-row>\n      </b-form>\n    </validation-observer>\n\n    <template #code>\n      {{ codePlaceholderArgument }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport {\n  BFormInput, BFormGroup, BForm, BRow, BCol, BButton, BCardText,\n} from 'bootstrap-vue'\nimport {\n  required, min, confirmed,\n} from '@validations'\nimport { codePlaceholderArgument } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    ValidationProvider,\n    ValidationObserver,\n    BCardText,\n    BFormInput,\n    BFormGroup,\n    BForm,\n    BRow,\n    BCol,\n    BButton,\n  },\n  data() {\n    return {\n      passValue: '',\n      username: '',\n      required,\n      min,\n      confirmed,\n      codePlaceholderArgument,\n    }\n  },\n  methods: {\n    validationForm() {\n      this.$refs.simpleRules.validate().then(success => {\n        if (success) {\n          // eslint-disable-next-line\n          alert('password reset!')\n        }\n      })\n    },\n  },\n}\n</script>\n"]}]}