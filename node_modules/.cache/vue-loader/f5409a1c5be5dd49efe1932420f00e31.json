{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/pages/Knowledge-base/KnowledgeBaseCategory.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/pages/Knowledge-base/KnowledgeBaseCategory.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/css-loader/dist/cjs.js","mtime":1646760975182},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1646760975954},{"path":"/home/lucas/Desktop/test/node_modules/postcss-loader/src/index.js","mtime":1646760975438},{"path":"/home/lucas/Desktop/test/node_modules/sass-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnQGNvcmUvc2Nzcy92dWUvcGFnZXMvcGFnZS1rbm93bGVkZ2UtYmFzZS5zY3NzJzsK"},{"version":3,"sources":["KnowledgeBaseCategory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA","file":"KnowledgeBaseCategory.vue","sourceRoot":"src/views/pages/Knowledge-base","sourcesContent":["<template>\n  <div>\n    <!-- search input -->\n    <section id=\"kb-category-search\">\n      <b-card\n        no-body\n        class=\"knowledge-base-bg text-center\"\n        :style=\"{backgroundImage: `url(${require('@/assets/images/banner/banner.png')})`}\"\n      >\n        <b-card-body class=\"card-body\">\n          <h2 class=\"text-primary\">\n            Dedicated Source Used on Website\n          </h2>\n          <b-card-text class=\"mb-2\">\n            <span>Popular searches: </span>\n            <span class=\"font-weight-bolder\">Sales automation, Email marketing</span>\n          </b-card-text>\n\n          <!-- form -->\n          <b-form class=\"kb-search-input\">\n            <b-input-group class=\"input-group-merge\">\n              <b-input-group-prepend is-text>\n                <feather-icon icon=\"SearchIcon\" />\n              </b-input-group-prepend>\n              <b-form-input\n                id=\"searchbar\"\n                v-model=\"knowledgeBaseSearchQuery\"\n                placeholder=\"Ask a question....\"\n              />\n            </b-input-group>\n          </b-form>\n          <!-- form -->\n        </b-card-body>\n      </b-card>\n    </section>\n    <!--/ search input -->\n\n    <div id=\"knowledge-base-category\">\n      <b-row class=\"match-height\">\n        <b-col\n          v-for=\"(data,index) in filteredKB\"\n          :key=\"index\"\n          md=\"4\"\n          sm=\"6\"\n        >\n          <b-card>\n            <h6 class=\"kb-title\">\n              <feather-icon\n                :icon=\"data.icon\"\n                size=\"20\"\n                class=\"mr-50\"\n                :class=\"data.iconColor\"\n              />{{ data.title }} ({{ data.questions.length }})\n            </h6>\n            <b-list-group class=\"list-group-circle mt-2\">\n              <b-list-group-item\n                v-for=\"(que) in data.questions\"\n                :key=\"que.question\"\n                class=\"text-body\"\n                :to=\"{ name: 'pages-knowledge-base-question', params: { category: $route.params.category, slug: que.slug } }\"\n              >\n                {{ que.question }}\n              </b-list-group-item>\n            </b-list-group>\n          </b-card>\n        </b-col>\n\n        <!-- no result found -->\n        <b-col\n          v-show=\"!filteredKB.length\"\n          cols=\"12\"\n          class=\"text-center\"\n        >\n          <h4 class=\"mt-4\">\n            Search result not found!!\n          </h4>\n        </b-col>\n        <!--/ no result found -->\n      </b-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  BRow, BCol, BCard, BListGroup, BListGroupItem, BCardBody, BCardText, BForm, BInputGroup, BInputGroupPrepend, BFormInput,\n} from 'bootstrap-vue'\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BCard,\n    BListGroup,\n    BListGroupItem,\n    BCardBody,\n    BCardText,\n    BForm,\n    BInputGroup,\n    BInputGroupPrepend,\n    BFormInput,\n  },\n  data() {\n    return {\n      knowledgeBaseSearchQuery: '',\n      kb: [],\n    }\n  },\n  computed: {\n    filteredKB() {\n      const knowledgeBaseSearchQueryLower = this.knowledgeBaseSearchQuery.toLowerCase()\n      return this.kb.filter(item => item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) || item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length)\n    },\n  },\n  created() {\n    // ! You have to update the below API call according to route parameter\n    // * We are using fixed API call for all categories for demo purposes\n    this.$http.get('/kb/data/category').then(res => { this.kb = res.data })\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/pages/page-knowledge-base.scss';\n</style>\n"]}]}