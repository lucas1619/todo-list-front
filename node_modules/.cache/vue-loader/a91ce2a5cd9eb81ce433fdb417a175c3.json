{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/components/popover/PopoverAdvance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/popover/PopoverAdvance.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZScKaW1wb3J0IHsKICBCUG9wb3ZlciwgQkJ1dHRvbiwgQkZvcm1Hcm91cCwgQkZvcm1JbnB1dCwgQkNhcmQsIEJDYXJkVGV4dCwKfSBmcm9tICdib290c3RyYXAtdnVlJwppbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJwppbXBvcnQgeyBjb2RlQWR2YW5jZSB9IGZyb20gJy4vY29kZScKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQ2FyZENvZGUsCiAgICBCUG9wb3ZlciwKICAgIEJCdXR0b24sCiAgICBCRm9ybUdyb3VwLAogICAgQkNhcmRUZXh0LAogICAgQkZvcm1JbnB1dCwKICAgIEJDYXJkLAogIH0sCiAgZGlyZWN0aXZlczogewogICAgUmlwcGxlLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlucHV0MTogJycsCiAgICAgIGlucHV0MXN0YXRlOiBudWxsLAogICAgICBpbnB1dDI6ICcnLAogICAgICBpbnB1dDJzdGF0ZTogbnVsbCwKICAgICAgaW5wdXQxUmV0dXJuOiAnJywKICAgICAgaW5wdXQyUmV0dXJuOiAnJywKICAgICAgcG9wb3ZlclNob3c6IGZhbHNlLAogICAgICBjb2RlQWR2YW5jZSwKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBpbnB1dDEodmFsKSB7CiAgICAgIGlmICh2YWwpIHsKICAgICAgICB0aGlzLmlucHV0MXN0YXRlID0gdHJ1ZQogICAgICB9CiAgICB9LAogICAgaW5wdXQyKHZhbCkgewogICAgICBpZiAodmFsKSB7CiAgICAgICAgdGhpcy5pbnB1dDJzdGF0ZSA9IHRydWUKICAgICAgfQogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uQ2xvc2UoKSB7CiAgICAgIHRoaXMucG9wb3ZlclNob3cgPSBmYWxzZQogICAgfSwKICAgIG9uT2soKSB7CiAgICAgIGlmICghdGhpcy5pbnB1dDEpIHsKICAgICAgICB0aGlzLmlucHV0MXN0YXRlID0gZmFsc2UKICAgICAgfQogICAgICBpZiAoIXRoaXMuaW5wdXQyKSB7CiAgICAgICAgdGhpcy5pbnB1dDJzdGF0ZSA9IGZhbHNlCiAgICAgIH0KICAgICAgaWYgKHRoaXMuaW5wdXQxICYmIHRoaXMuaW5wdXQyKSB7CiAgICAgICAgdGhpcy5vbkNsb3NlKCkKICAgICAgICAvLyBSZXR1cm4gb3VyIHBvcG92ZXIgZm9ybSByZXN1bHRzCiAgICAgICAgdGhpcy5pbnB1dDFSZXR1cm4gPSB0aGlzLmlucHV0MQogICAgICAgIHRoaXMuaW5wdXQyUmV0dXJuID0gdGhpcy5pbnB1dDIKICAgICAgfQogICAgfSwKICAgIG9uU2hvdygpIHsKICAgICAgLy8gVGhpcyBpcyBjYWxsZWQganVzdCBiZWZvcmUgdGhlIHBvcG92ZXIgaXMgc2hvd24KICAgICAgLy8gUmVzZXQgb3VyIHBvcG92ZXIgZm9ybSB2YXJpYWJsZXMKICAgICAgdGhpcy5pbnB1dDEgPSAnJwogICAgICB0aGlzLmlucHV0MiA9ICcnCiAgICAgIHRoaXMuaW5wdXQxc3RhdGUgPSBudWxsCiAgICAgIHRoaXMuaW5wdXQyc3RhdGUgPSBudWxsCiAgICAgIHRoaXMuaW5wdXQxUmV0dXJuID0gJycKICAgICAgdGhpcy5pbnB1dDJSZXR1cm4gPSAnJwogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["PopoverAdvance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PopoverAdvance.vue","sourceRoot":"src/views/components/popover","sourcesContent":["<template>\n  <b-card-code title=\"Advanced &lt;b-popover&gt; usage with reactive content\">\n    <b-card-text>\n      <span>You can even make your </span>\n      <code>&lt;b-popover&gt;</code>\n      <span> content interactive.</span>\n    </b-card-text>\n\n    <div id=\"my-container\">\n      <!-- Our triggering (target) element -->\n      <b-button\n        id=\"popover-reactive-1\"\n        ref=\"button\"\n        v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n        variant=\"outline-primary\"\n      >\n        Reactive Content Using Slots\n      </b-button>\n\n      <!-- Output from the popover interaction -->\n      <b-card\n        v-if=\"input1Return && input2Return\"\n        title=\"Returned values:\"\n        class=\"shadow-none border mb-0 mt-2\"\n      >\n        <p class=\"card-text\">\n          Name: <strong>{{ input1Return }}</strong><br>\n          Password: <strong>{{ input2Return }}</strong>\n        </p>\n      </b-card>\n\n      <!-- Our popover title and content render container -->\n      <!-- We use placement 'auto' so popover fits in the best spot on viewport -->\n      <!-- We specify the same container as the trigger button, so that popover is close to button -->\n      <b-popover\n        ref=\"popover\"\n        target=\"popover-reactive-1\"\n        triggers=\"click\"\n        :show.sync=\"popoverShow\"\n        placement=\"auto\"\n        container=\"my-container\"\n      >\n        <template #title>\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <span>Interactive Content</span>\n          </div>\n        </template>\n\n        <div>\n          <b-form-group\n            :state=\"input1state\"\n            invalid-feedback=\"This field is required\"\n          >\n            <b-form-input\n              v-model=\"input1\"\n              placeholder=\"Your Name\"\n              :state=\"input1state\"\n              size=\"sm\"\n            />\n          </b-form-group>\n\n          <b-form-group\n            :state=\"input2state\"\n            invalid-feedback=\"This field is required\"\n          >\n            <b-form-input\n              v-model=\"input2\"\n              type=\"password\"\n              placeholder=\"Your Password\"\n              :state=\"input2state\"\n              size=\"sm\"\n            />\n          </b-form-group>\n\n          <!-- button -->\n          <b-button\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            size=\"sm\"\n            variant=\"danger\"\n            class=\"mr-1\"\n            @click=\"onClose\"\n          >\n            Cancel\n          </b-button>\n          <b-button\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            size=\"sm\"\n            variant=\"primary\"\n            @click=\"onOk\"\n          >\n            Ok\n          </b-button>\n        </div>\n      </b-popover>\n    </div>\n\n    <template #code>\n      {{ codeAdvance }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport {\n  BPopover, BButton, BFormGroup, BFormInput, BCard, BCardText,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeAdvance } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BPopover,\n    BButton,\n    BFormGroup,\n    BCardText,\n    BFormInput,\n    BCard,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      input1: '',\n      input1state: null,\n      input2: '',\n      input2state: null,\n      input1Return: '',\n      input2Return: '',\n      popoverShow: false,\n      codeAdvance,\n    }\n  },\n  watch: {\n    input1(val) {\n      if (val) {\n        this.input1state = true\n      }\n    },\n    input2(val) {\n      if (val) {\n        this.input2state = true\n      }\n    },\n  },\n  methods: {\n    onClose() {\n      this.popoverShow = false\n    },\n    onOk() {\n      if (!this.input1) {\n        this.input1state = false\n      }\n      if (!this.input2) {\n        this.input2state = false\n      }\n      if (this.input1 && this.input2) {\n        this.onClose()\n        // Return our popover form results\n        this.input1Return = this.input1\n        this.input2Return = this.input2\n      }\n    },\n    onShow() {\n      // This is called just before the popover is shown\n      // Reset our popover form variables\n      this.input1 = ''\n      this.input2 = ''\n      this.input1state = null\n      this.input2state = null\n      this.input1Return = ''\n      this.input2Return = ''\n    },\n  },\n}\n</script>\n"]}]}