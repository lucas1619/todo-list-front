{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/apps/chat/ChatLeftSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/apps/chat/ChatLeftSidebar.vue","mtime":1614322510000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgQkF2YXRhciwgQklucHV0R3JvdXAsIEJJbnB1dEdyb3VwUHJlcGVuZCwgQkZvcm1JbnB1dCwKfSBmcm9tICdib290c3RyYXAtdnVlJwppbXBvcnQgVnVlUGVyZmVjdFNjcm9sbGJhciBmcm9tICd2dWUtcGVyZmVjdC1zY3JvbGxiYXInCmltcG9ydCB7IHJlZiwgY29tcHV0ZWQgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaScKaW1wb3J0IENoYXRDb250YWN0IGZyb20gJy4vQ2hhdENvbnRhY3QudnVlJwppbXBvcnQgVXNlclByb2ZpbGVTaWRlYmFyIGZyb20gJy4vVXNlclByb2ZpbGVTaWRlYmFyLnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CgogICAgLy8gQlNWCiAgICBCQXZhdGFyLAogICAgQklucHV0R3JvdXAsCiAgICBCSW5wdXRHcm91cFByZXBlbmQsCiAgICBCRm9ybUlucHV0LAoKICAgIC8vIDNyZCBwYXJ0eQogICAgVnVlUGVyZmVjdFNjcm9sbGJhciwKCiAgICAvLyBTRkMKICAgIENoYXRDb250YWN0LAogICAgVXNlclByb2ZpbGVTaWRlYmFyLAogIH0sCiAgcHJvcHM6IHsKICAgIGNoYXRzQ29udGFjdHM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICAgIGNvbnRhY3RzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgICBzaGFsbFNob3dVc2VyUHJvZmlsZVNpZGViYXI6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgcHJvZmlsZVVzZXJEYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgcHJvZmlsZVVzZXJNaW5pbWFsRGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICAgIGFjdGl2ZUNoYXRDb250YWN0SWQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiBudWxsLAogICAgfSwKICAgIG1xU2hhbGxTaG93TGVmdFNpZGViYXI6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogIH0sCiAgc2V0dXAocHJvcHMpIHsKICAgIGNvbnN0IHBlcmZlY3RTY3JvbGxiYXJTZXR0aW5ncyA9IHsKICAgICAgbWF4U2Nyb2xsYmFyTGVuZ3RoOiAxNTAsCiAgICB9CgogICAgY29uc3QgcmVzb2x2ZUNoYXRDb250YWN0ID0gdXNlcklkID0+IHByb3BzLmNvbnRhY3RzLmZpbmQoY29udGFjdCA9PiBjb250YWN0LmlkID09PSB1c2VySWQpCgogICAgLy8gU2VhcmNoIFF1ZXJ5CiAgICBjb25zdCBzZWFyY2hRdWVyeSA9IHJlZignJykKCiAgICBjb25zdCBzZWFyY2hGaWx0ZXJGdW5jdGlvbiA9IGNvbnRhY3QgPT4gY29udGFjdC5mdWxsTmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaFF1ZXJ5LnZhbHVlLnRvTG93ZXJDYXNlKCkpCiAgICBjb25zdCBmaWx0ZXJlZENoYXRzQ29udGFjdHMgPSBjb21wdXRlZCgoKSA9PiBwcm9wcy5jaGF0c0NvbnRhY3RzLmZpbHRlcihzZWFyY2hGaWx0ZXJGdW5jdGlvbikpCiAgICBjb25zdCBmaWx0ZXJlZENvbnRhY3RzID0gY29tcHV0ZWQoKCkgPT4gcHJvcHMuY29udGFjdHMuZmlsdGVyKHNlYXJjaEZpbHRlckZ1bmN0aW9uKSkKCiAgICByZXR1cm4gewogICAgICAvLyBTZWFyY2ggUXVlcnkKICAgICAgc2VhcmNoUXVlcnksCiAgICAgIGZpbHRlcmVkQ2hhdHNDb250YWN0cywKICAgICAgZmlsdGVyZWRDb250YWN0cywKCiAgICAgIC8vIFVJCiAgICAgIHJlc29sdmVDaGF0Q29udGFjdCwKICAgICAgcGVyZmVjdFNjcm9sbGJhclNldHRpbmdzLAogICAgfQogIH0sCn0K"},{"version":3,"sources":["ChatLeftSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ChatLeftSidebar.vue","sourceRoot":"src/views/apps/chat","sourcesContent":["<template>\n  <div class=\"sidebar-left\">\n    <div class=\"sidebar\">\n\n      <!-- Logged In User Profile Sidebar -->\n      <user-profile-sidebar\n        :shall-show-user-profile-sidebar=\"shallShowUserProfileSidebar\"\n        :profile-user-data=\"profileUserData\"\n        @close-sidebar=\"$emit('update:shall-show-user-profile-sidebar', false)\"\n      />\n\n      <!-- Sidebar Content -->\n      <div\n        class=\"sidebar-content\"\n        :class=\"{'show': mqShallShowLeftSidebar}\"\n      >\n\n        <!-- Sidebar close icon -->\n        <span class=\"sidebar-close-icon\">\n          <feather-icon\n            icon=\"XIcon\"\n            size=\"16\"\n            @click=\"$emit('update:mq-shall-show-left-sidebar', false)\"\n          />\n        </span>\n\n        <!-- Header -->\n        <div class=\"chat-fixed-search\">\n          <div class=\"d-flex align-items-center w-100\">\n            <div class=\"sidebar-profile-toggle\">\n              <b-avatar\n                size=\"42\"\n                class=\"cursor-pointer badge-minimal avatar-border-2\"\n                :src=\"profileUserMinimalData.avatar\"\n                variant=\"transparent\"\n                badge\n                badge-variant=\"success\"\n                @click.native=\"$emit('show-user-profile')\"\n              />\n            </div>\n            <!-- Search -->\n            <b-input-group class=\"input-group-merge ml-1 w-100 round\">\n              <b-input-group-prepend is-text>\n                <feather-icon\n                  icon=\"SearchIcon\"\n                  class=\"text-muted\"\n                />\n              </b-input-group-prepend>\n              <b-form-input\n                v-model=\"searchQuery\"\n                placeholder=\"Search...\"\n              />\n            </b-input-group>\n          </div>\n        </div>\n\n        <!-- ScrollArea: Chat & Contacts -->\n        <vue-perfect-scrollbar\n          :settings=\"perfectScrollbarSettings\"\n          class=\"chat-user-list-wrapper list-group scroll-area\"\n        >\n\n          <!-- Chats Title -->\n          <h4 class=\"chat-list-title\">\n            Chats\n          </h4>\n\n          <!-- Chats -->\n          <ul class=\"chat-users-list chat-list media-list\">\n            <chat-contact\n              v-for=\"contact in filteredChatsContacts\"\n              :key=\"contact.id\"\n              :user=\"contact\"\n              tag=\"li\"\n              :class=\"{'active': activeChatContactId === contact.id}\"\n              is-chat-contact\n              @click=\"$emit('open-chat', contact.id)\"\n            />\n          </ul>\n\n          <!-- Contacts Title -->\n          <h4 class=\"chat-list-title\">\n            Contacts\n          </h4>\n\n          <!-- Contacts -->\n          <ul class=\"chat-users-list contact-list media-list\">\n            <chat-contact\n              v-for=\"contact in filteredContacts\"\n              :key=\"contact.id\"\n              :user=\"contact\"\n              tag=\"li\"\n              @click=\"$emit('open-chat', contact.id)\"\n            />\n          </ul>\n        </vue-perfect-scrollbar>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  BAvatar, BInputGroup, BInputGroupPrepend, BFormInput,\n} from 'bootstrap-vue'\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport { ref, computed } from '@vue/composition-api'\nimport ChatContact from './ChatContact.vue'\nimport UserProfileSidebar from './UserProfileSidebar.vue'\n\nexport default {\n  components: {\n\n    // BSV\n    BAvatar,\n    BInputGroup,\n    BInputGroupPrepend,\n    BFormInput,\n\n    // 3rd party\n    VuePerfectScrollbar,\n\n    // SFC\n    ChatContact,\n    UserProfileSidebar,\n  },\n  props: {\n    chatsContacts: {\n      type: Array,\n      required: true,\n    },\n    contacts: {\n      type: Array,\n      required: true,\n    },\n    shallShowUserProfileSidebar: {\n      type: Boolean,\n      required: true,\n    },\n    profileUserData: {\n      type: Object,\n      required: true,\n    },\n    profileUserMinimalData: {\n      type: Object,\n      required: true,\n    },\n    activeChatContactId: {\n      type: Number,\n      default: null,\n    },\n    mqShallShowLeftSidebar: {\n      type: Boolean,\n      required: true,\n    },\n  },\n  setup(props) {\n    const perfectScrollbarSettings = {\n      maxScrollbarLength: 150,\n    }\n\n    const resolveChatContact = userId => props.contacts.find(contact => contact.id === userId)\n\n    // Search Query\n    const searchQuery = ref('')\n\n    const searchFilterFunction = contact => contact.fullName.toLowerCase().includes(searchQuery.value.toLowerCase())\n    const filteredChatsContacts = computed(() => props.chatsContacts.filter(searchFilterFunction))\n    const filteredContacts = computed(() => props.contacts.filter(searchFilterFunction))\n\n    return {\n      // Search Query\n      searchQuery,\n      filteredChatsContacts,\n      filteredContacts,\n\n      // UI\n      resolveChatContact,\n      perfectScrollbarSettings,\n    }\n  },\n}\n</script>\n"]}]}