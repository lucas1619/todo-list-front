{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/apps/todo/TodoTaskHandlerSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/apps/todo/TodoTaskHandlerSidebar.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgQlNpZGViYXIsIEJGb3JtLCBCRm9ybUdyb3VwLCBCRm9ybUlucHV0LCBCQXZhdGFyLCBCQnV0dG9uLCBCRm9ybUludmFsaWRGZWVkYmFjaywKfSBmcm9tICdib290c3RyYXAtdnVlJwppbXBvcnQgdlNlbGVjdCBmcm9tICd2dWUtc2VsZWN0JwppbXBvcnQgZmxhdFBpY2tyIGZyb20gJ3Z1ZS1mbGF0cGlja3ItY29tcG9uZW50JwppbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJwppbXBvcnQgeyBWYWxpZGF0aW9uUHJvdmlkZXIsIFZhbGlkYXRpb25PYnNlcnZlciB9IGZyb20gJ3ZlZS12YWxpZGF0ZScKaW1wb3J0IHsgcmVxdWlyZWQsIGVtYWlsLCB1cmwgfSBmcm9tICdAdmFsaWRhdGlvbnMnCmltcG9ydCB7IGF2YXRhclRleHQgfSBmcm9tICdAY29yZS91dGlscy9maWx0ZXInCmltcG9ydCBmb3JtVmFsaWRhdGlvbiBmcm9tICdAY29yZS9jb21wLWZ1bmN0aW9ucy9mb3Jtcy9mb3JtLXZhbGlkYXRpb24nCmltcG9ydCB7IHRvUmVmcyB9IGZyb20gJ0B2dWUvY29tcG9zaXRpb24tYXBpJwppbXBvcnQgeyBxdWlsbEVkaXRvciB9IGZyb20gJ3Z1ZS1xdWlsbC1lZGl0b3InCmltcG9ydCB1c2VUYXNrSGFuZGxlciBmcm9tICcuL3VzZVRhc2tIYW5kbGVyJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIC8vIEJTVgogICAgQkJ1dHRvbiwKICAgIEJTaWRlYmFyLAogICAgQkZvcm0sCiAgICBCRm9ybUdyb3VwLAogICAgQkZvcm1JbnB1dCwKICAgIEJBdmF0YXIsCiAgICBCRm9ybUludmFsaWRGZWVkYmFjaywKCiAgICAvLyAzcmQgcGFydHkgcGFja2FnZXMKICAgIHZTZWxlY3QsCiAgICBmbGF0UGlja3IsCiAgICBxdWlsbEVkaXRvciwKCiAgICAvLyBGb3JtIFZhbGlkYXRpb24KICAgIFZhbGlkYXRpb25Qcm92aWRlciwKICAgIFZhbGlkYXRpb25PYnNlcnZlciwKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIFJpcHBsZSwKICB9LAogIG1vZGVsOiB7CiAgICBwcm9wOiAnaXNUYXNrSGFuZGxlclNpZGViYXJBY3RpdmUnLAogICAgZXZlbnQ6ICd1cGRhdGU6aXMtdGFzay1oYW5kbGVyLXNpZGViYXItYWN0aXZlJywKICB9LAogIHByb3BzOiB7CiAgICBpc1Rhc2tIYW5kbGVyU2lkZWJhckFjdGl2ZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgICB0YXNrOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgY2xlYXJUYXNrRGF0YTogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlcXVpcmVkLAogICAgICBlbWFpbCwKICAgICAgdXJsLAogICAgfQogIH0sCiAgc2V0dXAocHJvcHMsIHsgZW1pdCB9KSB7CiAgICBjb25zdCB7CiAgICAgIHRhc2tMb2NhbCwKICAgICAgcmVzZXRUYXNrTG9jYWwsCgogICAgICAvLyBVSQogICAgICBhc3NpZ25lZU9wdGlvbnMsCiAgICAgIG9uU3VibWl0LAogICAgICB0YWdPcHRpb25zLAogICAgICByZXNvbHZlQXZhdGFyVmFyaWFudCwKICAgIH0gPSB1c2VUYXNrSGFuZGxlcih0b1JlZnMocHJvcHMpLCBlbWl0KQoKICAgIGNvbnN0IHsKICAgICAgcmVmRm9ybU9ic2VydmVyLAogICAgICBnZXRWYWxpZGF0aW9uU3RhdGUsCiAgICAgIHJlc2V0Rm9ybSwKICAgICAgY2xlYXJGb3JtLAogICAgfSA9IGZvcm1WYWxpZGF0aW9uKHJlc2V0VGFza0xvY2FsLCBwcm9wcy5jbGVhclRhc2tEYXRhKQoKICAgIGNvbnN0IGVkaXRvck9wdGlvbiA9IHsKICAgICAgbW9kdWxlczogewogICAgICAgIHRvb2xiYXI6ICcjcXVpbGwtdG9vbGJhcicsCiAgICAgIH0sCiAgICAgIHBsYWNlaG9sZGVyOiAnV3JpdGUgeW91ciBkZXNjcmlwdGlvbicsCiAgICB9CgogICAgcmV0dXJuIHsKICAgICAgLy8gQWRkIE5ldwogICAgICB0YXNrTG9jYWwsCiAgICAgIG9uU3VibWl0LAogICAgICBhc3NpZ25lZU9wdGlvbnMsCiAgICAgIHRhZ09wdGlvbnMsCgogICAgICAvLyBGb3JtIFZhbGlkYXRpb24KICAgICAgcmVzZXRGb3JtLAogICAgICBjbGVhckZvcm0sCiAgICAgIHJlZkZvcm1PYnNlcnZlciwKICAgICAgZ2V0VmFsaWRhdGlvblN0YXRlLAoKICAgICAgLy8gVUkKICAgICAgZWRpdG9yT3B0aW9uLAogICAgICByZXNvbHZlQXZhdGFyVmFyaWFudCwKCiAgICAgIC8vIEZpbHRlci9Gb3JtYXR0ZXIKICAgICAgYXZhdGFyVGV4dCwKICAgIH0KICB9LAp9Cg=="},{"version":3,"sources":["TodoTaskHandlerSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"TodoTaskHandlerSidebar.vue","sourceRoot":"src/views/apps/todo","sourcesContent":["<template>\n  <div>\n    <b-sidebar\n      id=\"sidebar-task-handler\"\n      sidebar-class=\"sidebar-lg\"\n      :visible=\"isTaskHandlerSidebarActive\"\n      bg-variant=\"white\"\n      shadow\n      backdrop\n      no-header\n      right\n      @change=\"(val) => $emit('update:is-task-handler-sidebar-active', val)\"\n      @hidden=\"clearForm\"\n    >\n      <template #default=\"{ hide }\">\n        <!-- Header -->\n        <div class=\"d-flex justify-content-between align-items-center content-sidebar-header px-2 py-1\">\n          <b-button\n            v-if=\"taskLocal.id\"\n            size=\"sm\"\n            :variant=\"taskLocal.isCompleted ? 'outline-success' : 'outline-secondary'\"\n            @click=\"taskLocal.isCompleted = !taskLocal.isCompleted\"\n          >\n            {{ taskLocal.isCompleted ? 'Completed' : 'Mark Complete' }}\n          </b-button>\n          <h5\n            v-else\n            class=\"mb-0\"\n          >\n            Add Task\n          </h5>\n          <div>\n            <feather-icon\n              v-show=\"taskLocal.id\"\n              icon=\"TrashIcon\"\n              class=\"cursor-pointer\"\n              @click=\"$emit('remove-task'); hide();\"\n            />\n            <feather-icon\n              class=\"ml-1 cursor-pointer\"\n              icon=\"StarIcon\"\n              size=\"16\"\n              :class=\"{ 'text-warning': taskLocal.isImportant }\"\n              @click=\"taskLocal.isImportant = !taskLocal.isImportant\"\n            />\n            <feather-icon\n              class=\"ml-1 cursor-pointer\"\n              icon=\"XIcon\"\n              size=\"16\"\n              @click=\"hide\"\n            />\n          </div>\n        </div>\n\n        <!-- Body -->\n        <validation-observer\n          #default=\"{ handleSubmit }\"\n          ref=\"refFormObserver\"\n        >\n\n          <!-- Form -->\n          <b-form\n            class=\"p-2\"\n            @submit.prevent=\"handleSubmit(onSubmit)\"\n            @reset.prevent=\"resetForm\"\n          >\n\n            <!-- Title -->\n            <validation-provider\n              #default=\"validationContext\"\n              name=\"Title\"\n              rules=\"required\"\n            >\n              <b-form-group\n                label=\"Title\"\n                label-for=\"task-title\"\n              >\n                <b-form-input\n                  id=\"task-title\"\n                  v-model=\"taskLocal.title\"\n                  autofocus\n                  :state=\"getValidationState(validationContext)\"\n                  trim\n                  placeholder=\"Task Title\"\n                />\n\n                <b-form-invalid-feedback>\n                  {{ validationContext.errors[0] }}\n                </b-form-invalid-feedback>\n              </b-form-group>\n            </validation-provider>\n\n            <!-- Assignee -->\n            <b-form-group\n              label=\"Assignee\"\n              label-for=\"assignee\"\n            >\n              <v-select\n                v-model=\"taskLocal.assignee\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                :options=\"assigneeOptions\"\n                label=\"fullName\"\n                class=\"assignee-selector\"\n                input-id=\"assignee\"\n              >\n\n                <template #option=\"{ avatar, fullName }\">\n                  <b-avatar\n                    size=\"26\"\n                    :src=\"avatar\"\n                  />\n                  <span class=\"ml-50 d-inline-block align-middle\"> {{ fullName }}</span>\n                </template>\n\n                <template #selected-option=\"{ avatar, fullName }\">\n                  <b-avatar\n                    size=\"26\"\n                    :src=\"avatar\"\n                    :variant=\"`light-${resolveAvatarVariant(taskLocal.tags)}`\"\n                    :text=\"avatarText(fullName)\"\n                  />\n\n                  <span class=\"ml-50 d-inline-block align-middle\"> {{ fullName }}</span>\n                </template>\n              </v-select>\n            </b-form-group>\n\n            <!-- due Date -->\n            <validation-provider\n              #default=\"validationContext\"\n              name=\"Due Date\"\n              rules=\"required\"\n            >\n\n              <b-form-group\n                label=\"Due Date\"\n                label-for=\"due-date\"\n              >\n                <flat-pickr\n                  v-model=\"taskLocal.dueDate\"\n                  class=\"form-control\"\n                />\n                <b-form-invalid-feedback :state=\"getValidationState(validationContext)\">\n                  {{ validationContext.errors[0] }}\n                </b-form-invalid-feedback>\n              </b-form-group>\n            </validation-provider>\n\n            <!--Tag -->\n            <b-form-group\n              label=\"Tag\"\n              label-for=\"tag\"\n            >\n              <v-select\n                v-model=\"taskLocal.tags\"\n                :dir=\"$store.state.appConfig.isRTL ? 'rtl' : 'ltr'\"\n                multiple\n                :close-on-select=\"false\"\n                :options=\"tagOptions\"\n                :reduce=\"option => option.value\"\n                input-id=\"tags\"\n              />\n            </b-form-group>\n\n            <!-- Description -->\n            <b-form-group\n              label=\"Description\"\n              label-for=\"task-description\"\n            >\n              <quill-editor\n                id=\"quil-content\"\n                v-model=\"taskLocal.description\"\n                :options=\"editorOption\"\n                class=\"border-bottom-0\"\n              />\n              <div\n                id=\"quill-toolbar\"\n                class=\"d-flex justify-content-end border-top-0\"\n              >\n                <!-- Add a bold button -->\n                <button class=\"ql-bold\" />\n                <button class=\"ql-italic\" />\n                <button class=\"ql-underline\" />\n                <button class=\"ql-align\" />\n                <button class=\"ql-link\" />\n              </div>\n            </b-form-group>\n\n            <!-- Form Actions -->\n            <div class=\"d-flex mt-2\">\n              <b-button\n                v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n                variant=\"primary\"\n                class=\"mr-2\"\n                type=\"submit\"\n              >\n                {{ taskLocal.id ? 'Update' : 'Add ' }}\n              </b-button>\n              <b-button\n                v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n                type=\"reset\"\n                variant=\"outline-secondary\"\n              >\n                Reset\n              </b-button>\n            </div>\n          </b-form>\n        </validation-observer>\n      </template>\n    </b-sidebar>\n  </div>\n</template>\n\n<script>\nimport {\n  BSidebar, BForm, BFormGroup, BFormInput, BAvatar, BButton, BFormInvalidFeedback,\n} from 'bootstrap-vue'\nimport vSelect from 'vue-select'\nimport flatPickr from 'vue-flatpickr-component'\nimport Ripple from 'vue-ripple-directive'\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport { required, email, url } from '@validations'\nimport { avatarText } from '@core/utils/filter'\nimport formValidation from '@core/comp-functions/forms/form-validation'\nimport { toRefs } from '@vue/composition-api'\nimport { quillEditor } from 'vue-quill-editor'\nimport useTaskHandler from './useTaskHandler'\n\nexport default {\n  components: {\n    // BSV\n    BButton,\n    BSidebar,\n    BForm,\n    BFormGroup,\n    BFormInput,\n    BAvatar,\n    BFormInvalidFeedback,\n\n    // 3rd party packages\n    vSelect,\n    flatPickr,\n    quillEditor,\n\n    // Form Validation\n    ValidationProvider,\n    ValidationObserver,\n  },\n  directives: {\n    Ripple,\n  },\n  model: {\n    prop: 'isTaskHandlerSidebarActive',\n    event: 'update:is-task-handler-sidebar-active',\n  },\n  props: {\n    isTaskHandlerSidebarActive: {\n      type: Boolean,\n      required: true,\n    },\n    task: {\n      type: Object,\n      required: true,\n    },\n    clearTaskData: {\n      type: Function,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      required,\n      email,\n      url,\n    }\n  },\n  setup(props, { emit }) {\n    const {\n      taskLocal,\n      resetTaskLocal,\n\n      // UI\n      assigneeOptions,\n      onSubmit,\n      tagOptions,\n      resolveAvatarVariant,\n    } = useTaskHandler(toRefs(props), emit)\n\n    const {\n      refFormObserver,\n      getValidationState,\n      resetForm,\n      clearForm,\n    } = formValidation(resetTaskLocal, props.clearTaskData)\n\n    const editorOption = {\n      modules: {\n        toolbar: '#quill-toolbar',\n      },\n      placeholder: 'Write your description',\n    }\n\n    return {\n      // Add New\n      taskLocal,\n      onSubmit,\n      assigneeOptions,\n      tagOptions,\n\n      // Form Validation\n      resetForm,\n      clearForm,\n      refFormObserver,\n      getValidationState,\n\n      // UI\n      editorOption,\n      resolveAvatarVariant,\n\n      // Filter/Formatter\n      avatarText,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-select.scss';\n@import '@core/scss/vue/libs/vue-flatpicker.scss';\n@import '@core/scss/vue/libs/quill.scss';\n</style>\n\n<style lang=\"scss\" scoped>\n@import '~@core/scss/base/bootstrap-extended/include';\n\n.assignee-selector {\n  ::v-deep .vs__dropdown-toggle {\n  padding-left: 0;\n  }\n}\n\n#quil-content ::v-deep {\n  > .ql-container {\n    border-bottom: 0;\n  }\n\n  + #quill-toolbar {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    border-bottom-left-radius: $border-radius;\n    border-bottom-right-radius: $border-radius;\n  }\n}\n</style>\n"]}]}