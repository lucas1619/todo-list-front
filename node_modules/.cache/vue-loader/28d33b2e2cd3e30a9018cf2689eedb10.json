{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/@core/components/statistics-cards/StatisticCardWithAreaChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/@core/components/statistics-cards/StatisticCardWithAreaChart.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IEJDYXJkLCBCQ2FyZEJvZHksIEJBdmF0YXIgfSBmcm9tICdib290c3RyYXAtdnVlJwppbXBvcnQgVnVlQXBleENoYXJ0cyBmcm9tICd2dWUtYXBleGNoYXJ0cycKaW1wb3J0IHsgJHRoZW1lQ29sb3JzIH0gZnJvbSAnQHRoZW1lQ29uZmlnJwppbXBvcnQgeyBhcmVhQ2hhcnRPcHRpb25zIH0gZnJvbSAnLi9jaGFydE9wdGlvbnMnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVnVlQXBleENoYXJ0cywKICAgIEJDYXJkLAogICAgQkNhcmRCb2R5LAogICAgQkF2YXRhciwKICB9LAogIHByb3BzOiB7CiAgICBpY29uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgc3RhdGlzdGljOiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICAgIHN0YXRpc3RpY1RpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAogICAgY29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAncHJpbWFyeScsCiAgICB9LAogICAgY2hhcnREYXRhOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiBbXSwKICAgIH0sCiAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBudWxsLAogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGFydE9wdGlvbnNDb21wdXRlZCgpIHsKICAgICAgaWYgKHRoaXMuY2hhcnRPcHRpb25zID09PSBudWxsKSB7CiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoYXJlYUNoYXJ0T3B0aW9ucykpCiAgICAgICAgb3B0aW9ucy50aGVtZS5tb25vY2hyb21lLmNvbG9yID0gJHRoZW1lQ29sb3JzW3RoaXMuY29sb3JdCiAgICAgICAgcmV0dXJuIG9wdGlvbnMKICAgICAgfQogICAgICByZXR1cm4gdGhpcy5jaGFydE9wdGlvbnMKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["StatisticCardWithAreaChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StatisticCardWithAreaChart.vue","sourceRoot":"src/@core/components/statistics-cards","sourcesContent":["<template>\n  <b-card no-body>\n    <b-card-body class=\"pb-0\">\n      <b-avatar\n        class=\"mb-1\"\n        :variant=\"`light-${color}`\"\n        size=\"45\"\n      >\n        <feather-icon\n          size=\"21\"\n          :icon=\"icon\"\n        />\n      </b-avatar>\n      <div class=\"truncate\">\n        <h2 class=\"mb-25 font-weight-bolder\">\n          {{ statistic }}\n        </h2>\n        <span>{{ statisticTitle }}</span>\n      </div>\n    </b-card-body>\n\n    <vue-apex-charts\n      type=\"area\"\n      height=\"100\"\n      width=\"100%\"\n      :options=\"chartOptionsComputed\"\n      :series=\"chartData\"\n    />\n\n  </b-card>\n</template>\n\n<script>\nimport { BCard, BCardBody, BAvatar } from 'bootstrap-vue'\nimport VueApexCharts from 'vue-apexcharts'\nimport { $themeColors } from '@themeConfig'\nimport { areaChartOptions } from './chartOptions'\n\nexport default {\n  components: {\n    VueApexCharts,\n    BCard,\n    BCardBody,\n    BAvatar,\n  },\n  props: {\n    icon: {\n      type: String,\n      required: true,\n    },\n    statistic: {\n      type: [Number, String],\n      required: true,\n    },\n    statisticTitle: {\n      type: String,\n      default: '',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    chartData: {\n      type: Array,\n      default: () => [],\n    },\n    chartOptions: {\n      type: Object,\n      default: null,\n    },\n  },\n  computed: {\n    chartOptionsComputed() {\n      if (this.chartOptions === null) {\n        const options = JSON.parse(JSON.stringify(areaChartOptions))\n        options.theme.monochrome.color = $themeColors[this.color]\n        return options\n      }\n      return this.chartOptions\n    },\n  },\n}\n</script>\n"]}]}