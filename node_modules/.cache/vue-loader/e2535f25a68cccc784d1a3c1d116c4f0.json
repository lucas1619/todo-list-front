{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/charts-and-maps/maps/leaflet/LeafletGeoJSON.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/charts-and-maps/maps/leaflet/LeafletGeoJSON.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IExNYXAsIExUaWxlTGF5ZXIsIExHZW9Kc29uIH0gZnJvbSAndnVlMi1sZWFmbGV0JwppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0AvQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZS9CQ2FyZENvZGUudnVlJwppbXBvcnQgeyBjb2RlR2VvSlNPTiB9IGZyb20gJy4vY29kZScKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBMTWFwLAogICAgTFRpbGVMYXllciwKICAgIExHZW9Kc29uLAogICAgQkNhcmRDb2RlLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVybDogJ2h0dHBzOi8ve3N9LnRpbGUub3BlbnN0cmVldG1hcC5vcmcve3p9L3t4fS97eX0ucG5nJywKICAgICAgem9vbTogOCwKICAgICAgY2VudGVyOiBbNDcuMzEzMjIwLCAtMS4zMTk0ODJdLAogICAgICBnZW9qc29uOiBudWxsLAogICAgICBjb2RlR2VvSlNPTiwKICAgIH0KICB9LAogIGFzeW5jIGNyZWF0ZWQoKSB7CiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL3Jhd2dpdC5jb20vZ3JlZ29pcmVkYXZpZC9mcmFuY2UtZ2VvanNvbi9tYXN0ZXIvcmVnaW9ucy9wYXlzLWRlLWxhLWxvaXJlL2NvbW11bmVzLXBheXMtZGUtbGEtbG9pcmUuZ2VvanNvbicpCiAgICB0aGlzLmdlb2pzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKCkKICB9LAp9Cg=="},{"version":3,"sources":["LeafletGeoJSON.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LeafletGeoJSON.vue","sourceRoot":"src/views/charts-and-maps/maps/leaflet","sourcesContent":["<template>\n  <b-card-code title=\"GeoJSON Map\">\n    <l-map\n      :zoom=\"zoom\"\n      :center=\"center\"\n    >\n      <l-tile-layer :url=\"url\" />\n      <l-geo-json :geojson=\"geojson\" />\n    </l-map>\n\n    <template #code>\n      {{ codeGeoJSON }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport { LMap, LTileLayer, LGeoJson } from 'vue2-leaflet'\nimport BCardCode from '@/@core/components/b-card-code/BCardCode.vue'\nimport { codeGeoJSON } from './code'\n\nexport default {\n  components: {\n    LMap,\n    LTileLayer,\n    LGeoJson,\n    BCardCode,\n  },\n  data() {\n    return {\n      url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      zoom: 8,\n      center: [47.313220, -1.319482],\n      geojson: null,\n      codeGeoJSON,\n    }\n  },\n  async created() {\n    const response = await fetch('https://rawgit.com/gregoiredavid/france-geojson/master/regions/pays-de-la-loire/communes-pays-de-la-loire.geojson')\n    this.geojson = await response.json()\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.vue2leaflet-map{\n  &.leaflet-container{\n    height: 350px;\n  }\n}\n</style>\n"]}]}