{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/charts-and-maps/charts/chartjs/charts-components/ChartjsComponentBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/charts-and-maps/charts/chartjs/charts-components/ChartjsComponentBarChart.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IEJhciB9IGZyb20gJ3Z1ZS1jaGFydGpzJwppbXBvcnQgQ2hhcnQgZnJvbSAnY2hhcnQuanMnCgovKmVzbGludC1kaXNhYmxlICovCkNoYXJ0LmVsZW1lbnRzLlJlY3RhbmdsZS5wcm90b3R5cGUuZHJhdyA9IGZ1bmN0aW9uICgpIHsKICBsZXQgY3R4ID0gdGhpcy5fY2hhcnQuY3R4CiAgbGV0IHZpZXdWYXIgPSB0aGlzLl92aWV3CiAgbGV0IGxlZnQsIHJpZ2h0LCB0b3AsIGJvdHRvbSwgc2lnblgsIHNpZ25ZLCBib3JkZXJTa2lwcGVkLCByYWRpdXMKICBsZXQgYm9yZGVyV2lkdGggPSB2aWV3VmFyLmJvcmRlcldpZHRoCiAgbGV0IGNvcm5lclJhZGl1cyA9IDIwCiAgaWYgKCF2aWV3VmFyLmhvcml6b250YWwpIHsKICAgIGxlZnQgPSB2aWV3VmFyLnggLSB2aWV3VmFyLndpZHRoIC8gMgogICAgcmlnaHQgPSB2aWV3VmFyLnggKyB2aWV3VmFyLndpZHRoIC8gMgogICAgdG9wID0gdmlld1Zhci55CiAgICBib3R0b20gPSB2aWV3VmFyLmJhc2UKICAgIHNpZ25YID0gMQogICAgc2lnblkgPSB0b3AgPiBib3R0b20gPyAxIDogLTEKICAgIGJvcmRlclNraXBwZWQgPSB2aWV3VmFyLmJvcmRlclNraXBwZWQgfHwgJ2JvdHRvbScKICB9IGVsc2UgewogICAgbGVmdCA9IHZpZXdWYXIuYmFzZQogICAgcmlnaHQgPSB2aWV3VmFyLngKICAgIHRvcCA9IHZpZXdWYXIueSAtIHZpZXdWYXIuaGVpZ2h0IC8gMgogICAgYm90dG9tID0gdmlld1Zhci55ICsgdmlld1Zhci5oZWlnaHQgLyAyCiAgICBzaWduWCA9IHJpZ2h0ID4gbGVmdCA/IDEgOiAtMQogICAgc2lnblkgPSAxCiAgICBib3JkZXJTa2lwcGVkID0gdmlld1Zhci5ib3JkZXJTa2lwcGVkIHx8ICdsZWZ0JwogIH0KCiAgaWYgKGJvcmRlcldpZHRoKSB7CiAgICBsZXQgYmFyU2l6ZSA9IE1hdGgubWluKE1hdGguYWJzKGxlZnQgLSByaWdodCksIE1hdGguYWJzKHRvcCAtIGJvdHRvbSkpCiAgICBib3JkZXJXaWR0aCA9IGJvcmRlcldpZHRoID4gYmFyU2l6ZSA/IGJhclNpemUgOiBib3JkZXJXaWR0aAogICAgbGV0IGhhbGZTdHJva2UgPSBib3JkZXJXaWR0aCAvIDIKICAgIGxldCBib3JkZXJMZWZ0ID0gbGVmdCArIChib3JkZXJTa2lwcGVkICE9PSAnbGVmdCcgPyBoYWxmU3Ryb2tlICogc2lnblggOiAwKQogICAgbGV0IGJvcmRlclJpZ2h0ID0gcmlnaHQgKyAoYm9yZGVyU2tpcHBlZCAhPT0gJ3JpZ2h0JyA/IC1oYWxmU3Ryb2tlICogc2lnblggOiAwKQogICAgbGV0IGJvcmRlclRvcCA9IHRvcCArIChib3JkZXJTa2lwcGVkICE9PSAndG9wJyA/IGhhbGZTdHJva2UgKiBzaWduWSA6IDApCiAgICBsZXQgYm9yZGVyQm90dG9tID0gYm90dG9tICsgKGJvcmRlclNraXBwZWQgIT09ICdib3R0b20nID8gLWhhbGZTdHJva2UgKiBzaWduWSA6IDApCiAgICBpZiAoYm9yZGVyTGVmdCAhPT0gYm9yZGVyUmlnaHQpIHsKICAgICAgdG9wID0gYm9yZGVyVG9wCiAgICAgIGJvdHRvbSA9IGJvcmRlckJvdHRvbQogICAgfQogICAgaWYgKGJvcmRlclRvcCAhPT0gYm9yZGVyQm90dG9tKSB7CiAgICAgIGxlZnQgPSBib3JkZXJMZWZ0CiAgICAgIHJpZ2h0ID0gYm9yZGVyUmlnaHQKICAgIH0KICB9CgogIGN0eC5iZWdpblBhdGgoKQogIGN0eC5maWxsU3R5bGUgPSB2aWV3VmFyLmJhY2tncm91bmRDb2xvcgogIGN0eC5zdHJva2VTdHlsZSA9IHZpZXdWYXIuYm9yZGVyQ29sb3IKICBjdHgubGluZVdpZHRoID0gYm9yZGVyV2lkdGgKICBsZXQgY29ybmVycyA9IFsKICAgIFtsZWZ0LCBib3R0b21dLAogICAgW2xlZnQsIHRvcF0sCiAgICBbcmlnaHQsIHRvcF0sCiAgICBbcmlnaHQsIGJvdHRvbV0KICBdCgogIGxldCBib3JkZXJzID0gWydib3R0b20nLCAnbGVmdCcsICd0b3AnLCAncmlnaHQnXQogIGxldCBzdGFydENvcm5lciA9IGJvcmRlcnMuaW5kZXhPZihib3JkZXJTa2lwcGVkLCAwKQogIGlmIChzdGFydENvcm5lciA9PT0gLTEpIHsKICAgIHN0YXJ0Q29ybmVyID0gMAogIH0KCiAgZnVuY3Rpb24gY29ybmVyQXQoaW5kZXgpIHsKICAgIHJldHVybiBjb3JuZXJzWyhzdGFydENvcm5lciArIGluZGV4KSAlIDRdCiAgfQoKICBsZXQgY29ybmVyID0gY29ybmVyQXQoMCkKICBjdHgubW92ZVRvKGNvcm5lclswXSwgY29ybmVyWzFdKQoKICBmb3IgKGxldCBpID0gMTsgaSA8IDQ7IGkrKykgewogICAgY29ybmVyID0gY29ybmVyQXQoaSkKICAgIGxldCBuZXh0Q29ybmVySWQgPSBpICsgMQogICAgaWYgKG5leHRDb3JuZXJJZCA9PSA0KSB7CiAgICAgIG5leHRDb3JuZXJJZCA9IDAKICAgIH0KCiAgICBsZXQgbmV4dENvcm5lciA9IGNvcm5lckF0KG5leHRDb3JuZXJJZCkKCiAgICBsZXQgd2lkdGggPSBjb3JuZXJzWzJdWzBdIC0gY29ybmVyc1sxXVswXSwKICAgICAgaGVpZ2h0ID0gY29ybmVyc1swXVsxXSAtIGNvcm5lcnNbMV1bMV0sCiAgICAgIHggPSBjb3JuZXJzWzFdWzBdLAogICAgICB5ID0gY29ybmVyc1sxXVsxXQoKICAgIGxldCByYWRpdXMgPSBjb3JuZXJSYWRpdXMKCiAgICBpZiAocmFkaXVzID4gaGVpZ2h0IC8gMikgewogICAgICByYWRpdXMgPSBoZWlnaHQgLyAyCiAgICB9CiAgICBpZiAocmFkaXVzID4gd2lkdGggLyAyKSB7CiAgICAgIHJhZGl1cyA9IHdpZHRoIC8gMgogICAgfQoKICAgIGlmICghdmlld1Zhci5ob3Jpem9udGFsKSB7CiAgICAgIGN0eC5tb3ZlVG8oeCArIHJhZGl1cywgeSkKICAgICAgY3R4LmxpbmVUbyh4ICsgd2lkdGggLSByYWRpdXMsIHkpCiAgICAgIGN0eC5xdWFkcmF0aWNDdXJ2ZVRvKHggKyB3aWR0aCwgeSwgeCArIHdpZHRoLCB5ICsgcmFkaXVzKQogICAgICBjdHgubGluZVRvKHggKyB3aWR0aCwgeSArIGhlaWdodCAtIHJhZGl1cykKICAgICAgY3R4LnF1YWRyYXRpY0N1cnZlVG8oeCArIHdpZHRoLCB5ICsgaGVpZ2h0LCB4ICsgd2lkdGgsIHkgKyBoZWlnaHQpCiAgICAgIGN0eC5saW5lVG8oeCArIHJhZGl1cywgeSArIGhlaWdodCkKICAgICAgY3R4LnF1YWRyYXRpY0N1cnZlVG8oeCwgeSArIGhlaWdodCwgeCwgeSArIGhlaWdodCkKICAgICAgY3R4LmxpbmVUbyh4LCB5ICsgcmFkaXVzKQogICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyh4LCB5LCB4ICsgcmFkaXVzLCB5KQogICAgfSBlbHNlIHsKICAgICAgY3R4Lm1vdmVUbyh4ICsgcmFkaXVzLCB5KQogICAgICBjdHgubGluZVRvKHggKyB3aWR0aCAtIHJhZGl1cywgeSkKICAgICAgY3R4LnF1YWRyYXRpY0N1cnZlVG8oeCArIHdpZHRoLCB5LCB4ICsgd2lkdGgsIHkgKyByYWRpdXMpCiAgICAgIGN0eC5saW5lVG8oeCArIHdpZHRoLCB5ICsgaGVpZ2h0IC0gcmFkaXVzKQogICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyh4ICsgd2lkdGgsIHkgKyBoZWlnaHQsIHggKyB3aWR0aCAtIHJhZGl1cywgeSArIGhlaWdodCkKICAgICAgY3R4LmxpbmVUbyh4ICsgcmFkaXVzLCB5ICsgaGVpZ2h0KQogICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyh4LCB5ICsgaGVpZ2h0LCB4LCB5ICsgaGVpZ2h0KQogICAgICBjdHgubGluZVRvKHgsIHkgKyByYWRpdXMpCiAgICAgIGN0eC5xdWFkcmF0aWNDdXJ2ZVRvKHgsIHksIHgsIHkpCiAgICB9CiAgfQoKICBjdHguZmlsbCgpCiAgaWYgKGJvcmRlcldpZHRoKSB7CiAgICBjdHguc3Ryb2tlKCkKICB9Cn0KLyogZXNsaW50LWVuYWJsZSAqLwoKZXhwb3J0IGRlZmF1bHQgewogIGV4dGVuZHM6IEJhciwKICBwcm9wczogewogICAgZGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAogICAgb3B0aW9uczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMucmVuZGVyQ2hhcnQodGhpcy5kYXRhLCB0aGlzLm9wdGlvbnMpCiAgfSwKfQo="},{"version":3,"sources":["ChartjsComponentBarChart.vue"],"names":[],"mappingsfile":"ChartjsComponentBarChart.vue","sourceRoot":"src/views/charts-and-maps/charts/chartjs/charts-components","sourcesContent":["<script>\nimport { Bar } from 'vue-chartjs'\nimport Chart from 'chart.js'\n\n/*eslint-disable */\nChart.elements.Rectangle.prototype.draw = function () {\n  let ctx = this._chart.ctx\n  let viewVar = this._view\n  let left, right, top, bottom, signX, signY, borderSkipped, radius\n  let borderWidth = viewVar.borderWidth\n  let cornerRadius = 20\n  if (!viewVar.horizontal) {\n    left = viewVar.x - viewVar.width / 2\n    right = viewVar.x + viewVar.width / 2\n    top = viewVar.y\n    bottom = viewVar.base\n    signX = 1\n    signY = top > bottom ? 1 : -1\n    borderSkipped = viewVar.borderSkipped || 'bottom'\n  } else {\n    left = viewVar.base\n    right = viewVar.x\n    top = viewVar.y - viewVar.height / 2\n    bottom = viewVar.y + viewVar.height / 2\n    signX = right > left ? 1 : -1\n    signY = 1\n    borderSkipped = viewVar.borderSkipped || 'left'\n  }\n\n  if (borderWidth) {\n    let barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom))\n    borderWidth = borderWidth > barSize ? barSize : borderWidth\n    let halfStroke = borderWidth / 2\n    let borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0)\n    let borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0)\n    let borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0)\n    let borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0)\n    if (borderLeft !== borderRight) {\n      top = borderTop\n      bottom = borderBottom\n    }\n    if (borderTop !== borderBottom) {\n      left = borderLeft\n      right = borderRight\n    }\n  }\n\n  ctx.beginPath()\n  ctx.fillStyle = viewVar.backgroundColor\n  ctx.strokeStyle = viewVar.borderColor\n  ctx.lineWidth = borderWidth\n  let corners = [\n    [left, bottom],\n    [left, top],\n    [right, top],\n    [right, bottom]\n  ]\n\n  let borders = ['bottom', 'left', 'top', 'right']\n  let startCorner = borders.indexOf(borderSkipped, 0)\n  if (startCorner === -1) {\n    startCorner = 0\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4]\n  }\n\n  let corner = cornerAt(0)\n  ctx.moveTo(corner[0], corner[1])\n\n  for (let i = 1; i < 4; i++) {\n    corner = cornerAt(i)\n    let nextCornerId = i + 1\n    if (nextCornerId == 4) {\n      nextCornerId = 0\n    }\n\n    let nextCorner = cornerAt(nextCornerId)\n\n    let width = corners[2][0] - corners[1][0],\n      height = corners[0][1] - corners[1][1],\n      x = corners[1][0],\n      y = corners[1][1]\n\n    let radius = cornerRadius\n\n    if (radius > height / 2) {\n      radius = height / 2\n    }\n    if (radius > width / 2) {\n      radius = width / 2\n    }\n\n    if (!viewVar.horizontal) {\n      ctx.moveTo(x + radius, y)\n      ctx.lineTo(x + width - radius, y)\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n      ctx.lineTo(x + width, y + height - radius)\n      ctx.quadraticCurveTo(x + width, y + height, x + width, y + height)\n      ctx.lineTo(x + radius, y + height)\n      ctx.quadraticCurveTo(x, y + height, x, y + height)\n      ctx.lineTo(x, y + radius)\n      ctx.quadraticCurveTo(x, y, x + radius, y)\n    } else {\n      ctx.moveTo(x + radius, y)\n      ctx.lineTo(x + width - radius, y)\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n      ctx.lineTo(x + width, y + height - radius)\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n      ctx.lineTo(x + radius, y + height)\n      ctx.quadraticCurveTo(x, y + height, x, y + height)\n      ctx.lineTo(x, y + radius)\n      ctx.quadraticCurveTo(x, y, x, y)\n    }\n  }\n\n  ctx.fill()\n  if (borderWidth) {\n    ctx.stroke()\n  }\n}\n/* eslint-enable */\n\nexport default {\n  extends: Bar,\n  props: {\n    data: {\n      type: Object,\n      default: null,\n    },\n    options: {\n      type: Object,\n      default: null,\n    },\n  },\n  mounted() {\n    this.renderChart(this.data, this.options)\n  },\n}\n</script>\n"]}]}