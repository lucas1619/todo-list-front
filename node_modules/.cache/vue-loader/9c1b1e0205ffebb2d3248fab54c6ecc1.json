{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/pages/authentication/ResetPassword-v2.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/pages/authentication/ResetPassword-v2.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/css-loader/dist/cjs.js","mtime":1646760975182},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1646760975954},{"path":"/home/lucas/Desktop/test/node_modules/postcss-loader/src/index.js","mtime":1646760975438},{"path":"/home/lucas/Desktop/test/node_modules/sass-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJ0Bjb3JlL3Njc3MvdnVlL3BhZ2VzL3BhZ2UtYXV0aC5zY3NzJzsK"},{"version":3,"sources":["ResetPassword-v2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiPA","file":"ResetPassword-v2.vue","sourceRoot":"src/views/pages/authentication","sourcesContent":["<template>\n  <div class=\"auth-wrapper auth-v2\">\n    <b-row class=\"auth-inner m-0\">\n\n      <!-- Brand logo-->\n      <b-link class=\"brand-logo\">\n        <vuexy-logo />\n\n        <h2 class=\"brand-text text-primary ml-1\">\n          Vuexy\n        </h2>\n      </b-link>\n      <!-- /Brand logo-->\n\n      <!-- Left Text-->\n      <b-col\n        lg=\"8\"\n        class=\"d-none d-lg-flex align-items-center p-5\"\n      >\n        <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\n          <b-img\n            :src=\"imgUrl\"\n            fluid\n            alt=\"Register V2\"\n          />\n        </div>\n      </b-col>\n      <!-- /Left Text-->\n\n      <!-- Reset password-->\n      <b-col\n        lg=\"4\"\n        class=\"d-flex align-items-center auth-bg px-2 p-lg-5\"\n      >\n        <b-col\n          sm=\"8\"\n          md=\"6\"\n          lg=\"12\"\n          class=\"px-xl-2 mx-auto\"\n        >\n          <b-card-title\n            title-tag=\"h2\"\n            class=\"font-weight-bold mb-1\"\n          >\n            Reset Password 🔒\n          </b-card-title>\n          <b-card-text class=\"mb-2\">\n            Your new password must be different from previously used passwords\n          </b-card-text>\n\n          <!-- form -->\n          <validation-observer ref=\"simpleRules\">\n            <b-form\n              class=\"auth-reset-password-form mt-2\"\n              method=\"POST\"\n              @submit.prevent=\"validationForm\"\n            >\n\n              <!-- password -->\n              <b-form-group\n                label=\"New Password\"\n                label-for=\"reset-password-new\"\n              >\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"Password\"\n                  vid=\"Password\"\n                  rules=\"required|password\"\n                >\n                  <b-input-group\n                    class=\"input-group-merge\"\n                    :class=\"errors.length > 0 ? 'is-invalid':null\"\n                  >\n                    <b-form-input\n                      id=\"reset-password-new\"\n                      v-model=\"password\"\n                      :type=\"password1FieldType\"\n                      :state=\"errors.length > 0 ? false:null\"\n                      class=\"form-control-merge\"\n                      name=\"reset-password-new\"\n                      placeholder=\"············\"\n                    />\n                    <b-input-group-append is-text>\n                      <feather-icon\n                        class=\"cursor-pointer\"\n                        :icon=\"password1ToggleIcon\"\n                        @click=\"togglePassword1Visibility\"\n                      />\n                    </b-input-group-append>\n                  </b-input-group>\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n\n              <!-- confirm password -->\n              <b-form-group\n                label-for=\"reset-password-confirm\"\n                label=\"Confirm Password\"\n              >\n                <validation-provider\n                  #default=\"{ errors }\"\n                  name=\"Confirm Password\"\n                  rules=\"required|confirmed:Password\"\n                >\n                  <b-input-group\n                    class=\"input-group-merge\"\n                    :class=\"errors.length > 0 ? 'is-invalid':null\"\n                  >\n                    <b-form-input\n                      id=\"reset-password-confirm\"\n                      v-model=\"cPassword\"\n                      :type=\"password2FieldType\"\n                      class=\"form-control-merge\"\n                      :state=\"errors.length > 0 ? false:null\"\n                      name=\"reset-password-confirm\"\n                      placeholder=\"············\"\n                    />\n                    <b-input-group-append is-text>\n                      <feather-icon\n                        class=\"cursor-pointer\"\n                        :icon=\"password2ToggleIcon\"\n                        @click=\"togglePassword2Visibility\"\n                      />\n                    </b-input-group-append>\n                  </b-input-group>\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n\n              <!-- submit button -->\n              <b-button\n                block\n                type=\"submit\"\n                variant=\"primary\"\n              >\n                Set New Password\n              </b-button>\n            </b-form>\n          </validation-observer>\n\n          <p class=\"text-center mt-2\">\n            <b-link :to=\"{name:'auth-login-v2'}\">\n              <feather-icon icon=\"ChevronLeftIcon\" /> Back to login\n            </b-link>\n          </p>\n        </b-col>\n      </b-col>\n      <!-- /Reset password-->\n    </b-row>\n  </div>\n</template>\n\n<script>\n/* eslint-disable global-require */\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport VuexyLogo from '@core/layouts/components/Logo.vue'\nimport {\n  BRow, BCol, BCardTitle, BCardText, BForm, BFormGroup, BInputGroup, BInputGroupAppend, BLink, BFormInput, BButton, BImg,\n} from 'bootstrap-vue'\nimport { required } from '@validations'\nimport store from '@/store/index'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\n\nexport default {\n  components: {\n    VuexyLogo,\n    BRow,\n    BCol,\n    BButton,\n    BCardTitle,\n    BCardText,\n    BForm,\n    BFormGroup,\n    BImg,\n    BInputGroup,\n    BLink,\n    BFormInput,\n    BInputGroupAppend,\n    ValidationProvider,\n    ValidationObserver,\n  },\n  data() {\n    return {\n      userEmail: '',\n      cPassword: '',\n      password: '',\n      sideImg: require('@/assets/images/pages/reset-password-v2.svg'),\n      // validation\n      required,\n\n      // Toggle Password\n      password1FieldType: 'password',\n      password2FieldType: 'password',\n    }\n  },\n  computed: {\n    passwordToggleIcon() {\n      return this.passwordFieldType === 'password' ? 'EyeIcon' : 'EyeOffIcon'\n    },\n    imgUrl() {\n      if (store.state.appConfig.layout.skin === 'dark') {\n        // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n        this.sideImg = require('@/assets/images/pages/reset-password-v2-dark.svg')\n        return this.sideImg\n      }\n      return this.sideImg\n    },\n    password1ToggleIcon() {\n      return this.password1FieldType === 'password' ? 'EyeIcon' : 'EyeOffIcon'\n    },\n    password2ToggleIcon() {\n      return this.password2FieldType === 'password' ? 'EyeIcon' : 'EyeOffIcon'\n    },\n  },\n  methods: {\n    togglePassword1Visibility() {\n      this.password1FieldType = this.password1FieldType === 'password' ? 'text' : 'password'\n    },\n    togglePassword2Visibility() {\n      this.password2FieldType = this.password2FieldType === 'password' ? 'text' : 'password'\n    },\n    validationForm() {\n      this.$refs.simpleRules.validate().then(success => {\n        if (success) {\n          this.$toast({\n            component: ToastificationContent,\n            props: {\n              title: 'Form Submitted',\n              icon: 'EditIcon',\n              variant: 'success',\n            },\n          })\n        }\n      })\n    },\n\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import '@core/scss/vue/pages/page-auth.scss';\n</style>\n"]}]}