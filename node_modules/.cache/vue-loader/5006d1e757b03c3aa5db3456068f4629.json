{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/todo/ToDoList.vue?vue&type=style&index=0&id=4d027bc3&scoped=true&lang=css&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/todo/ToDoList.vue","mtime":1647039700979},{"path":"/home/lucas/Desktop/test/node_modules/css-loader/dist/cjs.js","mtime":1646760975182},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1646760975954},{"path":"/home/lucas/Desktop/test/node_modules/postcss-loader/src/index.js","mtime":1646760975438},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGV4dC11bmRlcmxpbmUgewogIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoOwp9Cg=="},{"version":3,"sources":["ToDoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4UA;AACA;AACA","file":"ToDoList.vue","sourceRoot":"src/views/todo","sourcesContent":["<template>\n  <b-card>\n    <b-card-header>\n      <b-card-title>\n        <h3>ToDo List</h3>\n      </b-card-title>\n    </b-card-header>\n    <div class=\"d-flex align-items-center justify-content-end\">\n      <b-button v-b-modal.add-modal variant=\"primary\" class=\"mb-2\"\n        >New task</b-button\n      >\n    </div>\n    <b-table class=\"border\" :items=\"todoList\" :fields=\"fields\">\n      <template #cell(completed)=\"{ item }\">\n        <b-form-checkbox @change=\"changeStatus(item)\" v-model=\"item.status\" />\n      </template>\n      <template #cell(title)=\"{ item }\">\n        <span :class=\"{ 'text-underline': item.status }\">\n          {{ item.name }}\n        </span>\n      </template>\n      <template #cell(categories)=\"{ item }\">\n        <b-row style=\"max-width: 250px\">\n          <b-col\n            v-for=\"(category, index) in item.categories\"\n            :key=\"index\"\n            cols=\"4\"\n          >\n            <b-badge pill :variant=\"category.color\">\n              {{ category.name }}\n            </b-badge>\n          </b-col>\n        </b-row>\n      </template>\n      <template #cell(actions)=\"{ item }\">\n        <b-button\n          @click=\"editTask(item)\"\n          variant=\"flat-info\"\n          class=\"btn-icon rounded-circle\"\n          size=\"sm\"\n        >\n          <feather-icon icon=\"EditIcon\" />\n        </b-button>\n        <b-button\n          variant=\"flat-danger\"\n          class=\"btn-icon rounded-circle\"\n          size=\"sm\"\n          @click=\"removeTodo(item)\"\n        >\n          <feather-icon icon=\"Trash2Icon\" />\n        </b-button>\n      </template>\n    </b-table>\n    <b-modal\n      id=\"edit-modal\"\n      title=\"Edit modal\"\n      ok-title=\"Save\"\n      ok-only\n      @ok=\"saveTask\"\n    >\n      <b-form>\n        <b-form-group label=\"Title\">\n          <b-form-input v-model=\"selectedTask.name\" />\n        </b-form-group>\n        <b-form-group label=\"Description\">\n          <b-form-textarea v-model=\"selectedTask.description\" />\n        </b-form-group>\n        <b-form-group label=\"Categories\">\n          <b-row>\n            <b-col cols=\"12\">\n              <v-select\n                v-model=\"selectedTask.categories\"\n                :closeOnSelect=\"false\"\n                :options=\"categories\"\n                :clearable=\"false\"\n                label=\"name\"\n                multiple\n              ></v-select>\n            </b-col>\n            <b-col\n              cols=\"12\"\n              class=\"d-flex align-items-center justify-content-end mt-50\"\n            >\n              <b-button\n                v-b-modal.add-category-modal\n                class=\"btn-icon\"\n                variant=\"outline-secondary\"\n              >\n                New Category</b-button\n              >\n            </b-col>\n          </b-row>\n        </b-form-group>\n      </b-form>\n    </b-modal>\n    <b-modal\n      id=\"add-category-modal\"\n      no-close-on-backdrop\n      title=\"Add category\"\n      ok-only\n      ok-title=\"Add\"\n      @ok=\"addCategory\"\n    >\n      <b-form>\n        <b-form-group label=\"Category name\">\n          <b-form-input v-model=\"newCategory.name\" />\n        </b-form-group>\n        <b-form-group label=\"Category color\">\n          <v-select\n            v-model=\"newCategory.color\"\n            size=\"sm\"\n            :options=\"colors\"\n            label=\"name\"\n            :reduce=\"(color) => color.color\"\n          ></v-select>\n        </b-form-group>\n      </b-form>\n    </b-modal>\n    <b-modal\n      title=\"Add task\"\n      id=\"add-modal\"\n      ok-only\n      ok-title=\"Add\"\n      @ok=\"addTask\"\n    >\n      <b-form>\n        <b-form-group label=\"Title\">\n          <b-form-input v-model=\"newTask.name\" />\n        </b-form-group>\n        <b-form-group label=\"Description\">\n          <b-form-textarea v-model=\"newTask.description\" />\n        </b-form-group>\n        <b-form-group label=\"Categories\">\n          <b-row>\n            <b-col cols=\"12\">\n              <v-select\n                v-model=\"newTask.categories\"\n                :closeOnSelect=\"false\"\n                :options=\"categories\"\n                :clearable=\"false\"\n                label=\"name\"\n                multiple\n              />\n            </b-col>\n            <b-col\n              cols=\"12\"\n              class=\"d-flex align-items-center justify-content-end mt-50\"\n            >\n              <b-button\n                v-b-modal.add-category-modal\n                class=\"btn-icon\"\n                variant=\"outline-secondary\"\n              >\n                New Category</b-button\n              >\n            </b-col>\n          </b-row>\n        </b-form-group>\n      </b-form>\n    </b-modal>\n  </b-card>\n</template>\n\n<script>\nimport vSelect from \"vue-select\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    vSelect,\n  },\n  data() {\n    return {\n      colors: [\n        {\n          name: \"Primary\",\n          color: \"primary\",\n        },\n        {\n          name: \"Secondary\",\n          color: \"secondary\",\n        },\n        {\n          name: \"Success\",\n          color: \"success\",\n        },\n        {\n          name: \"Danger\",\n          color: \"danger\",\n        },\n        {\n          name: \"Warning\",\n          color: \"warning\",\n        },\n        {\n          name: \"Info\",\n          color: \"info\",\n        },\n        {\n          name: \"Light\",\n          color: \"light\",\n        },\n        {\n          name: \"Dark\",\n          color: \"dark\",\n        },\n      ],\n      newCategory: {\n        name: \"\",\n        color: \"primary\",\n      },\n      newTask: {\n        name: \"\",\n        status: false,\n        description: \"\",\n        categories: [],\n      },\n      categories: [],\n      todoList: [],\n      //fields todo list\n      fields: [\n        {\n          key: \"completed\",\n          label: \"Done\",\n        },\n        {\n          key: \"title\",\n          label: \"Title\",\n        },\n        {\n          key: \"categories\",\n          label: \"Categories\",\n        },\n        {\n          key: \"actions\",\n          label: \"Actions\",\n        },\n      ],\n      selectedTask: {},\n    };\n  },\n  async created() {\n    await Promise.all([this.getCategories(), this.getTasks()]);\n  },\n  methods: {\n    async getTasks() {\n      const response = await axios.get(\"http://127.0.0.1:8000/api/task\");\n      this.todoList = response.data.data;\n    },\n    async getCategories() {\n      const response = await axios.get(\"http://127.0.0.1:8000/api/categories\");\n      this.categories = response.data.data;\n    },\n\n    async addCategory() {\n      try {\n        const response = await axios.post(\n          \"http://127.0.0.1:8000/api/category\",\n          this.newCategory\n        );\n        if (response.status === 201) {\n          this.newCategory.id = response.data.newCategory.id;\n          this.categories.push(this.newCategory);\n          this.newCategory = {\n            name: \"\",\n            color: \"primary\",\n          };\n        }\n      } catch (error) {\n        alert(\"error.response.data.error\");\n        console.log(error);\n      }\n    },\n    async addTask() {\n      console.log(this.newTask);\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/task\",\n        this.newTask\n      );\n      if (response.status === 201) {\n        console.log(response.data);\n        this.newTask.id = response.data.newTask.id;\n        this.todoList.push(this.newTask);\n        this.newTask = {\n          id: \"\",\n          name: \"\",\n          description: \"\",\n          categories: [],\n        };\n      }\n    },\n    async removeTodo(item) {\n      try {\n        const response = await axios.delete(\n          \"http://127.0.0.1:8000/api/task/\" + item.id\n        );\n        if (response.status === 204) {\n          this.todoList = this.todoList.filter((todo) => todo.id !== item.id);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    editTask(task) {\n      this.selectedTask = { ...task };\n      this.$bvModal.show(\"edit-modal\");\n    },\n    async saveTask() {\n      const response = await axios.put(\n        \"http://127.0.0.1:8000/api/task/\" + this.selectedTask.id,\n        this.selectedTask\n      );\n      if (response.status === 200) {\n        this.todoList = this.todoList.map((todo) => {\n          if (todo.id === this.selectedTask.id) {\n            return this.selectedTask;\n          }\n          return todo;\n        });\n      }\n    },\n    async changeStatus(item) {\n      await axios.put(\n        \"http://127.0.0.1:8000/api/task/\" + item.id + \"/status\",\n        item.status\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n.text-underline {\n  text-decoration: line-through;\n}\n</style>\n"]}]}