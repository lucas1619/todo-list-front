{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/components/toasts/ToastsLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/toasts/ToastsLinks.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZScKaW1wb3J0IHsgQkJ1dHRvbiwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZScKaW1wb3J0IFJpcHBsZSBmcm9tICd2dWUtcmlwcGxlLWRpcmVjdGl2ZScKaW1wb3J0IHsgY29kZUxpbmtzIH0gZnJvbSAnLi9jb2RlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkQ29kZSwKICAgIEJCdXR0b24sCiAgICBCQ2FyZFRleHQsCiAgfSwKICBkaXJlY3RpdmVzOiB7CiAgICBSaXBwbGUsCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29kZUxpbmtzLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdG9hc3QoKSB7CiAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QoJ1RvYXN0IHdpdGggYWN0aW9uIGxpbmsnLCB7CiAgICAgICAgaHJlZjogJyNmb28nLAogICAgICAgIHRpdGxlOiAnVG9hc3QgTGluaycsCiAgICAgIH0pCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["ToastsLinks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToastsLinks.vue","sourceRoot":"src/views/components/toasts","sourcesContent":["<template>\n  <b-card-code title=\"Links\">\n    <b-card-text>\n      <span>Optionally convert the toast body to a link (</span>\n      <code>&lt;a&gt;</code>\n      <span>) or </span>\n      <code>&lt;router-link&gt;</code>\n      <span> (or </span>\n      <code>&lt;nuxt-link&gt;</code>\n      <span>) via the href and to props respectively. When set, the entire toast body becomes a link.</span>\n    </b-card-text>\n\n    <b-button\n      v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n      variant=\"outline-primary\"\n      @click=\"toast()\"\n    >\n      Toast with link\n    </b-button>\n\n    <template #code>\n      {{ codeLinks }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport { BButton, BCardText } from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { codeLinks } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BButton,\n    BCardText,\n  },\n  directives: {\n    Ripple,\n  },\n  data() {\n    return {\n      codeLinks,\n    }\n  },\n  methods: {\n    toast() {\n      this.$bvToast.toast('Toast with action link', {\n        href: '#foo',\n        title: 'Toast Link',\n      })\n    },\n  },\n}\n</script>\n"]}]}