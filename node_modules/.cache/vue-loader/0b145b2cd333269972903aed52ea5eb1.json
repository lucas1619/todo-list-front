{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/components/tab/TabPosition.vue?vue&type=template&id=36de3b65&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/tab/TabPosition.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1646760976006},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}