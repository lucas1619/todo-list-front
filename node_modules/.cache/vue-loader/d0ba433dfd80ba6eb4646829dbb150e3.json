{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/forms/form-element/autosuggest/AutoSuggestBasic.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/forms/form-element/autosuggest/AutoSuggestBasic.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFZ1ZUF1dG9zdWdnZXN0IH0gZnJvbSAndnVlLWF1dG9zdWdnZXN0JwppbXBvcnQgQkNhcmRDb2RlIGZyb20gJ0Bjb3JlL2NvbXBvbmVudHMvYi1jYXJkLWNvZGUvQkNhcmRDb2RlLnZ1ZScKaW1wb3J0IHsgY29kZUJhc2ljIH0gZnJvbSAnLi9jb2RlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFZ1ZUF1dG9zdWdnZXN0LAogICAgQkNhcmRDb2RlLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFzdWdnZXN0OiBbXSwKICAgICAgZmlsdGVyZWRPcHRpb25zOiBbXSwKICAgICAgbGltaXQ6IDEwLAogICAgICBzZWxlY3RlZDogbnVsbCwKICAgICAgY29kZUJhc2ljLAogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuJGh0dHAuZ2V0KCcvYXV0b3N1Z2dlc3QvZGF0YScpCiAgICAgIC50aGVuKHJlcyA9PiB7IHRoaXMuZGF0YXN1Z2dlc3QgPSByZXMgfSkKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uSW5wdXRDaGFuZ2UodGV4dCkgewogICAgICBpZiAodGV4dCA9PT0gJycgfHwgdGV4dCA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KCiAgICAgIC8qIEZ1bGwgY29udHJvbCBvdmVyIGZpbHRlcmluZy4gTWF5YmUgZmV0Y2ggZnJvbSBBUEk/ISBVcCB0byB5b3UhISEgKi8KICAgICAgY29uc3QgZmlsdGVyZWREZXZlbG9wZXJzID0gdGhpcy5kYXRhc3VnZ2VzdC5kYXRhWzBdLmRldmVsb3BlcnMuZmlsdGVyKGl0ZW0gPT4gaXRlbS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZih0ZXh0LnRvTG93ZXJDYXNlKCkpID4gLTEpLnNsaWNlKDAsIHRoaXMubGltaXQpCiAgICAgIGNvbnN0IGZpbHRlcmVkRGVzaWduZXIgPSB0aGlzLmRhdGFzdWdnZXN0LmRhdGFbMF0uZGVzaWduZXJzLmZpbHRlcihpdGVtID0+IGl0ZW0ubmFtZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YodGV4dC50b0xvd2VyQ2FzZSgpKSA+IC0xKS5zbGljZSgwLCB0aGlzLmxpbWl0KQogICAgICBjb25zdCBmaWx0ZXJlZERhdGEgPSBmaWx0ZXJlZERldmVsb3BlcnMuY29uY2F0KGZpbHRlcmVkRGVzaWduZXIpCiAgICAgIHRoaXMuZmlsdGVyZWRPcHRpb25zID0gW3sKICAgICAgICBkYXRhOiBmaWx0ZXJlZERhdGEsCiAgICAgIH1dCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["AutoSuggestBasic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutoSuggestBasic.vue","sourceRoot":"src/views/forms/form-element/autosuggest","sourcesContent":["<template>\n  <b-card-code title=\"Basic\">\n    <vue-autosuggest\n      :suggestions=\"filteredOptions\"\n      :limit=\"10\"\n      :input-props=\"{id:'autosuggest__input',class:'form-control', placeholder:'Do you feel lucky?'}\"\n      @input=\"onInputChange\"\n    >\n      <template slot-scope=\"{suggestion}\">\n        <span class=\"my-suggestion-item\">{{ suggestion.item.name }}</span>\n      </template>\n    </vue-autosuggest>\n\n    <template #code>\n      {{ codeBasic }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport { VueAutosuggest } from 'vue-autosuggest'\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport { codeBasic } from './code'\n\nexport default {\n  components: {\n    VueAutosuggest,\n    BCardCode,\n  },\n  data() {\n    return {\n      datasuggest: [],\n      filteredOptions: [],\n      limit: 10,\n      selected: null,\n      codeBasic,\n    }\n  },\n  created() {\n    this.$http.get('/autosuggest/data')\n      .then(res => { this.datasuggest = res })\n  },\n  methods: {\n    onInputChange(text) {\n      if (text === '' || text === undefined) {\n        return\n      }\n\n      /* Full control over filtering. Maybe fetch from API?! Up to you!!! */\n      const filteredDevelopers = this.datasuggest.data[0].developers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\n      const filteredDesigner = this.datasuggest.data[0].designers.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) > -1).slice(0, this.limit)\n      const filteredData = filteredDevelopers.concat(filteredDesigner)\n      this.filteredOptions = [{\n        data: filteredData,\n      }]\n    },\n  },\n}\n</script>\n"]}]}