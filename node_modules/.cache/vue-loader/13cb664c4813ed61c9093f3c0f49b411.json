{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/@core/layouts/layout-horizontal/LayoutHorizontal.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/lucas/Desktop/test/src/@core/layouts/layout-horizontal/LayoutHorizontal.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/css-loader/dist/cjs.js","mtime":1646760975182},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1646760975954},{"path":"/home/lucas/Desktop/test/node_modules/postcss-loader/src/index.js","mtime":1646760975438},{"path":"/home/lucas/Desktop/test/node_modules/sass-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIn5AY29yZS9zY3NzL2Jhc2UvdGhlbWVzL2JvcmRlcmVkLWxheW91dC5zY3NzIjsK"},{"version":3,"sources":["LayoutHorizontal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsNA","file":"LayoutHorizontal.vue","sourceRoot":"src/@core/layouts/layout-horizontal","sourcesContent":["<template>\n  <div\n    class=\"horizontal-layout\"\n    :class=\"[layoutClasses]\"\n    :data-col=\"isNavMenuHidden ? '1-column' : null\"\n    style=\"height:inherit\"\n  >\n\n    <!-- NAVBAR -->\n    <b-navbar\n      :style=\"{\n        backgroundColor: navbarType === 'static' && scrolledTo && skin === 'light' ? 'white' : null,\n        boxShadow: navbarType === 'static' && scrolledTo ? 'rgba(0, 0, 0, 0.05) 0px 4px 20px 0px' : null,\n      }\"\n      :toggleable=\"false\"\n      class=\"header-navbar navbar-shadow align-items-center navbar-brand-center navbar-fixed\"\n      :class=\"{'fixed-top': $store.getters['app/currentBreakPoint'] !== 'xl'}\"\n    >\n      <slot\n        name=\"navbar\"\n        :toggleVerticalMenuActive=\"toggleVerticalMenuActive\"\n      >\n        <app-navbar-horizontal-layout-brand />\n        <app-navbar-horizontal-layout :toggle-vertical-menu-active=\"toggleVerticalMenuActive\" />\n      </slot>\n    </b-navbar>\n    <!--/ NAVBAR -->\n\n    <div class=\"horizontal-menu-wrapper\">\n      <div\n        v-if=\"!isNavMenuHidden\"\n        class=\"header-navbar navbar-expand-sm navbar navbar-horizontal navbar-light navbar-shadow menu-border d-none d-xl-block\"\n        :class=\"[navbarMenuTypeClass]\"\n      >\n        <horizontal-nav-menu />\n      </div>\n\n      <!-- Vertical Nav Menu -->\n      <vertical-nav-menu\n        :is-vertical-menu-active=\"isVerticalMenuActive\"\n        :toggle-vertical-menu-active=\"toggleVerticalMenuActive\"\n        class=\"d-block d-xl-none\"\n      >\n        <template #header=\"slotProps\">\n          <slot\n            name=\"vertical-menu-header\"\n            v-bind=\"slotProps\"\n          />\n        </template>\n      </vertical-nav-menu>\n    <!-- /Vertical Nav Menu -->\n    </div>\n\n    <!-- Vertical Nav Menu Overlay -->\n    <div\n      class=\"sidenav-overlay\"\n      :class=\"overlayClasses\"\n      @click=\"isVerticalMenuActive = false\"\n    />\n    <!-- /Vertical Nav Menu Overlay -->\n\n    <!-- CONTENT -->\n    <!-- CONTENT TYPE: Left -->\n    <transition\n      :name=\"routerTransition\"\n      mode=\"out-in\"\n    >\n      <component\n        :is=\"layoutContentRenderer\"\n        :key=\"layoutContentRenderer === 'layout-content-renderer-left' ? $route.meta.navActiveLink || $route.name : null\"\n      >\n        <template\n          v-for=\"(index, name) in $scopedSlots\"\n          v-slot:[name]=\"data\"\n        >\n          <slot\n            :name=\"name\"\n            v-bind=\"data\"\n          />\n        </template>\n      </component>\n    </transition>\n    <!--/ Content -->\n    <!--/ CONTENT -->\n\n    <!-- Footer -->\n    <footer\n      class=\"footer footer-light\"\n      :class=\"[footerTypeClass]\"\n    >\n      <slot name=\"footer\">\n        <app-footer />\n      </slot>\n    </footer>\n\n    <slot name=\"customizer\" />\n  </div>\n</template>\n\n<script>\nimport AppBreadcrumb from '@core/layouts/components/AppBreadcrumb.vue'\nimport AppNavbarHorizontalLayout from '@core/layouts/components/app-navbar/AppNavbarHorizontalLayout.vue'\nimport AppNavbarHorizontalLayoutBrand from '@core/layouts/components/app-navbar/AppNavbarHorizontalLayoutBrand.vue'\nimport AppFooter from '@core/layouts/components/AppFooter.vue'\nimport useAppConfig from '@core/app-config/useAppConfig'\nimport { BNavbar } from 'bootstrap-vue'\nimport { useScrollListener } from '@core/comp-functions/misc/event-listeners'\n\nimport { onUnmounted } from '@vue/composition-api'\n\n// Content Renderer\nimport LayoutContentRendererDefault from '@core/layouts/components/layout-content-renderer/LayoutContentRendererDefault.vue'\nimport LayoutContentRendererLeft from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeft.vue'\nimport LayoutContentRendererLeftDetached from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeftDetached.vue'\nimport useLayoutHorizontal from './useLayoutHorizontal'\nimport HorizontalNavMenu from './components/horizontal-nav-menu/HorizontalNavMenu.vue'\n\n// Vertical Menu\n/* eslint-disable import/order */\nimport VerticalNavMenu from '@core/layouts/layout-vertical/components/vertical-nav-menu/VerticalNavMenu.vue'\nimport useVerticalLayout from '@core/layouts/layout-vertical/useVerticalLayout'\nimport mixinLayoutHorizontal from './mixinLayoutHorizontal'\n/* eslint-enable import/order */\n\nexport default {\n  components: {\n    AppBreadcrumb,\n    AppNavbarHorizontalLayout,\n    AppNavbarHorizontalLayoutBrand,\n    AppFooter,\n    HorizontalNavMenu,\n\n    BNavbar,\n\n    // Content Renderer\n    LayoutContentRendererDefault,\n    LayoutContentRendererLeft,\n    LayoutContentRendererLeftDetached,\n\n    // Vertical Menu\n    VerticalNavMenu,\n  },\n  mixins: [mixinLayoutHorizontal],\n  computed: {\n    layoutContentRenderer() {\n      const rendererType = this.$route.meta.contentRenderer\n      if (rendererType === 'sidebar-left') return 'layout-content-renderer-left'\n      if (rendererType === 'sidebar-left-detached') return 'layout-content-renderer-left-detached'\n      return 'layout-content-renderer-default'\n    },\n  },\n  setup() {\n    const {\n      skin,\n      navbarType,\n      footerType,\n      routerTransition,\n      isNavMenuHidden,\n    } = useAppConfig()\n\n    // Vertical Menu\n    const {\n      isVerticalMenuActive, toggleVerticalMenuActive, overlayClasses, resizeHandler,\n    } = useVerticalLayout(navbarType, footerType)\n\n    // Resize handler\n    resizeHandler()\n    window.addEventListener('resize', resizeHandler)\n    onUnmounted(() => {\n      window.removeEventListener('resize', resizeHandler)\n    })\n\n    const {\n      navbarMenuTypeClass,\n      layoutClasses,\n      footerTypeClass,\n    } = useLayoutHorizontal(navbarType, footerType, isVerticalMenuActive)\n\n    // Scroll Listener\n    const { scrolledTo } = useScrollListener()\n\n    return {\n      // skin\n      skin,\n\n      // Layout\n      layoutClasses,\n\n      // Navbar\n      navbarType,\n      navbarMenuTypeClass,\n\n      // Menu Hidden\n      isNavMenuHidden,\n\n      // Router Transition\n      routerTransition,\n\n      // Footer\n      footerTypeClass,\n\n      // Scroll Listeners\n      scrolledTo,\n\n      // Vertical Menu\n      isVerticalMenuActive,\n      toggleVerticalMenuActive,\n      overlayClasses,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import \"~@core/scss/base/themes/bordered-layout.scss\";\n</style>\n"]}]}