{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/pages/account-setting/AccountSettingGeneral.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/pages/account-setting/AccountSettingGeneral.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgQkZvcm1GaWxlLCBCQnV0dG9uLCBCRm9ybSwgQkZvcm1Hcm91cCwgQkZvcm1JbnB1dCwgQlJvdywgQkNvbCwgQkFsZXJ0LCBCQ2FyZCwgQkNhcmRUZXh0LCBCTWVkaWEsIEJNZWRpYUFzaWRlLCBCTWVkaWFCb2R5LCBCTGluaywgQkltZywKfSBmcm9tICdib290c3RyYXAtdnVlJwppbXBvcnQgUmlwcGxlIGZyb20gJ3Z1ZS1yaXBwbGUtZGlyZWN0aXZlJwppbXBvcnQgeyB1c2VJbnB1dEltYWdlUmVuZGVyZXIgfSBmcm9tICdAY29yZS9jb21wLWZ1bmN0aW9ucy9mb3Jtcy9mb3JtLXV0aWxzJwppbXBvcnQgeyByZWYgfSBmcm9tICdAdnVlL2NvbXBvc2l0aW9uLWFwaScKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCQnV0dG9uLAogICAgQkZvcm0sCiAgICBCSW1nLAogICAgQkZvcm1GaWxlLAogICAgQkZvcm1Hcm91cCwKICAgIEJGb3JtSW5wdXQsCiAgICBCUm93LAogICAgQkNvbCwKICAgIEJBbGVydCwKICAgIEJDYXJkLAogICAgQkNhcmRUZXh0LAogICAgQk1lZGlhLAogICAgQk1lZGlhQXNpZGUsCiAgICBCTWVkaWFCb2R5LAogICAgQkxpbmssCiAgfSwKICBkaXJlY3RpdmVzOiB7CiAgICBSaXBwbGUsCiAgfSwKICBwcm9wczogewogICAgZ2VuZXJhbERhdGE6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7fSwKICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3B0aW9uc0xvY2FsOiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuZ2VuZXJhbERhdGEpKSwKICAgICAgcHJvZmlsZUZpbGU6IG51bGwsCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXNldEZvcm0oKSB7CiAgICAgIHRoaXMub3B0aW9uc0xvY2FsID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmdlbmVyYWxEYXRhKSkKICAgIH0sCiAgfSwKICBzZXR1cCgpIHsKICAgIGNvbnN0IHJlZklucHV0RWwgPSByZWYobnVsbCkKICAgIGNvbnN0IHByZXZpZXdFbCA9IHJlZihudWxsKQoKICAgIGNvbnN0IHsgaW5wdXRJbWFnZVJlbmRlcmVyIH0gPSB1c2VJbnB1dEltYWdlUmVuZGVyZXIocmVmSW5wdXRFbCwgcHJldmlld0VsKQoKICAgIHJldHVybiB7CiAgICAgIHJlZklucHV0RWwsCiAgICAgIHByZXZpZXdFbCwKICAgICAgaW5wdXRJbWFnZVJlbmRlcmVyLAogICAgfQogIH0sCn0K"},{"version":3,"sources":["AccountSettingGeneral.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccountSettingGeneral.vue","sourceRoot":"src/views/pages/account-setting","sourcesContent":["<template>\n  <b-card>\n\n    <!-- media -->\n    <b-media no-body>\n      <b-media-aside>\n        <b-link>\n          <b-img\n            ref=\"previewEl\"\n            rounded\n            :src=\"optionsLocal.avatar\"\n            height=\"80\"\n          />\n        </b-link>\n        <!--/ avatar -->\n      </b-media-aside>\n\n      <b-media-body class=\"mt-75 ml-75\">\n        <!-- upload button -->\n        <b-button\n          v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n          variant=\"primary\"\n          size=\"sm\"\n          class=\"mb-75 mr-75\"\n          @click=\"$refs.refInputEl.$el.click()\"\n        >\n          Upload\n        </b-button>\n        <b-form-file\n          ref=\"refInputEl\"\n          v-model=\"profileFile\"\n          accept=\".jpg, .png, .gif\"\n          :hidden=\"true\"\n          plain\n          @input=\"inputImageRenderer\"\n        />\n        <!--/ upload button -->\n\n        <!-- reset -->\n        <b-button\n          v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n          variant=\"outline-secondary\"\n          size=\"sm\"\n          class=\"mb-75 mr-75\"\n        >\n          Reset\n        </b-button>\n        <!--/ reset -->\n        <b-card-text>Allowed JPG, GIF or PNG. Max size of 800kB</b-card-text>\n      </b-media-body>\n    </b-media>\n    <!--/ media -->\n\n    <!-- form -->\n    <b-form class=\"mt-2\">\n      <b-row>\n        <b-col sm=\"6\">\n          <b-form-group\n            label=\"Username\"\n            label-for=\"account-username\"\n          >\n            <b-form-input\n              v-model=\"optionsLocal.username\"\n              placeholder=\"Username\"\n              name=\"username\"\n            />\n          </b-form-group>\n        </b-col>\n        <b-col sm=\"6\">\n          <b-form-group\n            label=\"Name\"\n            label-for=\"account-name\"\n          >\n            <b-form-input\n              v-model=\"optionsLocal.fullName\"\n              name=\"name\"\n              placeholder=\"Name\"\n            />\n          </b-form-group>\n        </b-col>\n        <b-col sm=\"6\">\n          <b-form-group\n            label=\"E-mail\"\n            label-for=\"account-e-mail\"\n          >\n            <b-form-input\n              v-model=\"optionsLocal.email\"\n              name=\"email\"\n              placeholder=\"Email\"\n            />\n\n          </b-form-group>\n        </b-col>\n        <b-col sm=\"6\">\n          <b-form-group\n            label=\"Company\"\n            label-for=\"account-company\"\n          >\n            <b-form-input\n              v-model=\"optionsLocal.company\"\n              name=\"company\"\n              placeholder=\"Company name\"\n            />\n          </b-form-group>\n        </b-col>\n\n        <!-- alert -->\n        <b-col\n          cols=\"12\"\n          class=\"mt-75\"\n        >\n          <b-alert\n            show\n            variant=\"warning\"\n            class=\"mb-50\"\n          >\n            <h4 class=\"alert-heading\">\n              Your email is not confirmed. Please check your inbox.\n            </h4>\n            <div class=\"alert-body\">\n              <b-link class=\"alert-link\">\n                Resend confirmation\n              </b-link>\n            </div>\n          </b-alert>\n        </b-col>\n        <!--/ alert -->\n\n        <b-col cols=\"12\">\n          <b-button\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            variant=\"primary\"\n            class=\"mt-2 mr-1\"\n          >\n            Save changes\n          </b-button>\n          <b-button\n            v-ripple.400=\"'rgba(186, 191, 199, 0.15)'\"\n            variant=\"outline-secondary\"\n            type=\"reset\"\n            class=\"mt-2\"\n            @click.prevent=\"resetForm\"\n          >\n            Reset\n          </b-button>\n        </b-col>\n      </b-row>\n    </b-form>\n  </b-card>\n</template>\n\n<script>\nimport {\n  BFormFile, BButton, BForm, BFormGroup, BFormInput, BRow, BCol, BAlert, BCard, BCardText, BMedia, BMediaAside, BMediaBody, BLink, BImg,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport { useInputImageRenderer } from '@core/comp-functions/forms/form-utils'\nimport { ref } from '@vue/composition-api'\n\nexport default {\n  components: {\n    BButton,\n    BForm,\n    BImg,\n    BFormFile,\n    BFormGroup,\n    BFormInput,\n    BRow,\n    BCol,\n    BAlert,\n    BCard,\n    BCardText,\n    BMedia,\n    BMediaAside,\n    BMediaBody,\n    BLink,\n  },\n  directives: {\n    Ripple,\n  },\n  props: {\n    generalData: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      optionsLocal: JSON.parse(JSON.stringify(this.generalData)),\n      profileFile: null,\n    }\n  },\n  methods: {\n    resetForm() {\n      this.optionsLocal = JSON.parse(JSON.stringify(this.generalData))\n    },\n  },\n  setup() {\n    const refInputEl = ref(null)\n    const previewEl = ref(null)\n\n    const { inputImageRenderer } = useInputImageRenderer(refInputEl, previewEl)\n\n    return {\n      refInputEl,\n      previewEl,\n      inputImageRenderer,\n    }\n  },\n}\n</script>\n"]}]}