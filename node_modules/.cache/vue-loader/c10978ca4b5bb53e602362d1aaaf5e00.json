{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/table/bs-table/TableFormatterCallback.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/table/bs-table/TableFormatterCallback.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZS9CQ2FyZENvZGUudnVlJwppbXBvcnQgeyBCVGFibGUsIEJMaW5rIH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZScKaW1wb3J0IHsgY29kZUZvcm1hdHRlckNhbGxiYWNrIH0gZnJvbSAnLi9jb2RlJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJDYXJkQ29kZSwKICAgIEJUYWJsZSwKICAgIEJMaW5rLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpZWxkczogWwogICAgICAgIHsKICAgICAgICAgIGtleTogJ25hbWUnLAogICAgICAgICAgbGFiZWw6ICdGdWxsIE5hbWUnLAogICAgICAgICAgZm9ybWF0dGVyOiB2YWx1ZSA9PiBgJHt2YWx1ZS5maXJzdH0gJHt2YWx1ZS5sYXN0fWAsCiAgICAgICAgfSwKICAgICAgICAvLyBBIHJlZ3VsYXIgY29sdW1uCiAgICAgICAgJ2FnZScsCiAgICAgICAgewogICAgICAgICAgLy8gQSByZWd1bGFyIGNvbHVtbiB3aXRoIGN1c3RvbSBmb3JtYXR0ZXIKICAgICAgICAgIGtleTogJ3NleCcsCiAgICAgICAgICBmb3JtYXR0ZXI6IHZhbHVlID0+IHZhbHVlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgLy8gQSB2aXJ0dWFsIGNvbHVtbiB3aXRoIGN1c3RvbSBmb3JtYXR0ZXIKICAgICAgICAgIGtleTogJ2JpcnRoWWVhcicsCiAgICAgICAgICBsYWJlbDogJ0JpcnRoIFllYXInLAogICAgICAgICAgZm9ybWF0dGVyOiAodmFsdWUsIGtleSwgaXRlbSkgPT4gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpIC0gaXRlbS5hZ2UsCiAgICAgICAgfSwKICAgICAgXSwKICAgICAgaXRlbXM6IFsKICAgICAgICB7IG5hbWU6IHsgZmlyc3Q6ICdKb2huJywgbGFzdDogJ0RvZScgfSwgc2V4OiAnTWFsZScsIGFnZTogNDIgfSwKICAgICAgICB7IG5hbWU6IHsgZmlyc3Q6ICdDbGVtZW5zJywgbGFzdDogJ0RvZScgfSwgc2V4OiAnRmVtYWxlJywgYWdlOiAzNiB9LAogICAgICAgIHsgbmFtZTogeyBmaXJzdDogJ1J1YmluJywgbGFzdDogJ0tpbmNhZGUnIH0sIHNleDogJ21hbGUnLCBhZ2U6IDczIH0sCiAgICAgICAgeyBuYW1lOiB7IGZpcnN0OiAnU2hpcmxleScsIGxhc3Q6ICdQYXJ0cmlkZ2UnIH0sIHNleDogJ2ZlbWFsZScsIGFnZTogNjIgfSwKICAgICAgICB7IG5hbWU6IHsgZmlyc3Q6ICdPbGVua2EnLCBsYXN0OiAnQnJhd2xleScgfSwgc2V4OiAnZmVtYWxlJywgYWdlOiAyNiB9LAogICAgICBdLAogICAgICBjb2RlRm9ybWF0dGVyQ2FsbGJhY2ssCiAgICB9CiAgfSwKfQo="},{"version":3,"sources":["TableFormatterCallback.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TableFormatterCallback.vue","sourceRoot":"src/views/table/bs-table","sourcesContent":["<template>\n  <b-card-code\n    title=\"Formatter callback\"\n    no-body\n  >\n    <b-table\n      :fields=\"fields\"\n      :items=\"items\"\n    >\n      <template #cell(name)=\"data\">\n\n        <!-- `data.value` is the value after formatted by the Formatter -->\n        <b-link :href=\"`#${data.value.replace(/[^a-z]+/i,'-').toLowerCase()}`\">\n          {{ data.value }}\n        </b-link>\n      </template>\n    </b-table>\n\n    <template #code>\n      {{ codeFormatterCallback }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code/BCardCode.vue'\nimport { BTable, BLink } from 'bootstrap-vue'\nimport { codeFormatterCallback } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BTable,\n    BLink,\n  },\n  data() {\n    return {\n      fields: [\n        {\n          key: 'name',\n          label: 'Full Name',\n          formatter: value => `${value.first} ${value.last}`,\n        },\n        // A regular column\n        'age',\n        {\n          // A regular column with custom formatter\n          key: 'sex',\n          formatter: value => value.charAt(0).toUpperCase(),\n        },\n        {\n          // A virtual column with custom formatter\n          key: 'birthYear',\n          label: 'Birth Year',\n          formatter: (value, key, item) => new Date().getFullYear() - item.age,\n        },\n      ],\n      items: [\n        { name: { first: 'John', last: 'Doe' }, sex: 'Male', age: 42 },\n        { name: { first: 'Clemens', last: 'Doe' }, sex: 'Female', age: 36 },\n        { name: { first: 'Rubin', last: 'Kincade' }, sex: 'male', age: 73 },\n        { name: { first: 'Shirley', last: 'Partridge' }, sex: 'female', age: 62 },\n        { name: { first: 'Olenka', last: 'Brawley' }, sex: 'female', age: 26 },\n      ],\n      codeFormatterCallback,\n    }\n  },\n}\n</script>\n"]}]}