{"remainingRequest":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lucas/Desktop/test/src/views/components/avatar/AvatarAction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lucas/Desktop/test/src/views/components/avatar/AvatarAction.vue","mtime":1611055082000},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/babel-loader/lib/index.js","mtime":1646760975446},{"path":"/home/lucas/Desktop/test/node_modules/cache-loader/dist/cjs.js","mtime":1646760974730},{"path":"/home/lucas/Desktop/test/node_modules/vue-loader/lib/index.js","mtime":1646760975666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCQ2FyZENvZGUgZnJvbSAnQGNvcmUvY29tcG9uZW50cy9iLWNhcmQtY29kZScKaW1wb3J0IHsgQkF2YXRhciwgQkNhcmRUZXh0IH0gZnJvbSAnYm9vdHN0cmFwLXZ1ZScKaW1wb3J0IFRvYXN0aWZpY2F0aW9uQ29udGVudCBmcm9tICdAY29yZS9jb21wb25lbnRzL3RvYXN0aWZpY2F0aW9uL1RvYXN0aWZpY2F0aW9uQ29udGVudC52dWUnCmltcG9ydCB7IGNvZGVBY3Rpb24gfSBmcm9tICcuL2NvZGUnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQkNhcmRDb2RlLAogICAgQkF2YXRhciwKICAgIEJDYXJkVGV4dCwKICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB2dWUvbm8tdW51c2VkLWNvbXBvbmVudHMKICAgIFRvYXN0aWZpY2F0aW9uQ29udGVudCwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlQWN0aW9uLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2hvd1RvYXN0KCkgewogICAgICB0aGlzLiR0b2FzdCh7CiAgICAgICAgY29tcG9uZW50OiBUb2FzdGlmaWNhdGlvbkNvbnRlbnQsCiAgICAgICAgcHJvcHM6IHsKICAgICAgICAgIHRpdGxlOiAnTm90aWZpY2F0aW9uJywKICAgICAgICAgIGljb246ICdCZWxsSWNvbicsCiAgICAgICAgfSwKICAgICAgfSkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["AvatarAction.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AvatarAction.vue","sourceRoot":"src/views/components/avatar","sourcesContent":["<template>\n  <b-card-code title=\"Actionable avatars\">\n    <b-card-text class=\"mb-0\">\n      <span>Want to trigger the opening of a modal or trigger an action? Set the button prop to instruct</span>\n      <code>&lt;b-avatar&gt;</code>\n      <span> to render as a </span>\n      <code>&lt;button&gt;</code>\n      <span> element.</span>\n    </b-card-text>\n\n    <div class=\"demo-inline-spacing\">\n\n      <!-- button avatar -->\n      <b-avatar\n        button\n        variant=\"primary\"\n        text=\"BA\"\n        class=\"align-baseline\"\n        @click=\"showToast\"\n      />\n      <span> Button Avatar</span>\n\n      <!-- link avatar -->\n      <b-avatar\n        href=\"#foobar\"\n        :src=\"require('@/assets/images/portrait/small/avatar-s-8.jpg')\"\n      />\n      <span>Link Avatar</span>\n    </div>\n\n    <template #code>\n      {{ codeAction }}\n    </template>\n  </b-card-code>\n</template>\n\n<script>\nimport BCardCode from '@core/components/b-card-code'\nimport { BAvatar, BCardText } from 'bootstrap-vue'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport { codeAction } from './code'\n\nexport default {\n  components: {\n    BCardCode,\n    BAvatar,\n    BCardText,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent,\n  },\n  data() {\n    return {\n      codeAction,\n    }\n  },\n  methods: {\n    showToast() {\n      this.$toast({\n        component: ToastificationContent,\n        props: {\n          title: 'Notification',\n          icon: 'BellIcon',\n        },\n      })\n    },\n  },\n}\n</script>\n"]}]}